
BMS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c3ac  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000008a4  0800c580  0800c580  0001c580  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800ce24  0800ce24  000225cc  2**0
                  CONTENTS
  4 .ARM          00000008  0800ce24  0800ce24  0001ce24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800ce2c  0800ce2c  000225cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800ce2c  0800ce2c  0001ce2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800ce30  0800ce30  0001ce30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000025cc  20000000  0800ce34  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000cb4  200025cc  0800f400  000225cc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20003280  0800f400  00023280  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000225cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001ccb1  00000000  00000000  000225fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003f74  00000000  00000000  0003f2ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000018c0  00000000  00000000  00043228  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001700  00000000  00000000  00044ae8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000286c6  00000000  00000000  000461e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001f71b  00000000  00000000  0006e8ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e5d88  00000000  00000000  0008dfc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00173d51  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000078b4  00000000  00000000  00173da4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200025cc 	.word	0x200025cc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800c564 	.word	0x0800c564

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200025d0 	.word	0x200025d0
 800020c:	0800c564 	.word	0x0800c564

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000cdc:	f000 b974 	b.w	8000fc8 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f806 	bl	8000cf8 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__udivmoddi4>:
 8000cf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cfc:	9d08      	ldr	r5, [sp, #32]
 8000cfe:	4604      	mov	r4, r0
 8000d00:	468e      	mov	lr, r1
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	d14d      	bne.n	8000da2 <__udivmoddi4+0xaa>
 8000d06:	428a      	cmp	r2, r1
 8000d08:	4694      	mov	ip, r2
 8000d0a:	d969      	bls.n	8000de0 <__udivmoddi4+0xe8>
 8000d0c:	fab2 f282 	clz	r2, r2
 8000d10:	b152      	cbz	r2, 8000d28 <__udivmoddi4+0x30>
 8000d12:	fa01 f302 	lsl.w	r3, r1, r2
 8000d16:	f1c2 0120 	rsb	r1, r2, #32
 8000d1a:	fa20 f101 	lsr.w	r1, r0, r1
 8000d1e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d22:	ea41 0e03 	orr.w	lr, r1, r3
 8000d26:	4094      	lsls	r4, r2
 8000d28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d2c:	0c21      	lsrs	r1, r4, #16
 8000d2e:	fbbe f6f8 	udiv	r6, lr, r8
 8000d32:	fa1f f78c 	uxth.w	r7, ip
 8000d36:	fb08 e316 	mls	r3, r8, r6, lr
 8000d3a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d3e:	fb06 f107 	mul.w	r1, r6, r7
 8000d42:	4299      	cmp	r1, r3
 8000d44:	d90a      	bls.n	8000d5c <__udivmoddi4+0x64>
 8000d46:	eb1c 0303 	adds.w	r3, ip, r3
 8000d4a:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000d4e:	f080 811f 	bcs.w	8000f90 <__udivmoddi4+0x298>
 8000d52:	4299      	cmp	r1, r3
 8000d54:	f240 811c 	bls.w	8000f90 <__udivmoddi4+0x298>
 8000d58:	3e02      	subs	r6, #2
 8000d5a:	4463      	add	r3, ip
 8000d5c:	1a5b      	subs	r3, r3, r1
 8000d5e:	b2a4      	uxth	r4, r4
 8000d60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d64:	fb08 3310 	mls	r3, r8, r0, r3
 8000d68:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d6c:	fb00 f707 	mul.w	r7, r0, r7
 8000d70:	42a7      	cmp	r7, r4
 8000d72:	d90a      	bls.n	8000d8a <__udivmoddi4+0x92>
 8000d74:	eb1c 0404 	adds.w	r4, ip, r4
 8000d78:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000d7c:	f080 810a 	bcs.w	8000f94 <__udivmoddi4+0x29c>
 8000d80:	42a7      	cmp	r7, r4
 8000d82:	f240 8107 	bls.w	8000f94 <__udivmoddi4+0x29c>
 8000d86:	4464      	add	r4, ip
 8000d88:	3802      	subs	r0, #2
 8000d8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d8e:	1be4      	subs	r4, r4, r7
 8000d90:	2600      	movs	r6, #0
 8000d92:	b11d      	cbz	r5, 8000d9c <__udivmoddi4+0xa4>
 8000d94:	40d4      	lsrs	r4, r2
 8000d96:	2300      	movs	r3, #0
 8000d98:	e9c5 4300 	strd	r4, r3, [r5]
 8000d9c:	4631      	mov	r1, r6
 8000d9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000da2:	428b      	cmp	r3, r1
 8000da4:	d909      	bls.n	8000dba <__udivmoddi4+0xc2>
 8000da6:	2d00      	cmp	r5, #0
 8000da8:	f000 80ef 	beq.w	8000f8a <__udivmoddi4+0x292>
 8000dac:	2600      	movs	r6, #0
 8000dae:	e9c5 0100 	strd	r0, r1, [r5]
 8000db2:	4630      	mov	r0, r6
 8000db4:	4631      	mov	r1, r6
 8000db6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dba:	fab3 f683 	clz	r6, r3
 8000dbe:	2e00      	cmp	r6, #0
 8000dc0:	d14a      	bne.n	8000e58 <__udivmoddi4+0x160>
 8000dc2:	428b      	cmp	r3, r1
 8000dc4:	d302      	bcc.n	8000dcc <__udivmoddi4+0xd4>
 8000dc6:	4282      	cmp	r2, r0
 8000dc8:	f200 80f9 	bhi.w	8000fbe <__udivmoddi4+0x2c6>
 8000dcc:	1a84      	subs	r4, r0, r2
 8000dce:	eb61 0303 	sbc.w	r3, r1, r3
 8000dd2:	2001      	movs	r0, #1
 8000dd4:	469e      	mov	lr, r3
 8000dd6:	2d00      	cmp	r5, #0
 8000dd8:	d0e0      	beq.n	8000d9c <__udivmoddi4+0xa4>
 8000dda:	e9c5 4e00 	strd	r4, lr, [r5]
 8000dde:	e7dd      	b.n	8000d9c <__udivmoddi4+0xa4>
 8000de0:	b902      	cbnz	r2, 8000de4 <__udivmoddi4+0xec>
 8000de2:	deff      	udf	#255	; 0xff
 8000de4:	fab2 f282 	clz	r2, r2
 8000de8:	2a00      	cmp	r2, #0
 8000dea:	f040 8092 	bne.w	8000f12 <__udivmoddi4+0x21a>
 8000dee:	eba1 010c 	sub.w	r1, r1, ip
 8000df2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df6:	fa1f fe8c 	uxth.w	lr, ip
 8000dfa:	2601      	movs	r6, #1
 8000dfc:	0c20      	lsrs	r0, r4, #16
 8000dfe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e02:	fb07 1113 	mls	r1, r7, r3, r1
 8000e06:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e0a:	fb0e f003 	mul.w	r0, lr, r3
 8000e0e:	4288      	cmp	r0, r1
 8000e10:	d908      	bls.n	8000e24 <__udivmoddi4+0x12c>
 8000e12:	eb1c 0101 	adds.w	r1, ip, r1
 8000e16:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000e1a:	d202      	bcs.n	8000e22 <__udivmoddi4+0x12a>
 8000e1c:	4288      	cmp	r0, r1
 8000e1e:	f200 80cb 	bhi.w	8000fb8 <__udivmoddi4+0x2c0>
 8000e22:	4643      	mov	r3, r8
 8000e24:	1a09      	subs	r1, r1, r0
 8000e26:	b2a4      	uxth	r4, r4
 8000e28:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e2c:	fb07 1110 	mls	r1, r7, r0, r1
 8000e30:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e34:	fb0e fe00 	mul.w	lr, lr, r0
 8000e38:	45a6      	cmp	lr, r4
 8000e3a:	d908      	bls.n	8000e4e <__udivmoddi4+0x156>
 8000e3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000e40:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000e44:	d202      	bcs.n	8000e4c <__udivmoddi4+0x154>
 8000e46:	45a6      	cmp	lr, r4
 8000e48:	f200 80bb 	bhi.w	8000fc2 <__udivmoddi4+0x2ca>
 8000e4c:	4608      	mov	r0, r1
 8000e4e:	eba4 040e 	sub.w	r4, r4, lr
 8000e52:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e56:	e79c      	b.n	8000d92 <__udivmoddi4+0x9a>
 8000e58:	f1c6 0720 	rsb	r7, r6, #32
 8000e5c:	40b3      	lsls	r3, r6
 8000e5e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e62:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e66:	fa20 f407 	lsr.w	r4, r0, r7
 8000e6a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e6e:	431c      	orrs	r4, r3
 8000e70:	40f9      	lsrs	r1, r7
 8000e72:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e76:	fa00 f306 	lsl.w	r3, r0, r6
 8000e7a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e7e:	0c20      	lsrs	r0, r4, #16
 8000e80:	fa1f fe8c 	uxth.w	lr, ip
 8000e84:	fb09 1118 	mls	r1, r9, r8, r1
 8000e88:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e8c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e90:	4288      	cmp	r0, r1
 8000e92:	fa02 f206 	lsl.w	r2, r2, r6
 8000e96:	d90b      	bls.n	8000eb0 <__udivmoddi4+0x1b8>
 8000e98:	eb1c 0101 	adds.w	r1, ip, r1
 8000e9c:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000ea0:	f080 8088 	bcs.w	8000fb4 <__udivmoddi4+0x2bc>
 8000ea4:	4288      	cmp	r0, r1
 8000ea6:	f240 8085 	bls.w	8000fb4 <__udivmoddi4+0x2bc>
 8000eaa:	f1a8 0802 	sub.w	r8, r8, #2
 8000eae:	4461      	add	r1, ip
 8000eb0:	1a09      	subs	r1, r1, r0
 8000eb2:	b2a4      	uxth	r4, r4
 8000eb4:	fbb1 f0f9 	udiv	r0, r1, r9
 8000eb8:	fb09 1110 	mls	r1, r9, r0, r1
 8000ebc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000ec0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000ec4:	458e      	cmp	lr, r1
 8000ec6:	d908      	bls.n	8000eda <__udivmoddi4+0x1e2>
 8000ec8:	eb1c 0101 	adds.w	r1, ip, r1
 8000ecc:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000ed0:	d26c      	bcs.n	8000fac <__udivmoddi4+0x2b4>
 8000ed2:	458e      	cmp	lr, r1
 8000ed4:	d96a      	bls.n	8000fac <__udivmoddi4+0x2b4>
 8000ed6:	3802      	subs	r0, #2
 8000ed8:	4461      	add	r1, ip
 8000eda:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000ede:	fba0 9402 	umull	r9, r4, r0, r2
 8000ee2:	eba1 010e 	sub.w	r1, r1, lr
 8000ee6:	42a1      	cmp	r1, r4
 8000ee8:	46c8      	mov	r8, r9
 8000eea:	46a6      	mov	lr, r4
 8000eec:	d356      	bcc.n	8000f9c <__udivmoddi4+0x2a4>
 8000eee:	d053      	beq.n	8000f98 <__udivmoddi4+0x2a0>
 8000ef0:	b15d      	cbz	r5, 8000f0a <__udivmoddi4+0x212>
 8000ef2:	ebb3 0208 	subs.w	r2, r3, r8
 8000ef6:	eb61 010e 	sbc.w	r1, r1, lr
 8000efa:	fa01 f707 	lsl.w	r7, r1, r7
 8000efe:	fa22 f306 	lsr.w	r3, r2, r6
 8000f02:	40f1      	lsrs	r1, r6
 8000f04:	431f      	orrs	r7, r3
 8000f06:	e9c5 7100 	strd	r7, r1, [r5]
 8000f0a:	2600      	movs	r6, #0
 8000f0c:	4631      	mov	r1, r6
 8000f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f12:	f1c2 0320 	rsb	r3, r2, #32
 8000f16:	40d8      	lsrs	r0, r3
 8000f18:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f1c:	fa21 f303 	lsr.w	r3, r1, r3
 8000f20:	4091      	lsls	r1, r2
 8000f22:	4301      	orrs	r1, r0
 8000f24:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f28:	fa1f fe8c 	uxth.w	lr, ip
 8000f2c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f30:	fb07 3610 	mls	r6, r7, r0, r3
 8000f34:	0c0b      	lsrs	r3, r1, #16
 8000f36:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f3a:	fb00 f60e 	mul.w	r6, r0, lr
 8000f3e:	429e      	cmp	r6, r3
 8000f40:	fa04 f402 	lsl.w	r4, r4, r2
 8000f44:	d908      	bls.n	8000f58 <__udivmoddi4+0x260>
 8000f46:	eb1c 0303 	adds.w	r3, ip, r3
 8000f4a:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000f4e:	d22f      	bcs.n	8000fb0 <__udivmoddi4+0x2b8>
 8000f50:	429e      	cmp	r6, r3
 8000f52:	d92d      	bls.n	8000fb0 <__udivmoddi4+0x2b8>
 8000f54:	3802      	subs	r0, #2
 8000f56:	4463      	add	r3, ip
 8000f58:	1b9b      	subs	r3, r3, r6
 8000f5a:	b289      	uxth	r1, r1
 8000f5c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f60:	fb07 3316 	mls	r3, r7, r6, r3
 8000f64:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f68:	fb06 f30e 	mul.w	r3, r6, lr
 8000f6c:	428b      	cmp	r3, r1
 8000f6e:	d908      	bls.n	8000f82 <__udivmoddi4+0x28a>
 8000f70:	eb1c 0101 	adds.w	r1, ip, r1
 8000f74:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000f78:	d216      	bcs.n	8000fa8 <__udivmoddi4+0x2b0>
 8000f7a:	428b      	cmp	r3, r1
 8000f7c:	d914      	bls.n	8000fa8 <__udivmoddi4+0x2b0>
 8000f7e:	3e02      	subs	r6, #2
 8000f80:	4461      	add	r1, ip
 8000f82:	1ac9      	subs	r1, r1, r3
 8000f84:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f88:	e738      	b.n	8000dfc <__udivmoddi4+0x104>
 8000f8a:	462e      	mov	r6, r5
 8000f8c:	4628      	mov	r0, r5
 8000f8e:	e705      	b.n	8000d9c <__udivmoddi4+0xa4>
 8000f90:	4606      	mov	r6, r0
 8000f92:	e6e3      	b.n	8000d5c <__udivmoddi4+0x64>
 8000f94:	4618      	mov	r0, r3
 8000f96:	e6f8      	b.n	8000d8a <__udivmoddi4+0x92>
 8000f98:	454b      	cmp	r3, r9
 8000f9a:	d2a9      	bcs.n	8000ef0 <__udivmoddi4+0x1f8>
 8000f9c:	ebb9 0802 	subs.w	r8, r9, r2
 8000fa0:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000fa4:	3801      	subs	r0, #1
 8000fa6:	e7a3      	b.n	8000ef0 <__udivmoddi4+0x1f8>
 8000fa8:	4646      	mov	r6, r8
 8000faa:	e7ea      	b.n	8000f82 <__udivmoddi4+0x28a>
 8000fac:	4620      	mov	r0, r4
 8000fae:	e794      	b.n	8000eda <__udivmoddi4+0x1e2>
 8000fb0:	4640      	mov	r0, r8
 8000fb2:	e7d1      	b.n	8000f58 <__udivmoddi4+0x260>
 8000fb4:	46d0      	mov	r8, sl
 8000fb6:	e77b      	b.n	8000eb0 <__udivmoddi4+0x1b8>
 8000fb8:	3b02      	subs	r3, #2
 8000fba:	4461      	add	r1, ip
 8000fbc:	e732      	b.n	8000e24 <__udivmoddi4+0x12c>
 8000fbe:	4630      	mov	r0, r6
 8000fc0:	e709      	b.n	8000dd6 <__udivmoddi4+0xde>
 8000fc2:	4464      	add	r4, ip
 8000fc4:	3802      	subs	r0, #2
 8000fc6:	e742      	b.n	8000e4e <__udivmoddi4+0x156>

08000fc8 <__aeabi_idiv0>:
 8000fc8:	4770      	bx	lr
 8000fca:	bf00      	nop

08000fcc <FEB_BMS_AIR_Open>:
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	af00      	add	r7, sp, #0
 8000fd0:	2200      	movs	r2, #0
 8000fd2:	2104      	movs	r1, #4
 8000fd4:	4802      	ldr	r0, [pc, #8]	; (8000fe0 <FEB_BMS_AIR_Open+0x14>)
 8000fd6:	f005 fca3 	bl	8006920 <HAL_GPIO_WritePin>
 8000fda:	bf00      	nop
 8000fdc:	bd80      	pop	{r7, pc}
 8000fde:	bf00      	nop
 8000fe0:	40020800 	.word	0x40020800

08000fe4 <FEB_BMS_AIR_Close>:
 8000fe4:	b580      	push	{r7, lr}
 8000fe6:	af00      	add	r7, sp, #0
 8000fe8:	2201      	movs	r2, #1
 8000fea:	2104      	movs	r1, #4
 8000fec:	4802      	ldr	r0, [pc, #8]	; (8000ff8 <FEB_BMS_AIR_Close+0x14>)
 8000fee:	f005 fc97 	bl	8006920 <HAL_GPIO_WritePin>
 8000ff2:	bf00      	nop
 8000ff4:	bd80      	pop	{r7, pc}
 8000ff6:	bf00      	nop
 8000ff8:	40020800 	.word	0x40020800

08000ffc <FEB_BMS_Shutdown_Startup>:

uint8_t FEB_BMS_Shutdown_State = 0;		// 0 - not shutdown, 1 - shutdown

// ********************************** Functions **********************************

void FEB_BMS_Shutdown_Startup(void) {
 8000ffc:	b580      	push	{r7, lr}
 8000ffe:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_SET);
 8001000:	2201      	movs	r2, #1
 8001002:	2102      	movs	r1, #2
 8001004:	4802      	ldr	r0, [pc, #8]	; (8001010 <FEB_BMS_Shutdown_Startup+0x14>)
 8001006:	f005 fc8b 	bl	8006920 <HAL_GPIO_WritePin>
}
 800100a:	bf00      	nop
 800100c:	bd80      	pop	{r7, pc}
 800100e:	bf00      	nop
 8001010:	40020800 	.word	0x40020800

08001014 <FEB_BMS_Shutdown_Initiate>:

void FEB_BMS_Shutdown_Initiate(char shutdown_message[]) {
 8001014:	b580      	push	{r7, lr}
 8001016:	b0a2      	sub	sp, #136	; 0x88
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
	FEB_BMS_Shutdown_State = 1;
 800101c:	4b1d      	ldr	r3, [pc, #116]	; (8001094 <FEB_BMS_Shutdown_Initiate+0x80>)
 800101e:	2201      	movs	r2, #1
 8001020:	701a      	strb	r2, [r3, #0]

	// Shutdown Circuit
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1, GPIO_PIN_RESET);
 8001022:	2200      	movs	r2, #0
 8001024:	2102      	movs	r1, #2
 8001026:	481c      	ldr	r0, [pc, #112]	; (8001098 <FEB_BMS_Shutdown_Initiate+0x84>)
 8001028:	f005 fc7a 	bl	8006920 <HAL_GPIO_WritePin>

	// Open AIR Circuit
	FEB_BMS_AIR_Open();
 800102c:	f7ff ffce 	bl	8000fcc <FEB_BMS_AIR_Open>

	// Broadcast Message
	char str[128];
	sprintf(str, "Shutdown: %s.", shutdown_message);
 8001030:	f107 0308 	add.w	r3, r7, #8
 8001034:	687a      	ldr	r2, [r7, #4]
 8001036:	4919      	ldr	r1, [pc, #100]	; (800109c <FEB_BMS_Shutdown_Initiate+0x88>)
 8001038:	4618      	mov	r0, r3
 800103a:	f009 f8bb 	bl	800a1b4 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*) str, strlen(str), 100);
 800103e:	f107 0308 	add.w	r3, r7, #8
 8001042:	4618      	mov	r0, r3
 8001044:	f7ff f8e4 	bl	8000210 <strlen>
 8001048:	4603      	mov	r3, r0
 800104a:	b29a      	uxth	r2, r3
 800104c:	f107 0108 	add.w	r1, r7, #8
 8001050:	2364      	movs	r3, #100	; 0x64
 8001052:	4813      	ldr	r0, [pc, #76]	; (80010a0 <FEB_BMS_Shutdown_Initiate+0x8c>)
 8001054:	f007 ff9d 	bl	8008f92 <HAL_UART_Transmit>
	if (FEB_CAN_CHARGER_STATE == 1) {
		FEB_CAN_Charger_Stop_Charge(&hcan1);
	}

	// Turn off fans
	FEB_Fan_All_Speed_Set(0);
 8001058:	2000      	movs	r0, #0
 800105a:	f000 fc07 	bl	800186c <FEB_Fan_All_Speed_Set>
	
	// Do nothing
	sprintf(str, "shutting down: %s.\n", shutdown_message);
 800105e:	f107 0308 	add.w	r3, r7, #8
 8001062:	687a      	ldr	r2, [r7, #4]
 8001064:	490f      	ldr	r1, [pc, #60]	; (80010a4 <FEB_BMS_Shutdown_Initiate+0x90>)
 8001066:	4618      	mov	r0, r3
 8001068:	f009 f8a4 	bl	800a1b4 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*) str, strlen(str), 100);
 800106c:	f107 0308 	add.w	r3, r7, #8
 8001070:	4618      	mov	r0, r3
 8001072:	f7ff f8cd 	bl	8000210 <strlen>
 8001076:	4603      	mov	r3, r0
 8001078:	b29a      	uxth	r2, r3
 800107a:	f107 0108 	add.w	r1, r7, #8
 800107e:	2364      	movs	r3, #100	; 0x64
 8001080:	4807      	ldr	r0, [pc, #28]	; (80010a0 <FEB_BMS_Shutdown_Initiate+0x8c>)
 8001082:	f007 ff86 	bl	8008f92 <HAL_UART_Transmit>
	HAL_Delay(100);
 8001086:	2064      	movs	r0, #100	; 0x64
 8001088:	f004 f81c 	bl	80050c4 <HAL_Delay>
}
 800108c:	bf00      	nop
 800108e:	3788      	adds	r7, #136	; 0x88
 8001090:	46bd      	mov	sp, r7
 8001092:	bd80      	pop	{r7, pc}
 8001094:	200025e8 	.word	0x200025e8
 8001098:	40020800 	.word	0x40020800
 800109c:	0800c580 	.word	0x0800c580
 80010a0:	20003220 	.word	0x20003220
 80010a4:	0800c590 	.word	0x0800c590

080010a8 <FEB_BMS_State_Validate>:

#include "FEB_BMS_State.h"

// ********************************** Functions **********************************

void FEB_BMS_State_Validate(void) {
 80010a8:	b480      	push	{r7}
 80010aa:	af00      	add	r7, sp, #0
	if (FEB_CAN_CHARGER_STATE == 1 && FEB_LTC6811_BALANCE_STATE == 1) {
		FEB_BMS_Shutdown_Initiate("Charge state and balance state enabled");
	}
}
 80010ac:	bf00      	nop
 80010ae:	46bd      	mov	sp, r7
 80010b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b4:	4770      	bx	lr
	...

080010b8 <FEB_CAN_Init>:
uint8_t FEB_CAN_RxData[8];
uint32_t FEB_CAN_TxMailbox;

// ******************** CAN ********************

void FEB_CAN_Init() {
 80010b8:	b580      	push	{r7, lr}
 80010ba:	af00      	add	r7, sp, #0
	FEB_CAN_Filter_Config();
 80010bc:	f000 f818 	bl	80010f0 <FEB_CAN_Filter_Config>
	if (HAL_CAN_Start(&hcan1) != HAL_OK) {
 80010c0:	4808      	ldr	r0, [pc, #32]	; (80010e4 <FEB_CAN_Init+0x2c>)
 80010c2:	f004 fddb 	bl	8005c7c <HAL_CAN_Start>
 80010c6:	4603      	mov	r3, r0
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d002      	beq.n	80010d2 <FEB_CAN_Init+0x1a>
		FEB_BMS_Shutdown_Initiate("CAN peripheral startup error");
 80010cc:	4806      	ldr	r0, [pc, #24]	; (80010e8 <FEB_CAN_Init+0x30>)
 80010ce:	f7ff ffa1 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
	}
	HAL_CAN_ActivateNotification(&hcan1, FEB_CAN_FIFO_Interrupt);
 80010d2:	4b06      	ldr	r3, [pc, #24]	; (80010ec <FEB_CAN_Init+0x34>)
 80010d4:	681b      	ldr	r3, [r3, #0]
 80010d6:	4619      	mov	r1, r3
 80010d8:	4802      	ldr	r0, [pc, #8]	; (80010e4 <FEB_CAN_Init+0x2c>)
 80010da:	f004 ff25 	bl	8005f28 <HAL_CAN_ActivateNotification>
}
 80010de:	bf00      	nop
 80010e0:	bd80      	pop	{r7, pc}
 80010e2:	bf00      	nop
 80010e4:	200030a0 	.word	0x200030a0
 80010e8:	0800c5a4 	.word	0x0800c5a4
 80010ec:	20000000 	.word	0x20000000

080010f0 <FEB_CAN_Filter_Config>:

void FEB_CAN_Filter_Config() {
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b082      	sub	sp, #8
 80010f4:	af00      	add	r7, sp, #0
	uint8_t bank = 0;
 80010f6:	2300      	movs	r3, #0
 80010f8:	71fb      	strb	r3, [r7, #7]
	bank = FEB_CAN_IVT_Filter_Config(&hcan1, FEB_CAN_FIFO_Assignment, bank);
 80010fa:	4b0f      	ldr	r3, [pc, #60]	; (8001138 <FEB_CAN_Filter_Config+0x48>)
 80010fc:	781b      	ldrb	r3, [r3, #0]
 80010fe:	79fa      	ldrb	r2, [r7, #7]
 8001100:	4619      	mov	r1, r3
 8001102:	480e      	ldr	r0, [pc, #56]	; (800113c <FEB_CAN_Filter_Config+0x4c>)
 8001104:	f000 f910 	bl	8001328 <FEB_CAN_IVT_Filter_Config>
 8001108:	4603      	mov	r3, r0
 800110a:	71fb      	strb	r3, [r7, #7]
	bank = FEB_CAN_Charger_Filter_Config(&hcan1, FEB_CAN_FIFO_Assignment, bank);
 800110c:	4b0a      	ldr	r3, [pc, #40]	; (8001138 <FEB_CAN_Filter_Config+0x48>)
 800110e:	781b      	ldrb	r3, [r3, #0]
 8001110:	79fa      	ldrb	r2, [r7, #7]
 8001112:	4619      	mov	r1, r3
 8001114:	4809      	ldr	r0, [pc, #36]	; (800113c <FEB_CAN_Filter_Config+0x4c>)
 8001116:	f000 f841 	bl	800119c <FEB_CAN_Charger_Filter_Config>
 800111a:	4603      	mov	r3, r0
 800111c:	71fb      	strb	r3, [r7, #7]
	bank = FEB_CAN_Inverter_Filter_Config(&hcan1, FEB_CAN_FIFO_Assignment, bank);
 800111e:	4b06      	ldr	r3, [pc, #24]	; (8001138 <FEB_CAN_Filter_Config+0x48>)
 8001120:	781b      	ldrb	r3, [r3, #0]
 8001122:	79fa      	ldrb	r2, [r7, #7]
 8001124:	4619      	mov	r1, r3
 8001126:	4805      	ldr	r0, [pc, #20]	; (800113c <FEB_CAN_Filter_Config+0x4c>)
 8001128:	f000 fa62 	bl	80015f0 <FEB_CAN_Inverter_Filter_Config>
 800112c:	4603      	mov	r3, r0
 800112e:	71fb      	strb	r3, [r7, #7]
}
 8001130:	bf00      	nop
 8001132:	3708      	adds	r7, #8
 8001134:	46bd      	mov	sp, r7
 8001136:	bd80      	pop	{r7, pc}
 8001138:	20002608 	.word	0x20002608
 800113c:	200030a0 	.word	0x200030a0

08001140 <HAL_CAN_RxFifo0MsgPendingCallback>:

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan) {
 8001140:	b580      	push	{r7, lr}
 8001142:	b082      	sub	sp, #8
 8001144:	af00      	add	r7, sp, #0
 8001146:	6078      	str	r0, [r7, #4]
	if (HAL_CAN_GetRxMessage(hcan, FEB_CAN_FIFO_Assignment, &FEB_CAN_RxHeader, FEB_CAN_RxData) == HAL_OK) {
 8001148:	4b0d      	ldr	r3, [pc, #52]	; (8001180 <HAL_CAN_RxFifo0MsgPendingCallback+0x40>)
 800114a:	781b      	ldrb	r3, [r3, #0]
 800114c:	4619      	mov	r1, r3
 800114e:	4b0d      	ldr	r3, [pc, #52]	; (8001184 <HAL_CAN_RxFifo0MsgPendingCallback+0x44>)
 8001150:	4a0d      	ldr	r2, [pc, #52]	; (8001188 <HAL_CAN_RxFifo0MsgPendingCallback+0x48>)
 8001152:	6878      	ldr	r0, [r7, #4]
 8001154:	f004 fdd6 	bl	8005d04 <HAL_CAN_GetRxMessage>
 8001158:	4603      	mov	r3, r0
 800115a:	2b00      	cmp	r3, #0
 800115c:	d10b      	bne.n	8001176 <HAL_CAN_RxFifo0MsgPendingCallback+0x36>
		FEB_CAN_IVT_Store_Msg(&FEB_CAN_RxHeader, FEB_CAN_RxData);
 800115e:	4909      	ldr	r1, [pc, #36]	; (8001184 <HAL_CAN_RxFifo0MsgPendingCallback+0x44>)
 8001160:	4809      	ldr	r0, [pc, #36]	; (8001188 <HAL_CAN_RxFifo0MsgPendingCallback+0x48>)
 8001162:	f000 f929 	bl	80013b8 <FEB_CAN_IVT_Store_Msg>
		FEB_CAN_Charger_Store_Msg(&FEB_CAN_RxHeader, FEB_CAN_RxData);
 8001166:	4907      	ldr	r1, [pc, #28]	; (8001184 <HAL_CAN_RxFifo0MsgPendingCallback+0x44>)
 8001168:	4807      	ldr	r0, [pc, #28]	; (8001188 <HAL_CAN_RxFifo0MsgPendingCallback+0x48>)
 800116a:	f000 f84d 	bl	8001208 <FEB_CAN_Charger_Store_Msg>
		FEB_CAN_Inverter_Store_Msg(&FEB_CAN_RxHeader, FEB_CAN_RxData);
 800116e:	4905      	ldr	r1, [pc, #20]	; (8001184 <HAL_CAN_RxFifo0MsgPendingCallback+0x44>)
 8001170:	4805      	ldr	r0, [pc, #20]	; (8001188 <HAL_CAN_RxFifo0MsgPendingCallback+0x48>)
 8001172:	f000 fa85 	bl	8001680 <FEB_CAN_Inverter_Store_Msg>
	}
}
 8001176:	bf00      	nop
 8001178:	3708      	adds	r7, #8
 800117a:	46bd      	mov	sp, r7
 800117c:	bd80      	pop	{r7, pc}
 800117e:	bf00      	nop
 8001180:	20002608 	.word	0x20002608
 8001184:	2000260c 	.word	0x2000260c
 8001188:	200025ec 	.word	0x200025ec

0800118c <FEB_CAN_Charger_Init>:

// ********************************** Functions **********************************

// ******************** Startup ********************

void FEB_CAN_Charger_Init() {
 800118c:	b480      	push	{r7}
 800118e:	af00      	add	r7, sp, #0
	if (FEB_CAN_CHARGER_STATE == 0) {
		return;
 8001190:	bf00      	nop
	}
	FEB_CAN_Charger_BMS_Message.max_voltage_dV = (uint16_t) (FEB_LTC6811_CELL_MAX_VOLTAGE * FEB_LTC6811_NUM_CELLS_PER_BANK * FEB_LTC6811_NUM_BANKS * 10);
	FEB_CAN_Charger_BMS_Message.max_current_dA = (uint16_t) (FEB_CAN_CHARGER_MAX_CHARGING_CURRENT * 10);
	FEB_CAN_Charger_BMS_Message.control = 0;
}
 8001192:	46bd      	mov	sp, r7
 8001194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001198:	4770      	bx	lr
	...

0800119c <FEB_CAN_Charger_Filter_Config>:

// ******************** CAN ********************

uint8_t FEB_CAN_Charger_Filter_Config(CAN_HandleTypeDef* hcan, uint8_t FIFO_Assignment, uint8_t bank) {
 800119c:	b580      	push	{r7, lr}
 800119e:	b08c      	sub	sp, #48	; 0x30
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	6078      	str	r0, [r7, #4]
 80011a4:	460b      	mov	r3, r1
 80011a6:	70fb      	strb	r3, [r7, #3]
 80011a8:	4613      	mov	r3, r2
 80011aa:	70bb      	strb	r3, [r7, #2]
	CAN_FilterTypeDef my_can_filter_config;

	my_can_filter_config.FilterActivation = CAN_FILTER_ENABLE;
 80011ac:	2301      	movs	r3, #1
 80011ae:	62bb      	str	r3, [r7, #40]	; 0x28
	my_can_filter_config.FilterBank = bank;
 80011b0:	78bb      	ldrb	r3, [r7, #2]
 80011b2:	61fb      	str	r3, [r7, #28]
	my_can_filter_config.FilterFIFOAssignment = FIFO_Assignment;
 80011b4:	78fb      	ldrb	r3, [r7, #3]
 80011b6:	61bb      	str	r3, [r7, #24]
	my_can_filter_config.FilterIdHigh = FEB_CAN_CHARGER_CHARGER_ID >> 13; 			// First 16 bits
 80011b8:	f24c 73fa 	movw	r3, #51194	; 0xc7fa
 80011bc:	60bb      	str	r3, [r7, #8]
	my_can_filter_config.FilterIdLow = (FEB_CAN_CHARGER_CHARGER_ID & 0x1FFF) << 3;	// Last 13 bits
 80011be:	f248 7328 	movw	r3, #34600	; 0x8728
 80011c2:	60fb      	str	r3, [r7, #12]
	my_can_filter_config.FilterMaskIdHigh = 0xFFFF; 								// Mask first 16 bits
 80011c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80011c8:	613b      	str	r3, [r7, #16]
	my_can_filter_config.FilterMaskIdLow = 0xFFF8;									// Mask last 13 bits
 80011ca:	f64f 73f8 	movw	r3, #65528	; 0xfff8
 80011ce:	617b      	str	r3, [r7, #20]
	my_can_filter_config.FilterMode = CAN_FILTERMODE_IDMASK;
 80011d0:	2300      	movs	r3, #0
 80011d2:	623b      	str	r3, [r7, #32]
	my_can_filter_config.FilterScale = CAN_FILTERSCALE_32BIT;
 80011d4:	2301      	movs	r3, #1
 80011d6:	627b      	str	r3, [r7, #36]	; 0x24
	my_can_filter_config.SlaveStartFilterBank = 27;
 80011d8:	231b      	movs	r3, #27
 80011da:	62fb      	str	r3, [r7, #44]	; 0x2c

	if (HAL_CAN_ConfigFilter(hcan, &my_can_filter_config)) {
 80011dc:	f107 0308 	add.w	r3, r7, #8
 80011e0:	4619      	mov	r1, r3
 80011e2:	6878      	ldr	r0, [r7, #4]
 80011e4:	f004 fc6a 	bl	8005abc <HAL_CAN_ConfigFilter>
 80011e8:	4603      	mov	r3, r0
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d002      	beq.n	80011f4 <FEB_CAN_Charger_Filter_Config+0x58>
		FEB_BMS_Shutdown_Initiate("Invalid charger CAN filter configuration");
 80011ee:	4805      	ldr	r0, [pc, #20]	; (8001204 <FEB_CAN_Charger_Filter_Config+0x68>)
 80011f0:	f7ff ff10 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
	}

	return ++bank;
 80011f4:	78bb      	ldrb	r3, [r7, #2]
 80011f6:	3301      	adds	r3, #1
 80011f8:	70bb      	strb	r3, [r7, #2]
 80011fa:	78bb      	ldrb	r3, [r7, #2]
}
 80011fc:	4618      	mov	r0, r3
 80011fe:	3730      	adds	r7, #48	; 0x30
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}
 8001204:	0800c5c4 	.word	0x0800c5c4

08001208 <FEB_CAN_Charger_Store_Msg>:
	if (HAL_CAN_AddTxMessage(hcan, &FEB_CAN_TxHeader, FEB_CAN_TxData, &FEB_CAN_TxMailbox) != HAL_OK) {
		FEB_BMS_Shutdown_Initiate("CAN charger transmission error");
	}
}

void FEB_CAN_Charger_Store_Msg(CAN_RxHeaderTypeDef* pHeader, uint8_t RxData[]) {
 8001208:	b580      	push	{r7, lr}
 800120a:	b082      	sub	sp, #8
 800120c:	af00      	add	r7, sp, #0
 800120e:	6078      	str	r0, [r7, #4]
 8001210:	6039      	str	r1, [r7, #0]
	switch(pHeader->ExtId) {
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	685b      	ldr	r3, [r3, #4]
 8001216:	4a17      	ldr	r2, [pc, #92]	; (8001274 <FEB_CAN_Charger_Store_Msg+0x6c>)
 8001218:	4293      	cmp	r3, r2
 800121a:	d127      	bne.n	800126c <FEB_CAN_Charger_Store_Msg+0x64>
	    case FEB_CAN_CHARGER_CHARGER_ID:
	    	FEB_CAN_Charger_Charger_Message.operating_voltage_dV = (RxData[0] << 8) + RxData[1];
 800121c:	683b      	ldr	r3, [r7, #0]
 800121e:	781b      	ldrb	r3, [r3, #0]
 8001220:	b29b      	uxth	r3, r3
 8001222:	021b      	lsls	r3, r3, #8
 8001224:	b29a      	uxth	r2, r3
 8001226:	683b      	ldr	r3, [r7, #0]
 8001228:	3301      	adds	r3, #1
 800122a:	781b      	ldrb	r3, [r3, #0]
 800122c:	b29b      	uxth	r3, r3
 800122e:	4413      	add	r3, r2
 8001230:	b29a      	uxth	r2, r3
 8001232:	4b11      	ldr	r3, [pc, #68]	; (8001278 <FEB_CAN_Charger_Store_Msg+0x70>)
 8001234:	801a      	strh	r2, [r3, #0]
	    	FEB_CAN_Charger_Charger_Message.operating_current_dA = (RxData[2] << 8) + RxData[3];
 8001236:	683b      	ldr	r3, [r7, #0]
 8001238:	3302      	adds	r3, #2
 800123a:	781b      	ldrb	r3, [r3, #0]
 800123c:	b29b      	uxth	r3, r3
 800123e:	021b      	lsls	r3, r3, #8
 8001240:	b29a      	uxth	r2, r3
 8001242:	683b      	ldr	r3, [r7, #0]
 8001244:	3303      	adds	r3, #3
 8001246:	781b      	ldrb	r3, [r3, #0]
 8001248:	b29b      	uxth	r3, r3
 800124a:	4413      	add	r3, r2
 800124c:	b29a      	uxth	r2, r3
 800124e:	4b0a      	ldr	r3, [pc, #40]	; (8001278 <FEB_CAN_Charger_Store_Msg+0x70>)
 8001250:	805a      	strh	r2, [r3, #2]
	    	FEB_CAN_Charger_Charger_Message.status = RxData[4];
 8001252:	683b      	ldr	r3, [r7, #0]
 8001254:	3304      	adds	r3, #4
 8001256:	781b      	ldrb	r3, [r3, #0]
 8001258:	b29a      	uxth	r2, r3
 800125a:	4b07      	ldr	r3, [pc, #28]	; (8001278 <FEB_CAN_Charger_Store_Msg+0x70>)
 800125c:	809a      	strh	r2, [r3, #4]
			FEB_CAN_Charger_Validate_Status(RxData[4]);
 800125e:	683b      	ldr	r3, [r7, #0]
 8001260:	3304      	adds	r3, #4
 8001262:	781b      	ldrb	r3, [r3, #0]
 8001264:	4618      	mov	r0, r3
 8001266:	f000 f809 	bl	800127c <FEB_CAN_Charger_Validate_Status>
			break;
 800126a:	bf00      	nop
	}
}
 800126c:	bf00      	nop
 800126e:	3708      	adds	r7, #8
 8001270:	46bd      	mov	sp, r7
 8001272:	bd80      	pop	{r7, pc}
 8001274:	18ff50e5 	.word	0x18ff50e5
 8001278:	20002614 	.word	0x20002614

0800127c <FEB_CAN_Charger_Validate_Status>:

// ******************** Process Data ********************

void FEB_CAN_Charger_Validate_Status(uint8_t status) {
 800127c:	b580      	push	{r7, lr}
 800127e:	b084      	sub	sp, #16
 8001280:	af00      	add	r7, sp, #0
 8001282:	4603      	mov	r3, r0
 8001284:	71fb      	strb	r3, [r7, #7]
	// Failure bits: 0 (no error), 1 (error)
	uint8_t hardware_failure 			= (status >> 7) & 0b1;
 8001286:	79fb      	ldrb	r3, [r7, #7]
 8001288:	09db      	lsrs	r3, r3, #7
 800128a:	73fb      	strb	r3, [r7, #15]
	uint8_t temperature_failure 		= (status >> 6) & 0b1;
 800128c:	79fb      	ldrb	r3, [r7, #7]
 800128e:	099b      	lsrs	r3, r3, #6
 8001290:	b2db      	uxtb	r3, r3
 8001292:	f003 0301 	and.w	r3, r3, #1
 8001296:	73bb      	strb	r3, [r7, #14]
	uint8_t input_voltage_failure 		= (status >> 5) & 0b1;
 8001298:	79fb      	ldrb	r3, [r7, #7]
 800129a:	095b      	lsrs	r3, r3, #5
 800129c:	b2db      	uxtb	r3, r3
 800129e:	f003 0301 	and.w	r3, r3, #1
 80012a2:	737b      	strb	r3, [r7, #13]
	uint8_t starting_state_failure 		= (status >> 4) & 0b1;
 80012a4:	79fb      	ldrb	r3, [r7, #7]
 80012a6:	091b      	lsrs	r3, r3, #4
 80012a8:	b2db      	uxtb	r3, r3
 80012aa:	f003 0301 	and.w	r3, r3, #1
 80012ae:	733b      	strb	r3, [r7, #12]
	uint8_t communication_state_failure = (status >> 3) & 0b1;
 80012b0:	79fb      	ldrb	r3, [r7, #7]
 80012b2:	08db      	lsrs	r3, r3, #3
 80012b4:	b2db      	uxtb	r3, r3
 80012b6:	f003 0301 	and.w	r3, r3, #1
 80012ba:	72fb      	strb	r3, [r7, #11]

	if (hardware_failure == 1) {
 80012bc:	7bfb      	ldrb	r3, [r7, #15]
 80012be:	2b01      	cmp	r3, #1
 80012c0:	d102      	bne.n	80012c8 <FEB_CAN_Charger_Validate_Status+0x4c>
		FEB_BMS_Shutdown_Initiate("CAN charger hardware_failure status error");
 80012c2:	480f      	ldr	r0, [pc, #60]	; (8001300 <FEB_CAN_Charger_Validate_Status+0x84>)
 80012c4:	f7ff fea6 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
	}
	if (temperature_failure == 1) {
 80012c8:	7bbb      	ldrb	r3, [r7, #14]
 80012ca:	2b01      	cmp	r3, #1
 80012cc:	d102      	bne.n	80012d4 <FEB_CAN_Charger_Validate_Status+0x58>
			FEB_BMS_Shutdown_Initiate("CAN charger temperature_failure status error");
 80012ce:	480d      	ldr	r0, [pc, #52]	; (8001304 <FEB_CAN_Charger_Validate_Status+0x88>)
 80012d0:	f7ff fea0 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
		}
	if (input_voltage_failure == 1) {
 80012d4:	7b7b      	ldrb	r3, [r7, #13]
 80012d6:	2b01      	cmp	r3, #1
 80012d8:	d102      	bne.n	80012e0 <FEB_CAN_Charger_Validate_Status+0x64>
			FEB_BMS_Shutdown_Initiate("CAN charger input_voltage_failure status error");
 80012da:	480b      	ldr	r0, [pc, #44]	; (8001308 <FEB_CAN_Charger_Validate_Status+0x8c>)
 80012dc:	f7ff fe9a 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
		}
	if (starting_state_failure == 1) {
 80012e0:	7b3b      	ldrb	r3, [r7, #12]
 80012e2:	2b01      	cmp	r3, #1
 80012e4:	d102      	bne.n	80012ec <FEB_CAN_Charger_Validate_Status+0x70>
			FEB_BMS_Shutdown_Initiate("CAN charger starting_state_failure status error");
 80012e6:	4809      	ldr	r0, [pc, #36]	; (800130c <FEB_CAN_Charger_Validate_Status+0x90>)
 80012e8:	f7ff fe94 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
		}
	if (communication_state_failure == 1) {
 80012ec:	7afb      	ldrb	r3, [r7, #11]
 80012ee:	2b01      	cmp	r3, #1
 80012f0:	d102      	bne.n	80012f8 <FEB_CAN_Charger_Validate_Status+0x7c>
			FEB_BMS_Shutdown_Initiate("CAN charger communication_state_failure status error");
 80012f2:	4807      	ldr	r0, [pc, #28]	; (8001310 <FEB_CAN_Charger_Validate_Status+0x94>)
 80012f4:	f7ff fe8e 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
		}
}
 80012f8:	bf00      	nop
 80012fa:	3710      	adds	r7, #16
 80012fc:	46bd      	mov	sp, r7
 80012fe:	bd80      	pop	{r7, pc}
 8001300:	0800c610 	.word	0x0800c610
 8001304:	0800c63c 	.word	0x0800c63c
 8001308:	0800c66c 	.word	0x0800c66c
 800130c:	0800c69c 	.word	0x0800c69c
 8001310:	0800c6cc 	.word	0x0800c6cc

08001314 <FEB_CAN_Charger_Process>:

void FEB_CAN_Charger_Process(CAN_HandleTypeDef* hcan) {
 8001314:	b480      	push	{r7}
 8001316:	b083      	sub	sp, #12
 8001318:	af00      	add	r7, sp, #0
 800131a:	6078      	str	r0, [r7, #4]
	if (FEB_CAN_CHARGER_STATE == 0 || FEB_CAN_Charger_Stop_Charge_Bool == 1) {
		return;
 800131c:	bf00      	nop
	if (FEB_LTC6811_Cells_Charged() == 1) {
		FEB_CAN_Charger_Stop_Charge(hcan);
	} else {
		FEB_CAN_Charger_Transmit(hcan);
	}
}
 800131e:	370c      	adds	r7, #12
 8001320:	46bd      	mov	sp, r7
 8001322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001326:	4770      	bx	lr

08001328 <FEB_CAN_IVT_Filter_Config>:

// ********************************** Functions **********************************

// ******************** CAN ********************

uint8_t FEB_CAN_IVT_Filter_Config(CAN_HandleTypeDef* hcan, uint8_t FIFO_Assignment, uint8_t bank) {
 8001328:	b580      	push	{r7, lr}
 800132a:	b08e      	sub	sp, #56	; 0x38
 800132c:	af00      	add	r7, sp, #0
 800132e:	6078      	str	r0, [r7, #4]
 8001330:	460b      	mov	r3, r1
 8001332:	70fb      	strb	r3, [r7, #3]
 8001334:	4613      	mov	r3, r2
 8001336:	70bb      	strb	r3, [r7, #2]
	const uint8_t num_filters = (uint8_t) FEB_MATH_ARRAY_LENGTH(FEB_CAN_IVT_Filter_ID_Arr);
 8001338:	2304      	movs	r3, #4
 800133a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
	for (int i = 0; i < num_filters; i++, bank++) {
 800133e:	2300      	movs	r3, #0
 8001340:	637b      	str	r3, [r7, #52]	; 0x34
 8001342:	e02a      	b.n	800139a <FEB_CAN_IVT_Filter_Config+0x72>
		CAN_FilterTypeDef filter_config;

		filter_config.FilterActivation = CAN_FILTER_ENABLE;
 8001344:	2301      	movs	r3, #1
 8001346:	62bb      	str	r3, [r7, #40]	; 0x28
		filter_config.FilterBank = bank;
 8001348:	78bb      	ldrb	r3, [r7, #2]
 800134a:	61fb      	str	r3, [r7, #28]
		filter_config.FilterFIFOAssignment = FIFO_Assignment;
 800134c:	78fb      	ldrb	r3, [r7, #3]
 800134e:	61bb      	str	r3, [r7, #24]
		filter_config.FilterIdHigh = FEB_CAN_IVT_Filter_ID_Arr[i] << 5;
 8001350:	4a17      	ldr	r2, [pc, #92]	; (80013b0 <FEB_CAN_IVT_Filter_Config+0x88>)
 8001352:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001354:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001358:	015b      	lsls	r3, r3, #5
 800135a:	60bb      	str	r3, [r7, #8]
		filter_config.FilterIdLow = 0;
 800135c:	2300      	movs	r3, #0
 800135e:	60fb      	str	r3, [r7, #12]
		filter_config.FilterMaskIdHigh = 0x7FF << 5;
 8001360:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 8001364:	613b      	str	r3, [r7, #16]
		filter_config.FilterMaskIdLow = 0;
 8001366:	2300      	movs	r3, #0
 8001368:	617b      	str	r3, [r7, #20]
		filter_config.FilterMode = CAN_FILTERMODE_IDMASK;
 800136a:	2300      	movs	r3, #0
 800136c:	623b      	str	r3, [r7, #32]
		filter_config.FilterScale = CAN_FILTERSCALE_32BIT;
 800136e:	2301      	movs	r3, #1
 8001370:	627b      	str	r3, [r7, #36]	; 0x24
		filter_config.SlaveStartFilterBank = 27;
 8001372:	231b      	movs	r3, #27
 8001374:	62fb      	str	r3, [r7, #44]	; 0x2c

		if(HAL_CAN_ConfigFilter(hcan, &filter_config)) {
 8001376:	f107 0308 	add.w	r3, r7, #8
 800137a:	4619      	mov	r1, r3
 800137c:	6878      	ldr	r0, [r7, #4]
 800137e:	f004 fb9d 	bl	8005abc <HAL_CAN_ConfigFilter>
 8001382:	4603      	mov	r3, r0
 8001384:	2b00      	cmp	r3, #0
 8001386:	d002      	beq.n	800138e <FEB_CAN_IVT_Filter_Config+0x66>
			FEB_BMS_Shutdown_Initiate("Invalid IVT CAN filter configuration");
 8001388:	480a      	ldr	r0, [pc, #40]	; (80013b4 <FEB_CAN_IVT_Filter_Config+0x8c>)
 800138a:	f7ff fe43 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
	for (int i = 0; i < num_filters; i++, bank++) {
 800138e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001390:	3301      	adds	r3, #1
 8001392:	637b      	str	r3, [r7, #52]	; 0x34
 8001394:	78bb      	ldrb	r3, [r7, #2]
 8001396:	3301      	adds	r3, #1
 8001398:	70bb      	strb	r3, [r7, #2]
 800139a:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800139e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80013a0:	429a      	cmp	r2, r3
 80013a2:	dbcf      	blt.n	8001344 <FEB_CAN_IVT_Filter_Config+0x1c>
		}
	}
	return bank;
 80013a4:	78bb      	ldrb	r3, [r7, #2]
}
 80013a6:	4618      	mov	r0, r3
 80013a8:	3738      	adds	r7, #56	; 0x38
 80013aa:	46bd      	mov	sp, r7
 80013ac:	bd80      	pop	{r7, pc}
 80013ae:	bf00      	nop
 80013b0:	20000004 	.word	0x20000004
 80013b4:	0800c704 	.word	0x0800c704

080013b8 <FEB_CAN_IVT_Store_Msg>:

void FEB_CAN_IVT_Store_Msg(CAN_RxHeaderTypeDef* pHeader, uint8_t RxData[]) {
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b084      	sub	sp, #16
 80013bc:	af00      	add	r7, sp, #0
 80013be:	6078      	str	r0, [r7, #4]
 80013c0:	6039      	str	r1, [r7, #0]
	uint32_t value;
    switch(pHeader->StdId) {
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	681b      	ldr	r3, [r3, #0]
 80013c6:	f2a3 5321 	subw	r3, r3, #1313	; 0x521
 80013ca:	2b03      	cmp	r3, #3
 80013cc:	d87e      	bhi.n	80014cc <FEB_CAN_IVT_Store_Msg+0x114>
 80013ce:	a201      	add	r2, pc, #4	; (adr r2, 80013d4 <FEB_CAN_IVT_Store_Msg+0x1c>)
 80013d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013d4:	080013e5 	.word	0x080013e5
 80013d8:	0800141f 	.word	0x0800141f
 80013dc:	08001459 	.word	0x08001459
 80013e0:	08001493 	.word	0x08001493
    	case FEB_CAN_IVT_CURRENT_ID:
    		value = (RxData[2] << 24) + (RxData[3] << 16) + (RxData[4] << 8) + RxData[5];
 80013e4:	683b      	ldr	r3, [r7, #0]
 80013e6:	3302      	adds	r3, #2
 80013e8:	781b      	ldrb	r3, [r3, #0]
 80013ea:	061a      	lsls	r2, r3, #24
 80013ec:	683b      	ldr	r3, [r7, #0]
 80013ee:	3303      	adds	r3, #3
 80013f0:	781b      	ldrb	r3, [r3, #0]
 80013f2:	041b      	lsls	r3, r3, #16
 80013f4:	441a      	add	r2, r3
 80013f6:	683b      	ldr	r3, [r7, #0]
 80013f8:	3304      	adds	r3, #4
 80013fa:	781b      	ldrb	r3, [r3, #0]
 80013fc:	021b      	lsls	r3, r3, #8
 80013fe:	4413      	add	r3, r2
 8001400:	683a      	ldr	r2, [r7, #0]
 8001402:	3205      	adds	r2, #5
 8001404:	7812      	ldrb	r2, [r2, #0]
 8001406:	4413      	add	r3, r2
 8001408:	60fb      	str	r3, [r7, #12]
    	    FEB_CAN_IVT_MESSAGE.current_mA = FEB_Math_Uint32_To_Signed_Long(value);
 800140a:	68f8      	ldr	r0, [r7, #12]
 800140c:	f001 fad4 	bl	80029b8 <FEB_Math_Uint32_To_Signed_Long>
 8001410:	4603      	mov	r3, r0
 8001412:	4a30      	ldr	r2, [pc, #192]	; (80014d4 <FEB_CAN_IVT_Store_Msg+0x11c>)
 8001414:	6013      	str	r3, [r2, #0]
    	    FEB_CAN_IVT_FLAG.current = 1;
 8001416:	4b30      	ldr	r3, [pc, #192]	; (80014d8 <FEB_CAN_IVT_Store_Msg+0x120>)
 8001418:	2201      	movs	r2, #1
 800141a:	701a      	strb	r2, [r3, #0]
    		break;
 800141c:	e056      	b.n	80014cc <FEB_CAN_IVT_Store_Msg+0x114>
    	case FEB_CAN_IVT_VOLTAGE_1_ID:
    		value = (RxData[2] << 24) + (RxData[3] << 16) + (RxData[4] << 8) + RxData[5];
 800141e:	683b      	ldr	r3, [r7, #0]
 8001420:	3302      	adds	r3, #2
 8001422:	781b      	ldrb	r3, [r3, #0]
 8001424:	061a      	lsls	r2, r3, #24
 8001426:	683b      	ldr	r3, [r7, #0]
 8001428:	3303      	adds	r3, #3
 800142a:	781b      	ldrb	r3, [r3, #0]
 800142c:	041b      	lsls	r3, r3, #16
 800142e:	441a      	add	r2, r3
 8001430:	683b      	ldr	r3, [r7, #0]
 8001432:	3304      	adds	r3, #4
 8001434:	781b      	ldrb	r3, [r3, #0]
 8001436:	021b      	lsls	r3, r3, #8
 8001438:	4413      	add	r3, r2
 800143a:	683a      	ldr	r2, [r7, #0]
 800143c:	3205      	adds	r2, #5
 800143e:	7812      	ldrb	r2, [r2, #0]
 8001440:	4413      	add	r3, r2
 8001442:	60fb      	str	r3, [r7, #12]
    	    FEB_CAN_IVT_MESSAGE.voltage_1_mV = FEB_Math_Uint32_To_Signed_Long(value);
 8001444:	68f8      	ldr	r0, [r7, #12]
 8001446:	f001 fab7 	bl	80029b8 <FEB_Math_Uint32_To_Signed_Long>
 800144a:	4603      	mov	r3, r0
 800144c:	4a21      	ldr	r2, [pc, #132]	; (80014d4 <FEB_CAN_IVT_Store_Msg+0x11c>)
 800144e:	6053      	str	r3, [r2, #4]
    	    FEB_CAN_IVT_FLAG.voltage_1 = 1;
 8001450:	4b21      	ldr	r3, [pc, #132]	; (80014d8 <FEB_CAN_IVT_Store_Msg+0x120>)
 8001452:	2201      	movs	r2, #1
 8001454:	705a      	strb	r2, [r3, #1]
    		break;
 8001456:	e039      	b.n	80014cc <FEB_CAN_IVT_Store_Msg+0x114>
    	case FEB_CAN_IVT_VOLTAGE_2_ID:
    		value = (RxData[2] << 24) + (RxData[3] << 16) + (RxData[4] << 8) + RxData[5];
 8001458:	683b      	ldr	r3, [r7, #0]
 800145a:	3302      	adds	r3, #2
 800145c:	781b      	ldrb	r3, [r3, #0]
 800145e:	061a      	lsls	r2, r3, #24
 8001460:	683b      	ldr	r3, [r7, #0]
 8001462:	3303      	adds	r3, #3
 8001464:	781b      	ldrb	r3, [r3, #0]
 8001466:	041b      	lsls	r3, r3, #16
 8001468:	441a      	add	r2, r3
 800146a:	683b      	ldr	r3, [r7, #0]
 800146c:	3304      	adds	r3, #4
 800146e:	781b      	ldrb	r3, [r3, #0]
 8001470:	021b      	lsls	r3, r3, #8
 8001472:	4413      	add	r3, r2
 8001474:	683a      	ldr	r2, [r7, #0]
 8001476:	3205      	adds	r2, #5
 8001478:	7812      	ldrb	r2, [r2, #0]
 800147a:	4413      	add	r3, r2
 800147c:	60fb      	str	r3, [r7, #12]
    	    FEB_CAN_IVT_MESSAGE.voltage_2_mV = FEB_Math_Uint32_To_Signed_Long(value);
 800147e:	68f8      	ldr	r0, [r7, #12]
 8001480:	f001 fa9a 	bl	80029b8 <FEB_Math_Uint32_To_Signed_Long>
 8001484:	4603      	mov	r3, r0
 8001486:	4a13      	ldr	r2, [pc, #76]	; (80014d4 <FEB_CAN_IVT_Store_Msg+0x11c>)
 8001488:	6093      	str	r3, [r2, #8]
    	    FEB_CAN_IVT_FLAG.voltage_2 = 1;
 800148a:	4b13      	ldr	r3, [pc, #76]	; (80014d8 <FEB_CAN_IVT_Store_Msg+0x120>)
 800148c:	2201      	movs	r2, #1
 800148e:	709a      	strb	r2, [r3, #2]
    		break;
 8001490:	e01c      	b.n	80014cc <FEB_CAN_IVT_Store_Msg+0x114>
    	case FEB_CAN_IVT_VOLTAGE_3_ID:
    		value = (RxData[2] << 24) + (RxData[3] << 16) + (RxData[4] << 8) + RxData[5];
 8001492:	683b      	ldr	r3, [r7, #0]
 8001494:	3302      	adds	r3, #2
 8001496:	781b      	ldrb	r3, [r3, #0]
 8001498:	061a      	lsls	r2, r3, #24
 800149a:	683b      	ldr	r3, [r7, #0]
 800149c:	3303      	adds	r3, #3
 800149e:	781b      	ldrb	r3, [r3, #0]
 80014a0:	041b      	lsls	r3, r3, #16
 80014a2:	441a      	add	r2, r3
 80014a4:	683b      	ldr	r3, [r7, #0]
 80014a6:	3304      	adds	r3, #4
 80014a8:	781b      	ldrb	r3, [r3, #0]
 80014aa:	021b      	lsls	r3, r3, #8
 80014ac:	4413      	add	r3, r2
 80014ae:	683a      	ldr	r2, [r7, #0]
 80014b0:	3205      	adds	r2, #5
 80014b2:	7812      	ldrb	r2, [r2, #0]
 80014b4:	4413      	add	r3, r2
 80014b6:	60fb      	str	r3, [r7, #12]
    		FEB_CAN_IVT_MESSAGE.voltage_3_mV = FEB_Math_Uint32_To_Signed_Long(value);
 80014b8:	68f8      	ldr	r0, [r7, #12]
 80014ba:	f001 fa7d 	bl	80029b8 <FEB_Math_Uint32_To_Signed_Long>
 80014be:	4603      	mov	r3, r0
 80014c0:	4a04      	ldr	r2, [pc, #16]	; (80014d4 <FEB_CAN_IVT_Store_Msg+0x11c>)
 80014c2:	60d3      	str	r3, [r2, #12]
    		FEB_CAN_IVT_FLAG.voltage_3 = 1;
 80014c4:	4b04      	ldr	r3, [pc, #16]	; (80014d8 <FEB_CAN_IVT_Store_Msg+0x120>)
 80014c6:	2201      	movs	r2, #1
 80014c8:	70da      	strb	r2, [r3, #3]
    		break;
 80014ca:	bf00      	nop
    }
}
 80014cc:	bf00      	nop
 80014ce:	3710      	adds	r7, #16
 80014d0:	46bd      	mov	sp, r7
 80014d2:	bd80      	pop	{r7, pc}
 80014d4:	20002620 	.word	0x20002620
 80014d8:	2000261c 	.word	0x2000261c
 80014dc:	00000000 	.word	0x00000000

080014e0 <FEB_CAN_IVT_Process>:

// ******************** Process Data  ********************

void FEB_CAN_IVT_Process(void) {
 80014e0:	b5b0      	push	{r4, r5, r7, lr}
 80014e2:	b082      	sub	sp, #8
 80014e4:	af00      	add	r7, sp, #0
	if (FEB_CAN_CHARGER_STATE == 1 || FEB_LTC6811_BALANCE_STATE == 1) {
		return;
	}
	if (FEB_CAN_IVT_FLAG.current == 1) {
 80014e6:	4b3e      	ldr	r3, [pc, #248]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 80014e8:	781b      	ldrb	r3, [r3, #0]
 80014ea:	2b01      	cmp	r3, #1
 80014ec:	d125      	bne.n	800153a <FEB_CAN_IVT_Process+0x5a>
		FEB_CAN_IVT_FLAG.current = 0;
 80014ee:	4b3c      	ldr	r3, [pc, #240]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 80014f0:	2200      	movs	r2, #0
 80014f2:	701a      	strb	r2, [r3, #0]
		const float current = (float) FEB_CAN_IVT_MESSAGE.current_mA * 0.001;
 80014f4:	4b3b      	ldr	r3, [pc, #236]	; (80015e4 <FEB_CAN_IVT_Process+0x104>)
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	ee07 3a90 	vmov	s15, r3
 80014fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001500:	ee17 0a90 	vmov	r0, s15
 8001504:	f7ff f840 	bl	8000588 <__aeabi_f2d>
 8001508:	a331      	add	r3, pc, #196	; (adr r3, 80015d0 <FEB_CAN_IVT_Process+0xf0>)
 800150a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800150e:	f7ff f893 	bl	8000638 <__aeabi_dmul>
 8001512:	4602      	mov	r2, r0
 8001514:	460b      	mov	r3, r1
 8001516:	4610      	mov	r0, r2
 8001518:	4619      	mov	r1, r3
 800151a:	f7ff fb85 	bl	8000c28 <__aeabi_d2f>
 800151e:	4603      	mov	r3, r0
 8001520:	607b      	str	r3, [r7, #4]
		if (current > FEB_LTC6811_CELL_MAX_OPERATING_CURRENT) {
 8001522:	edd7 7a01 	vldr	s15, [r7, #4]
 8001526:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80015e8 <FEB_CAN_IVT_Process+0x108>
 800152a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800152e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001532:	dd02      	ble.n	800153a <FEB_CAN_IVT_Process+0x5a>
			FEB_BMS_Shutdown_Initiate("IVT over current");
 8001534:	482d      	ldr	r0, [pc, #180]	; (80015ec <FEB_CAN_IVT_Process+0x10c>)
 8001536:	f7ff fd6d 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
		}
	}
	if (FEB_CAN_IVT_FLAG.voltage_1 == 1) {
 800153a:	4b29      	ldr	r3, [pc, #164]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 800153c:	785b      	ldrb	r3, [r3, #1]
 800153e:	2b01      	cmp	r3, #1
 8001540:	d135      	bne.n	80015ae <FEB_CAN_IVT_Process+0xce>
		FEB_CAN_IVT_FLAG.voltage_1 = 0;
 8001542:	4b27      	ldr	r3, [pc, #156]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 8001544:	2200      	movs	r2, #0
 8001546:	705a      	strb	r2, [r3, #1]
		float voltage = (float) FEB_CAN_IVT_MESSAGE.voltage_1_mV * 0.001;
 8001548:	4b26      	ldr	r3, [pc, #152]	; (80015e4 <FEB_CAN_IVT_Process+0x104>)
 800154a:	685b      	ldr	r3, [r3, #4]
 800154c:	ee07 3a90 	vmov	s15, r3
 8001550:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001554:	ee17 0a90 	vmov	r0, s15
 8001558:	f7ff f816 	bl	8000588 <__aeabi_f2d>
 800155c:	a31c      	add	r3, pc, #112	; (adr r3, 80015d0 <FEB_CAN_IVT_Process+0xf0>)
 800155e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001562:	f7ff f869 	bl	8000638 <__aeabi_dmul>
 8001566:	4602      	mov	r2, r0
 8001568:	460b      	mov	r3, r1
 800156a:	4610      	mov	r0, r2
 800156c:	4619      	mov	r1, r3
 800156e:	f7ff fb5b 	bl	8000c28 <__aeabi_d2f>
 8001572:	4603      	mov	r3, r0
 8001574:	603b      	str	r3, [r7, #0]
		if (voltage > FEB_LTC6811_Total_Bank_Voltage() * 0.9) {
 8001576:	6838      	ldr	r0, [r7, #0]
 8001578:	f7ff f806 	bl	8000588 <__aeabi_f2d>
 800157c:	4604      	mov	r4, r0
 800157e:	460d      	mov	r5, r1
 8001580:	f000 fda6 	bl	80020d0 <FEB_LTC6811_Total_Bank_Voltage>
 8001584:	ee10 3a10 	vmov	r3, s0
 8001588:	4618      	mov	r0, r3
 800158a:	f7fe fffd 	bl	8000588 <__aeabi_f2d>
 800158e:	a312      	add	r3, pc, #72	; (adr r3, 80015d8 <FEB_CAN_IVT_Process+0xf8>)
 8001590:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001594:	f7ff f850 	bl	8000638 <__aeabi_dmul>
 8001598:	4602      	mov	r2, r0
 800159a:	460b      	mov	r3, r1
 800159c:	4620      	mov	r0, r4
 800159e:	4629      	mov	r1, r5
 80015a0:	f7ff fada 	bl	8000b58 <__aeabi_dcmpgt>
 80015a4:	4603      	mov	r3, r0
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d001      	beq.n	80015ae <FEB_CAN_IVT_Process+0xce>
		  // comment this out when testing the battery
			FEB_BMS_AIR_Close();
 80015aa:	f7ff fd1b 	bl	8000fe4 <FEB_BMS_AIR_Close>
		}
	}
	if (FEB_CAN_IVT_FLAG.voltage_2 == 1) {
 80015ae:	4b0c      	ldr	r3, [pc, #48]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 80015b0:	789b      	ldrb	r3, [r3, #2]
 80015b2:	2b01      	cmp	r3, #1
 80015b4:	d102      	bne.n	80015bc <FEB_CAN_IVT_Process+0xdc>
		FEB_CAN_IVT_FLAG.voltage_2 = 0;
 80015b6:	4b0a      	ldr	r3, [pc, #40]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 80015b8:	2200      	movs	r2, #0
 80015ba:	709a      	strb	r2, [r3, #2]
		// Do Something
	}
	if (FEB_CAN_IVT_FLAG.voltage_3 == 1) {
 80015bc:	4b08      	ldr	r3, [pc, #32]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 80015be:	78db      	ldrb	r3, [r3, #3]
 80015c0:	2b01      	cmp	r3, #1
 80015c2:	d102      	bne.n	80015ca <FEB_CAN_IVT_Process+0xea>
		FEB_CAN_IVT_FLAG.voltage_3 = 0;
 80015c4:	4b06      	ldr	r3, [pc, #24]	; (80015e0 <FEB_CAN_IVT_Process+0x100>)
 80015c6:	2200      	movs	r2, #0
 80015c8:	70da      	strb	r2, [r3, #3]
		// Do something
	}
}
 80015ca:	3708      	adds	r7, #8
 80015cc:	46bd      	mov	sp, r7
 80015ce:	bdb0      	pop	{r4, r5, r7, pc}
 80015d0:	d2f1a9fc 	.word	0xd2f1a9fc
 80015d4:	3f50624d 	.word	0x3f50624d
 80015d8:	cccccccd 	.word	0xcccccccd
 80015dc:	3feccccc 	.word	0x3feccccc
 80015e0:	2000261c 	.word	0x2000261c
 80015e4:	20002620 	.word	0x20002620
 80015e8:	425c0000 	.word	0x425c0000
 80015ec:	0800c72c 	.word	0x0800c72c

080015f0 <FEB_CAN_Inverter_Filter_Config>:

// ********************************** Functions **********************************

// ******************** CAN ********************

uint8_t FEB_CAN_Inverter_Filter_Config(CAN_HandleTypeDef* hcan, uint8_t FIFO_Assignment, uint8_t bank) {
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b08e      	sub	sp, #56	; 0x38
 80015f4:	af00      	add	r7, sp, #0
 80015f6:	6078      	str	r0, [r7, #4]
 80015f8:	460b      	mov	r3, r1
 80015fa:	70fb      	strb	r3, [r7, #3]
 80015fc:	4613      	mov	r3, r2
 80015fe:	70bb      	strb	r3, [r7, #2]
	uint8_t num_filters = FEB_MATH_ARRAY_LENGTH(FEB_CAN_Inverter_Filter_ID_Arr);
 8001600:	2302      	movs	r3, #2
 8001602:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
	for (int i = 0; i < num_filters; i++, bank++) {
 8001606:	2300      	movs	r3, #0
 8001608:	637b      	str	r3, [r7, #52]	; 0x34
 800160a:	e02a      	b.n	8001662 <FEB_CAN_Inverter_Filter_Config+0x72>
		CAN_FilterTypeDef filter_config;

		filter_config.FilterActivation = CAN_FILTER_ENABLE;
 800160c:	2301      	movs	r3, #1
 800160e:	62bb      	str	r3, [r7, #40]	; 0x28
		filter_config.FilterBank = bank;
 8001610:	78bb      	ldrb	r3, [r7, #2]
 8001612:	61fb      	str	r3, [r7, #28]
		filter_config.FilterFIFOAssignment = FIFO_Assignment;
 8001614:	78fb      	ldrb	r3, [r7, #3]
 8001616:	61bb      	str	r3, [r7, #24]
		filter_config.FilterIdHigh = FEB_CAN_Inverter_Filter_ID_Arr[i] << 5;
 8001618:	4a17      	ldr	r2, [pc, #92]	; (8001678 <FEB_CAN_Inverter_Filter_Config+0x88>)
 800161a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800161c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001620:	015b      	lsls	r3, r3, #5
 8001622:	60bb      	str	r3, [r7, #8]
		filter_config.FilterIdLow = 0;
 8001624:	2300      	movs	r3, #0
 8001626:	60fb      	str	r3, [r7, #12]
		filter_config.FilterMaskIdHigh = 0x7FF << 5;
 8001628:	f64f 73e0 	movw	r3, #65504	; 0xffe0
 800162c:	613b      	str	r3, [r7, #16]
		filter_config.FilterMaskIdLow = 0;
 800162e:	2300      	movs	r3, #0
 8001630:	617b      	str	r3, [r7, #20]
		filter_config.FilterMode = CAN_FILTERMODE_IDMASK;
 8001632:	2300      	movs	r3, #0
 8001634:	623b      	str	r3, [r7, #32]
		filter_config.FilterScale = CAN_FILTERSCALE_32BIT;
 8001636:	2301      	movs	r3, #1
 8001638:	627b      	str	r3, [r7, #36]	; 0x24
		filter_config.SlaveStartFilterBank = 27;
 800163a:	231b      	movs	r3, #27
 800163c:	62fb      	str	r3, [r7, #44]	; 0x2c

		if (HAL_CAN_ConfigFilter(hcan, &filter_config)) {
 800163e:	f107 0308 	add.w	r3, r7, #8
 8001642:	4619      	mov	r1, r3
 8001644:	6878      	ldr	r0, [r7, #4]
 8001646:	f004 fa39 	bl	8005abc <HAL_CAN_ConfigFilter>
 800164a:	4603      	mov	r3, r0
 800164c:	2b00      	cmp	r3, #0
 800164e:	d002      	beq.n	8001656 <FEB_CAN_Inverter_Filter_Config+0x66>
			FEB_BMS_Shutdown_Initiate("Invalid inverter CAN filter configuration");
 8001650:	480a      	ldr	r0, [pc, #40]	; (800167c <FEB_CAN_Inverter_Filter_Config+0x8c>)
 8001652:	f7ff fcdf 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
	for (int i = 0; i < num_filters; i++, bank++) {
 8001656:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001658:	3301      	adds	r3, #1
 800165a:	637b      	str	r3, [r7, #52]	; 0x34
 800165c:	78bb      	ldrb	r3, [r7, #2]
 800165e:	3301      	adds	r3, #1
 8001660:	70bb      	strb	r3, [r7, #2]
 8001662:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8001666:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8001668:	429a      	cmp	r2, r3
 800166a:	dbcf      	blt.n	800160c <FEB_CAN_Inverter_Filter_Config+0x1c>
		}
	}
	return bank;
 800166c:	78bb      	ldrb	r3, [r7, #2]
}
 800166e:	4618      	mov	r0, r3
 8001670:	3738      	adds	r7, #56	; 0x38
 8001672:	46bd      	mov	sp, r7
 8001674:	bd80      	pop	{r7, pc}
 8001676:	bf00      	nop
 8001678:	2000000c 	.word	0x2000000c
 800167c:	0800c740 	.word	0x0800c740

08001680 <FEB_CAN_Inverter_Store_Msg>:

void FEB_CAN_Inverter_Store_Msg(CAN_RxHeaderTypeDef* pHeader, uint8_t RxData[]) {
 8001680:	b580      	push	{r7, lr}
 8001682:	b082      	sub	sp, #8
 8001684:	af00      	add	r7, sp, #0
 8001686:	6078      	str	r0, [r7, #4]
 8001688:	6039      	str	r1, [r7, #0]
	switch (pHeader->StdId) {
 800168a:	687b      	ldr	r3, [r7, #4]
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	2ba0      	cmp	r3, #160	; 0xa0
 8001690:	d002      	beq.n	8001698 <FEB_CAN_Inverter_Store_Msg+0x18>
 8001692:	2ba2      	cmp	r3, #162	; 0xa2
 8001694:	d04c      	beq.n	8001730 <FEB_CAN_Inverter_Store_Msg+0xb0>
			break;
		case FEB_CAN_INVERTER_TEMPERATURE_3_ID:
			FEB_CAN_Inverter_Temperature_3_Message.motor_dC = FEB_Math_Uint16_To_Int16((RxData[4] << 8) + RxData[5]);
			break;
	}
}
 8001696:	e05f      	b.n	8001758 <FEB_CAN_Inverter_Store_Msg+0xd8>
			FEB_CAN_Inverter_Temperature_1_Message.phase_a_dC = FEB_Math_Uint16_To_Int16((RxData[0] << 8) + RxData[1]);
 8001698:	683b      	ldr	r3, [r7, #0]
 800169a:	781b      	ldrb	r3, [r3, #0]
 800169c:	b29b      	uxth	r3, r3
 800169e:	021b      	lsls	r3, r3, #8
 80016a0:	b29a      	uxth	r2, r3
 80016a2:	683b      	ldr	r3, [r7, #0]
 80016a4:	3301      	adds	r3, #1
 80016a6:	781b      	ldrb	r3, [r3, #0]
 80016a8:	b29b      	uxth	r3, r3
 80016aa:	4413      	add	r3, r2
 80016ac:	b29b      	uxth	r3, r3
 80016ae:	4618      	mov	r0, r3
 80016b0:	f001 f991 	bl	80029d6 <FEB_Math_Uint16_To_Int16>
 80016b4:	4603      	mov	r3, r0
 80016b6:	461a      	mov	r2, r3
 80016b8:	4b29      	ldr	r3, [pc, #164]	; (8001760 <FEB_CAN_Inverter_Store_Msg+0xe0>)
 80016ba:	801a      	strh	r2, [r3, #0]
			FEB_CAN_Inverter_Temperature_1_Message.phase_b_dC = FEB_Math_Uint16_To_Int16((RxData[2] << 8) + RxData[3]);
 80016bc:	683b      	ldr	r3, [r7, #0]
 80016be:	3302      	adds	r3, #2
 80016c0:	781b      	ldrb	r3, [r3, #0]
 80016c2:	b29b      	uxth	r3, r3
 80016c4:	021b      	lsls	r3, r3, #8
 80016c6:	b29a      	uxth	r2, r3
 80016c8:	683b      	ldr	r3, [r7, #0]
 80016ca:	3303      	adds	r3, #3
 80016cc:	781b      	ldrb	r3, [r3, #0]
 80016ce:	b29b      	uxth	r3, r3
 80016d0:	4413      	add	r3, r2
 80016d2:	b29b      	uxth	r3, r3
 80016d4:	4618      	mov	r0, r3
 80016d6:	f001 f97e 	bl	80029d6 <FEB_Math_Uint16_To_Int16>
 80016da:	4603      	mov	r3, r0
 80016dc:	461a      	mov	r2, r3
 80016de:	4b20      	ldr	r3, [pc, #128]	; (8001760 <FEB_CAN_Inverter_Store_Msg+0xe0>)
 80016e0:	805a      	strh	r2, [r3, #2]
			FEB_CAN_Inverter_Temperature_1_Message.phase_c_dC = FEB_Math_Uint16_To_Int16((RxData[4] << 8) + RxData[5]);
 80016e2:	683b      	ldr	r3, [r7, #0]
 80016e4:	3304      	adds	r3, #4
 80016e6:	781b      	ldrb	r3, [r3, #0]
 80016e8:	b29b      	uxth	r3, r3
 80016ea:	021b      	lsls	r3, r3, #8
 80016ec:	b29a      	uxth	r2, r3
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	3305      	adds	r3, #5
 80016f2:	781b      	ldrb	r3, [r3, #0]
 80016f4:	b29b      	uxth	r3, r3
 80016f6:	4413      	add	r3, r2
 80016f8:	b29b      	uxth	r3, r3
 80016fa:	4618      	mov	r0, r3
 80016fc:	f001 f96b 	bl	80029d6 <FEB_Math_Uint16_To_Int16>
 8001700:	4603      	mov	r3, r0
 8001702:	461a      	mov	r2, r3
 8001704:	4b16      	ldr	r3, [pc, #88]	; (8001760 <FEB_CAN_Inverter_Store_Msg+0xe0>)
 8001706:	809a      	strh	r2, [r3, #4]
			FEB_CAN_Inverter_Temperature_1_Message.gate_driver_board_dC = FEB_Math_Uint16_To_Int16((RxData[6] << 8) + RxData[7]);
 8001708:	683b      	ldr	r3, [r7, #0]
 800170a:	3306      	adds	r3, #6
 800170c:	781b      	ldrb	r3, [r3, #0]
 800170e:	b29b      	uxth	r3, r3
 8001710:	021b      	lsls	r3, r3, #8
 8001712:	b29a      	uxth	r2, r3
 8001714:	683b      	ldr	r3, [r7, #0]
 8001716:	3307      	adds	r3, #7
 8001718:	781b      	ldrb	r3, [r3, #0]
 800171a:	b29b      	uxth	r3, r3
 800171c:	4413      	add	r3, r2
 800171e:	b29b      	uxth	r3, r3
 8001720:	4618      	mov	r0, r3
 8001722:	f001 f958 	bl	80029d6 <FEB_Math_Uint16_To_Int16>
 8001726:	4603      	mov	r3, r0
 8001728:	461a      	mov	r2, r3
 800172a:	4b0d      	ldr	r3, [pc, #52]	; (8001760 <FEB_CAN_Inverter_Store_Msg+0xe0>)
 800172c:	80da      	strh	r2, [r3, #6]
			break;
 800172e:	e013      	b.n	8001758 <FEB_CAN_Inverter_Store_Msg+0xd8>
			FEB_CAN_Inverter_Temperature_3_Message.motor_dC = FEB_Math_Uint16_To_Int16((RxData[4] << 8) + RxData[5]);
 8001730:	683b      	ldr	r3, [r7, #0]
 8001732:	3304      	adds	r3, #4
 8001734:	781b      	ldrb	r3, [r3, #0]
 8001736:	b29b      	uxth	r3, r3
 8001738:	021b      	lsls	r3, r3, #8
 800173a:	b29a      	uxth	r2, r3
 800173c:	683b      	ldr	r3, [r7, #0]
 800173e:	3305      	adds	r3, #5
 8001740:	781b      	ldrb	r3, [r3, #0]
 8001742:	b29b      	uxth	r3, r3
 8001744:	4413      	add	r3, r2
 8001746:	b29b      	uxth	r3, r3
 8001748:	4618      	mov	r0, r3
 800174a:	f001 f944 	bl	80029d6 <FEB_Math_Uint16_To_Int16>
 800174e:	4603      	mov	r3, r0
 8001750:	461a      	mov	r2, r3
 8001752:	4b04      	ldr	r3, [pc, #16]	; (8001764 <FEB_CAN_Inverter_Store_Msg+0xe4>)
 8001754:	801a      	strh	r2, [r3, #0]
			break;
 8001756:	bf00      	nop
}
 8001758:	bf00      	nop
 800175a:	3708      	adds	r7, #8
 800175c:	46bd      	mov	sp, r7
 800175e:	bd80      	pop	{r7, pc}
 8001760:	20002630 	.word	0x20002630
 8001764:	20002638 	.word	0x20002638

08001768 <FEB_CAN_Inverter_Process>:

// ******************** Process Data ********************

void FEB_CAN_Inverter_Process(void) {
 8001768:	b580      	push	{r7, lr}
 800176a:	b082      	sub	sp, #8
 800176c:	af00      	add	r7, sp, #0
	uint8_t num_temperatures = FEB_MATH_ARRAY_LENGTH(FEB_CAN_Inverter_Temperatures_dC);
 800176e:	2305      	movs	r3, #5
 8001770:	71bb      	strb	r3, [r7, #6]
	for (uint8_t i = 0; i < num_temperatures; i++) {
 8001772:	2300      	movs	r3, #0
 8001774:	71fb      	strb	r3, [r7, #7]
 8001776:	e024      	b.n	80017c2 <FEB_CAN_Inverter_Process+0x5a>
		float temperature = *FEB_CAN_Inverter_Temperatures_dC[i] * 0.1;
 8001778:	79fb      	ldrb	r3, [r7, #7]
 800177a:	4a19      	ldr	r2, [pc, #100]	; (80017e0 <FEB_CAN_Inverter_Process+0x78>)
 800177c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001780:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001784:	4618      	mov	r0, r3
 8001786:	f7fe feed 	bl	8000564 <__aeabi_i2d>
 800178a:	a313      	add	r3, pc, #76	; (adr r3, 80017d8 <FEB_CAN_Inverter_Process+0x70>)
 800178c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001790:	f7fe ff52 	bl	8000638 <__aeabi_dmul>
 8001794:	4602      	mov	r2, r0
 8001796:	460b      	mov	r3, r1
 8001798:	4610      	mov	r0, r2
 800179a:	4619      	mov	r1, r3
 800179c:	f7ff fa44 	bl	8000c28 <__aeabi_d2f>
 80017a0:	4603      	mov	r3, r0
 80017a2:	603b      	str	r3, [r7, #0]
		if (temperature > FEB_CAN_INVERTER_TEMPERATURE_MAX) {
 80017a4:	edd7 7a00 	vldr	s15, [r7]
 80017a8:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 80017e4 <FEB_CAN_Inverter_Process+0x7c>
 80017ac:	eef4 7ac7 	vcmpe.f32	s15, s14
 80017b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017b4:	dd02      	ble.n	80017bc <FEB_CAN_Inverter_Process+0x54>
			FEB_BMS_Shutdown_Initiate("Inverter over temperature");
 80017b6:	480c      	ldr	r0, [pc, #48]	; (80017e8 <FEB_CAN_Inverter_Process+0x80>)
 80017b8:	f7ff fc2c 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
	for (uint8_t i = 0; i < num_temperatures; i++) {
 80017bc:	79fb      	ldrb	r3, [r7, #7]
 80017be:	3301      	adds	r3, #1
 80017c0:	71fb      	strb	r3, [r7, #7]
 80017c2:	79fa      	ldrb	r2, [r7, #7]
 80017c4:	79bb      	ldrb	r3, [r7, #6]
 80017c6:	429a      	cmp	r2, r3
 80017c8:	d3d6      	bcc.n	8001778 <FEB_CAN_Inverter_Process+0x10>
		} else if (temperature > FEB_CAN_INVERTER_TEMPERATURE_LIMIT_TORQUE) {
			// TODO: Limit torque
		}
	}
}
 80017ca:	bf00      	nop
 80017cc:	bf00      	nop
 80017ce:	3708      	adds	r7, #8
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd80      	pop	{r7, pc}
 80017d4:	f3af 8000 	nop.w
 80017d8:	9999999a 	.word	0x9999999a
 80017dc:	3fb99999 	.word	0x3fb99999
 80017e0:	20000010 	.word	0x20000010
 80017e4:	426c0000 	.word	0x426c0000
 80017e8:	0800c76c 	.word	0x0800c76c

080017ec <FEB_Fan_Init>:
static uint8_t FEB_Fan_3_Speed = 0;		// [0, 255]
static uint8_t FEB_Fan_4_Speed = 0;		// [0, 255]

// ********************************** Initialize **********************************

void FEB_Fan_Init(void) {
 80017ec:	b580      	push	{r7, lr}
 80017ee:	af00      	add	r7, sp, #0
	FEB_Fan_PWM_Start();
 80017f0:	f000 f810 	bl	8001814 <FEB_Fan_PWM_Start>
	FEB_Fan_Init_Speed_Set();
 80017f4:	f000 f826 	bl	8001844 <FEB_Fan_Init_Speed_Set>
	FEB_Fan_Reset_Shift_Register();
 80017f8:	f000 f8b2 	bl	8001960 <FEB_Fan_Reset_Shift_Register>
	HAL_ADC_Start(&hadc1);
 80017fc:	4803      	ldr	r0, [pc, #12]	; (800180c <FEB_Fan_Init+0x20>)
 80017fe:	f003 fcc9 	bl	8005194 <HAL_ADC_Start>
	HAL_ADC_Start(&hadc2);
 8001802:	4803      	ldr	r0, [pc, #12]	; (8001810 <FEB_Fan_Init+0x24>)
 8001804:	f003 fcc6 	bl	8005194 <HAL_ADC_Start>
}
 8001808:	bf00      	nop
 800180a:	bd80      	pop	{r7, pc}
 800180c:	20003010 	.word	0x20003010
 8001810:	20003058 	.word	0x20003058

08001814 <FEB_Fan_PWM_Start>:

// ********************************** PWM **********************************

void FEB_Fan_PWM_Start(void) {
 8001814:	b580      	push	{r7, lr}
 8001816:	af00      	add	r7, sp, #0
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8001818:	2100      	movs	r1, #0
 800181a:	4808      	ldr	r0, [pc, #32]	; (800183c <FEB_Fan_PWM_Start+0x28>)
 800181c:	f006 fd3c 	bl	8008298 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 8001820:	2104      	movs	r1, #4
 8001822:	4806      	ldr	r0, [pc, #24]	; (800183c <FEB_Fan_PWM_Start+0x28>)
 8001824:	f006 fd38 	bl	8008298 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001828:	2100      	movs	r1, #0
 800182a:	4805      	ldr	r0, [pc, #20]	; (8001840 <FEB_Fan_PWM_Start+0x2c>)
 800182c:	f006 fd34 	bl	8008298 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001830:	2104      	movs	r1, #4
 8001832:	4803      	ldr	r0, [pc, #12]	; (8001840 <FEB_Fan_PWM_Start+0x2c>)
 8001834:	f006 fd30 	bl	8008298 <HAL_TIM_PWM_Start>
}
 8001838:	bf00      	nop
 800183a:	bd80      	pop	{r7, pc}
 800183c:	20003148 	.word	0x20003148
 8001840:	20003190 	.word	0x20003190

08001844 <FEB_Fan_Init_Speed_Set>:

void FEB_Fan_Init_Speed_Set(void) {\
 8001844:	b580      	push	{r7, lr}
 8001846:	b082      	sub	sp, #8
 8001848:	af00      	add	r7, sp, #0
	if (FEB_BMS_Shutdown_State == 1) {
 800184a:	4b07      	ldr	r3, [pc, #28]	; (8001868 <FEB_Fan_Init_Speed_Set+0x24>)
 800184c:	781b      	ldrb	r3, [r3, #0]
 800184e:	2b01      	cmp	r3, #1
 8001850:	d006      	beq.n	8001860 <FEB_Fan_Init_Speed_Set+0x1c>
		return;
	}
	uint8_t speed;
	if (FEB_CAN_CHARGER_STATE == 0) {
		speed = 255;
 8001852:	23ff      	movs	r3, #255	; 0xff
 8001854:	71fb      	strb	r3, [r7, #7]
	} else if (FEB_CAN_CHARGER_STATE == 1) {
		speed = 127;
	}
	FEB_Fan_All_Speed_Set(speed);
 8001856:	79fb      	ldrb	r3, [r7, #7]
 8001858:	4618      	mov	r0, r3
 800185a:	f000 f807 	bl	800186c <FEB_Fan_All_Speed_Set>
 800185e:	e000      	b.n	8001862 <FEB_Fan_Init_Speed_Set+0x1e>
		return;
 8001860:	bf00      	nop
}
 8001862:	3708      	adds	r7, #8
 8001864:	46bd      	mov	sp, r7
 8001866:	bd80      	pop	{r7, pc}
 8001868:	200025e8 	.word	0x200025e8

0800186c <FEB_Fan_All_Speed_Set>:

void FEB_Fan_All_Speed_Set(uint8_t speed) {
 800186c:	b580      	push	{r7, lr}
 800186e:	b082      	sub	sp, #8
 8001870:	af00      	add	r7, sp, #0
 8001872:	4603      	mov	r3, r0
 8001874:	71fb      	strb	r3, [r7, #7]
	FEB_Fan_1_Speed_Set(speed);
 8001876:	79fb      	ldrb	r3, [r7, #7]
 8001878:	4618      	mov	r0, r3
 800187a:	f000 f811 	bl	80018a0 <FEB_Fan_1_Speed_Set>
	FEB_Fan_2_Speed_Set(speed);
 800187e:	79fb      	ldrb	r3, [r7, #7]
 8001880:	4618      	mov	r0, r3
 8001882:	f000 f825 	bl	80018d0 <FEB_Fan_2_Speed_Set>
	FEB_Fan_3_Speed_Set(speed);
 8001886:	79fb      	ldrb	r3, [r7, #7]
 8001888:	4618      	mov	r0, r3
 800188a:	f000 f839 	bl	8001900 <FEB_Fan_3_Speed_Set>
	FEB_Fan_4_Speed_Set(speed);
 800188e:	79fb      	ldrb	r3, [r7, #7]
 8001890:	4618      	mov	r0, r3
 8001892:	f000 f84d 	bl	8001930 <FEB_Fan_4_Speed_Set>
}
 8001896:	bf00      	nop
 8001898:	3708      	adds	r7, #8
 800189a:	46bd      	mov	sp, r7
 800189c:	bd80      	pop	{r7, pc}
	...

080018a0 <FEB_Fan_1_Speed_Set>:

void FEB_Fan_1_Speed_Set(uint8_t speed) {
 80018a0:	b480      	push	{r7}
 80018a2:	b083      	sub	sp, #12
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	4603      	mov	r3, r0
 80018a8:	71fb      	strb	r3, [r7, #7]
	FEB_Fan_1_Speed = speed;
 80018aa:	4a07      	ldr	r2, [pc, #28]	; (80018c8 <FEB_Fan_1_Speed_Set+0x28>)
 80018ac:	79fb      	ldrb	r3, [r7, #7]
 80018ae:	7013      	strb	r3, [r2, #0]
	__HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, FEB_Fan_1_Speed);
 80018b0:	4b05      	ldr	r3, [pc, #20]	; (80018c8 <FEB_Fan_1_Speed_Set+0x28>)
 80018b2:	781a      	ldrb	r2, [r3, #0]
 80018b4:	4b05      	ldr	r3, [pc, #20]	; (80018cc <FEB_Fan_1_Speed_Set+0x2c>)
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	635a      	str	r2, [r3, #52]	; 0x34
}
 80018ba:	bf00      	nop
 80018bc:	370c      	adds	r7, #12
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr
 80018c6:	bf00      	nop
 80018c8:	2000263a 	.word	0x2000263a
 80018cc:	20003148 	.word	0x20003148

080018d0 <FEB_Fan_2_Speed_Set>:

void FEB_Fan_2_Speed_Set(uint8_t speed) {
 80018d0:	b480      	push	{r7}
 80018d2:	b083      	sub	sp, #12
 80018d4:	af00      	add	r7, sp, #0
 80018d6:	4603      	mov	r3, r0
 80018d8:	71fb      	strb	r3, [r7, #7]
	FEB_Fan_2_Speed = speed;
 80018da:	4a07      	ldr	r2, [pc, #28]	; (80018f8 <FEB_Fan_2_Speed_Set+0x28>)
 80018dc:	79fb      	ldrb	r3, [r7, #7]
 80018de:	7013      	strb	r3, [r2, #0]
	__HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, FEB_Fan_2_Speed);
 80018e0:	4b05      	ldr	r3, [pc, #20]	; (80018f8 <FEB_Fan_2_Speed_Set+0x28>)
 80018e2:	781a      	ldrb	r2, [r3, #0]
 80018e4:	4b05      	ldr	r3, [pc, #20]	; (80018fc <FEB_Fan_2_Speed_Set+0x2c>)
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	639a      	str	r2, [r3, #56]	; 0x38
}
 80018ea:	bf00      	nop
 80018ec:	370c      	adds	r7, #12
 80018ee:	46bd      	mov	sp, r7
 80018f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f4:	4770      	bx	lr
 80018f6:	bf00      	nop
 80018f8:	2000263b 	.word	0x2000263b
 80018fc:	20003148 	.word	0x20003148

08001900 <FEB_Fan_3_Speed_Set>:

void FEB_Fan_3_Speed_Set(uint8_t speed) {
 8001900:	b480      	push	{r7}
 8001902:	b083      	sub	sp, #12
 8001904:	af00      	add	r7, sp, #0
 8001906:	4603      	mov	r3, r0
 8001908:	71fb      	strb	r3, [r7, #7]
	FEB_Fan_3_Speed = speed;
 800190a:	4a07      	ldr	r2, [pc, #28]	; (8001928 <FEB_Fan_3_Speed_Set+0x28>)
 800190c:	79fb      	ldrb	r3, [r7, #7]
 800190e:	7013      	strb	r3, [r2, #0]
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_2, FEB_Fan_3_Speed);
 8001910:	4b05      	ldr	r3, [pc, #20]	; (8001928 <FEB_Fan_3_Speed_Set+0x28>)
 8001912:	781a      	ldrb	r2, [r3, #0]
 8001914:	4b05      	ldr	r3, [pc, #20]	; (800192c <FEB_Fan_3_Speed_Set+0x2c>)
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	639a      	str	r2, [r3, #56]	; 0x38
}
 800191a:	bf00      	nop
 800191c:	370c      	adds	r7, #12
 800191e:	46bd      	mov	sp, r7
 8001920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001924:	4770      	bx	lr
 8001926:	bf00      	nop
 8001928:	2000263c 	.word	0x2000263c
 800192c:	20003190 	.word	0x20003190

08001930 <FEB_Fan_4_Speed_Set>:

void FEB_Fan_4_Speed_Set(uint8_t speed) {
 8001930:	b480      	push	{r7}
 8001932:	b083      	sub	sp, #12
 8001934:	af00      	add	r7, sp, #0
 8001936:	4603      	mov	r3, r0
 8001938:	71fb      	strb	r3, [r7, #7]
	FEB_Fan_4_Speed = speed;
 800193a:	4a07      	ldr	r2, [pc, #28]	; (8001958 <FEB_Fan_4_Speed_Set+0x28>)
 800193c:	79fb      	ldrb	r3, [r7, #7]
 800193e:	7013      	strb	r3, [r2, #0]
	__HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, FEB_Fan_4_Speed);
 8001940:	4b05      	ldr	r3, [pc, #20]	; (8001958 <FEB_Fan_4_Speed_Set+0x28>)
 8001942:	781a      	ldrb	r2, [r3, #0]
 8001944:	4b05      	ldr	r3, [pc, #20]	; (800195c <FEB_Fan_4_Speed_Set+0x2c>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	635a      	str	r2, [r3, #52]	; 0x34
}
 800194a:	bf00      	nop
 800194c:	370c      	adds	r7, #12
 800194e:	46bd      	mov	sp, r7
 8001950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001954:	4770      	bx	lr
 8001956:	bf00      	nop
 8001958:	2000263d 	.word	0x2000263d
 800195c:	20003190 	.word	0x20003190

08001960 <FEB_Fan_Reset_Shift_Register>:

// ********************************** Shift Register Control **********************************

void FEB_Fan_Reset_Shift_Register(void) {
 8001960:	b580      	push	{r7, lr}
 8001962:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
 8001964:	2200      	movs	r2, #0
 8001966:	f44f 7100 	mov.w	r1, #512	; 0x200
 800196a:	4807      	ldr	r0, [pc, #28]	; (8001988 <FEB_Fan_Reset_Shift_Register+0x28>)
 800196c:	f004 ffd8 	bl	8006920 <HAL_GPIO_WritePin>
	FEB_Timer_Delay_Micro(10);
 8001970:	200a      	movs	r0, #10
 8001972:	f001 f851 	bl	8002a18 <FEB_Timer_Delay_Micro>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET);
 8001976:	2201      	movs	r2, #1
 8001978:	f44f 7100 	mov.w	r1, #512	; 0x200
 800197c:	4802      	ldr	r0, [pc, #8]	; (8001988 <FEB_Fan_Reset_Shift_Register+0x28>)
 800197e:	f004 ffcf 	bl	8006920 <HAL_GPIO_WritePin>
}
 8001982:	bf00      	nop
 8001984:	bd80      	pop	{r7, pc}
 8001986:	bf00      	nop
 8001988:	40020800 	.word	0x40020800

0800198c <FEB_Fan_Serial_High>:

void FEB_Fan_Serial_High(void) {
 800198c:	b580      	push	{r7, lr}
 800198e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 8001990:	2201      	movs	r2, #1
 8001992:	2104      	movs	r1, #4
 8001994:	4802      	ldr	r0, [pc, #8]	; (80019a0 <FEB_Fan_Serial_High+0x14>)
 8001996:	f004 ffc3 	bl	8006920 <HAL_GPIO_WritePin>
}
 800199a:	bf00      	nop
 800199c:	bd80      	pop	{r7, pc}
 800199e:	bf00      	nop
 80019a0:	40020400 	.word	0x40020400

080019a4 <FEB_Fan_Serial_Low>:

void FEB_Fan_Serial_Low(void) {
 80019a4:	b580      	push	{r7, lr}
 80019a6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_RESET);
 80019a8:	2200      	movs	r2, #0
 80019aa:	2104      	movs	r1, #4
 80019ac:	4802      	ldr	r0, [pc, #8]	; (80019b8 <FEB_Fan_Serial_Low+0x14>)
 80019ae:	f004 ffb7 	bl	8006920 <HAL_GPIO_WritePin>
}
 80019b2:	bf00      	nop
 80019b4:	bd80      	pop	{r7, pc}
 80019b6:	bf00      	nop
 80019b8:	40020400 	.word	0x40020400

080019bc <FEB_Fan_Clock_High>:

void FEB_Fan_Clock_High(void) {
 80019bc:	b580      	push	{r7, lr}
 80019be:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 80019c0:	2201      	movs	r2, #1
 80019c2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019c6:	4802      	ldr	r0, [pc, #8]	; (80019d0 <FEB_Fan_Clock_High+0x14>)
 80019c8:	f004 ffaa 	bl	8006920 <HAL_GPIO_WritePin>
}
 80019cc:	bf00      	nop
 80019ce:	bd80      	pop	{r7, pc}
 80019d0:	40020400 	.word	0x40020400

080019d4 <FEB_Fan_Clock_Low>:

void FEB_Fan_Clock_Low(void) {
 80019d4:	b580      	push	{r7, lr}
 80019d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80019d8:	2200      	movs	r2, #0
 80019da:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019de:	4802      	ldr	r0, [pc, #8]	; (80019e8 <FEB_Fan_Clock_Low+0x14>)
 80019e0:	f004 ff9e 	bl	8006920 <HAL_GPIO_WritePin>
}
 80019e4:	bf00      	nop
 80019e6:	bd80      	pop	{r7, pc}
 80019e8:	40020400 	.word	0x40020400

080019ec <FEB_Fan_Clock_Pulse>:

void FEB_Fan_Clock_Pulse(void) {
 80019ec:	b580      	push	{r7, lr}
 80019ee:	af00      	add	r7, sp, #0
	FEB_Fan_Clock_High();
 80019f0:	f7ff ffe4 	bl	80019bc <FEB_Fan_Clock_High>
	FEB_Timer_Delay_Micro(10);
 80019f4:	200a      	movs	r0, #10
 80019f6:	f001 f80f 	bl	8002a18 <FEB_Timer_Delay_Micro>
	FEB_Fan_Clock_Low();
 80019fa:	f7ff ffeb 	bl	80019d4 <FEB_Fan_Clock_Low>
	FEB_Timer_Delay_Micro(10);
 80019fe:	200a      	movs	r0, #10
 8001a00:	f001 f80a 	bl	8002a18 <FEB_Timer_Delay_Micro>
}
 8001a04:	bf00      	nop
 8001a06:	bd80      	pop	{r7, pc}

08001a08 <FEB_Fan_Process>:

// ********************************** Tachometer **********************************

void FEB_Fan_Process(void) {
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	b082      	sub	sp, #8
 8001a0c:	af00      	add	r7, sp, #0
	for (uint8_t tach = 0; tach < 12; tach++) {
 8001a0e:	2300      	movs	r3, #0
 8001a10:	71fb      	strb	r3, [r7, #7]
 8001a12:	e02a      	b.n	8001a6a <FEB_Fan_Process+0x62>
		uint8_t multiplex = tach < 6 ? 0 : 1;
 8001a14:	79fb      	ldrb	r3, [r7, #7]
 8001a16:	2b05      	cmp	r3, #5
 8001a18:	bf8c      	ite	hi
 8001a1a:	2301      	movhi	r3, #1
 8001a1c:	2300      	movls	r3, #0
 8001a1e:	b2db      	uxtb	r3, r3
 8001a20:	71bb      	strb	r3, [r7, #6]
		uint8_t tach_pin = tach < 6 ? tach : (tach - 6) << 3;
 8001a22:	79fb      	ldrb	r3, [r7, #7]
 8001a24:	2b05      	cmp	r3, #5
 8001a26:	d905      	bls.n	8001a34 <FEB_Fan_Process+0x2c>
 8001a28:	79fb      	ldrb	r3, [r7, #7]
 8001a2a:	3b06      	subs	r3, #6
 8001a2c:	b2db      	uxtb	r3, r3
 8001a2e:	00db      	lsls	r3, r3, #3
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	e000      	b.n	8001a36 <FEB_Fan_Process+0x2e>
 8001a34:	79fb      	ldrb	r3, [r7, #7]
 8001a36:	717b      	strb	r3, [r7, #5]
		uint8_t fan_bank = (tach / 3) + 1;
 8001a38:	79fb      	ldrb	r3, [r7, #7]
 8001a3a:	4a10      	ldr	r2, [pc, #64]	; (8001a7c <FEB_Fan_Process+0x74>)
 8001a3c:	fba2 2303 	umull	r2, r3, r2, r3
 8001a40:	085b      	lsrs	r3, r3, #1
 8001a42:	b2db      	uxtb	r3, r3
 8001a44:	3301      	adds	r3, #1
 8001a46:	713b      	strb	r3, [r7, #4]
		FEB_Fan_Set_Tachometer(tach_pin);
 8001a48:	797b      	ldrb	r3, [r7, #5]
 8001a4a:	4618      	mov	r0, r3
 8001a4c:	f000 f818 	bl	8001a80 <FEB_Fan_Set_Tachometer>
		uint32_t adc_value = FEB_Fan_Read_Tachometer(multiplex);
 8001a50:	79bb      	ldrb	r3, [r7, #6]
 8001a52:	4618      	mov	r0, r3
 8001a54:	f000 f836 	bl	8001ac4 <FEB_Fan_Read_Tachometer>
 8001a58:	6038      	str	r0, [r7, #0]
		FEB_Fan_Validate_Speed(adc_value, fan_bank);
 8001a5a:	793b      	ldrb	r3, [r7, #4]
 8001a5c:	4619      	mov	r1, r3
 8001a5e:	6838      	ldr	r0, [r7, #0]
 8001a60:	f000 f850 	bl	8001b04 <FEB_Fan_Validate_Speed>
	for (uint8_t tach = 0; tach < 12; tach++) {
 8001a64:	79fb      	ldrb	r3, [r7, #7]
 8001a66:	3301      	adds	r3, #1
 8001a68:	71fb      	strb	r3, [r7, #7]
 8001a6a:	79fb      	ldrb	r3, [r7, #7]
 8001a6c:	2b0b      	cmp	r3, #11
 8001a6e:	d9d1      	bls.n	8001a14 <FEB_Fan_Process+0xc>
	}
}
 8001a70:	bf00      	nop
 8001a72:	bf00      	nop
 8001a74:	3708      	adds	r7, #8
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bd80      	pop	{r7, pc}
 8001a7a:	bf00      	nop
 8001a7c:	aaaaaaab 	.word	0xaaaaaaab

08001a80 <FEB_Fan_Set_Tachometer>:

void FEB_Fan_Set_Tachometer(uint8_t value) {
 8001a80:	b580      	push	{r7, lr}
 8001a82:	b084      	sub	sp, #16
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	4603      	mov	r3, r0
 8001a88:	71fb      	strb	r3, [r7, #7]
	for (uint8_t i = 0; i < 8; i++) {
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	73fb      	strb	r3, [r7, #15]
 8001a8e:	e011      	b.n	8001ab4 <FEB_Fan_Set_Tachometer+0x34>
		// Set multiplex
		if (((value << i) & 0b1) == 1) {
 8001a90:	79fa      	ldrb	r2, [r7, #7]
 8001a92:	7bfb      	ldrb	r3, [r7, #15]
 8001a94:	fa02 f303 	lsl.w	r3, r2, r3
 8001a98:	f003 0301 	and.w	r3, r3, #1
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	d002      	beq.n	8001aa6 <FEB_Fan_Set_Tachometer+0x26>
			FEB_Fan_Serial_High();
 8001aa0:	f7ff ff74 	bl	800198c <FEB_Fan_Serial_High>
 8001aa4:	e001      	b.n	8001aaa <FEB_Fan_Set_Tachometer+0x2a>
		} else {
			FEB_Fan_Serial_Low();
 8001aa6:	f7ff ff7d 	bl	80019a4 <FEB_Fan_Serial_Low>
		}
		FEB_Fan_Clock_Pulse();
 8001aaa:	f7ff ff9f 	bl	80019ec <FEB_Fan_Clock_Pulse>
	for (uint8_t i = 0; i < 8; i++) {
 8001aae:	7bfb      	ldrb	r3, [r7, #15]
 8001ab0:	3301      	adds	r3, #1
 8001ab2:	73fb      	strb	r3, [r7, #15]
 8001ab4:	7bfb      	ldrb	r3, [r7, #15]
 8001ab6:	2b07      	cmp	r3, #7
 8001ab8:	d9ea      	bls.n	8001a90 <FEB_Fan_Set_Tachometer+0x10>
	}
}
 8001aba:	bf00      	nop
 8001abc:	bf00      	nop
 8001abe:	3710      	adds	r7, #16
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	bd80      	pop	{r7, pc}

08001ac4 <FEB_Fan_Read_Tachometer>:

uint32_t FEB_Fan_Read_Tachometer(uint8_t multiplex) {
 8001ac4:	b580      	push	{r7, lr}
 8001ac6:	b084      	sub	sp, #16
 8001ac8:	af00      	add	r7, sp, #0
 8001aca:	4603      	mov	r3, r0
 8001acc:	71fb      	strb	r3, [r7, #7]
	ADC_HandleTypeDef* hadc_pointer;
	if (multiplex == 0) {
 8001ace:	79fb      	ldrb	r3, [r7, #7]
 8001ad0:	2b00      	cmp	r3, #0
 8001ad2:	d102      	bne.n	8001ada <FEB_Fan_Read_Tachometer+0x16>
		hadc_pointer = &hadc1;
 8001ad4:	4b09      	ldr	r3, [pc, #36]	; (8001afc <FEB_Fan_Read_Tachometer+0x38>)
 8001ad6:	60fb      	str	r3, [r7, #12]
 8001ad8:	e004      	b.n	8001ae4 <FEB_Fan_Read_Tachometer+0x20>
	} else if (multiplex == 1) {
 8001ada:	79fb      	ldrb	r3, [r7, #7]
 8001adc:	2b01      	cmp	r3, #1
 8001ade:	d101      	bne.n	8001ae4 <FEB_Fan_Read_Tachometer+0x20>
		hadc_pointer = &hadc2;
 8001ae0:	4b07      	ldr	r3, [pc, #28]	; (8001b00 <FEB_Fan_Read_Tachometer+0x3c>)
 8001ae2:	60fb      	str	r3, [r7, #12]
	}
	HAL_ADC_PollForConversion(hadc_pointer, 10);
 8001ae4:	210a      	movs	r1, #10
 8001ae6:	68f8      	ldr	r0, [r7, #12]
 8001ae8:	f003 fc26 	bl	8005338 <HAL_ADC_PollForConversion>
	return HAL_ADC_GetValue(hadc_pointer);
 8001aec:	68f8      	ldr	r0, [r7, #12]
 8001aee:	f003 fcae 	bl	800544e <HAL_ADC_GetValue>
 8001af2:	4603      	mov	r3, r0
}
 8001af4:	4618      	mov	r0, r3
 8001af6:	3710      	adds	r7, #16
 8001af8:	46bd      	mov	sp, r7
 8001afa:	bd80      	pop	{r7, pc}
 8001afc:	20003010 	.word	0x20003010
 8001b00:	20003058 	.word	0x20003058

08001b04 <FEB_Fan_Validate_Speed>:

void FEB_Fan_Validate_Speed(uint32_t adc_value, uint8_t fan_bank) {
 8001b04:	b580      	push	{r7, lr}
 8001b06:	b082      	sub	sp, #8
 8001b08:	af00      	add	r7, sp, #0
 8001b0a:	6078      	str	r0, [r7, #4]
 8001b0c:	460b      	mov	r3, r1
 8001b0e:	70fb      	strb	r3, [r7, #3]
	if (adc_value < FEB_FAN_ADC_VALUE_LIMIT) {
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	2b63      	cmp	r3, #99	; 0x63
 8001b14:	d81e      	bhi.n	8001b54 <FEB_Fan_Validate_Speed+0x50>
		switch (fan_bank) {
 8001b16:	78fb      	ldrb	r3, [r7, #3]
 8001b18:	3b01      	subs	r3, #1
 8001b1a:	2b03      	cmp	r3, #3
 8001b1c:	d81b      	bhi.n	8001b56 <FEB_Fan_Validate_Speed+0x52>
 8001b1e:	a201      	add	r2, pc, #4	; (adr r2, 8001b24 <FEB_Fan_Validate_Speed+0x20>)
 8001b20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b24:	08001b35 	.word	0x08001b35
 8001b28:	08001b3d 	.word	0x08001b3d
 8001b2c:	08001b45 	.word	0x08001b45
 8001b30:	08001b4d 	.word	0x08001b4d
			case 1:
				FEB_Fan_1_Speed_Set(0);
 8001b34:	2000      	movs	r0, #0
 8001b36:	f7ff feb3 	bl	80018a0 <FEB_Fan_1_Speed_Set>
				break;
 8001b3a:	e00c      	b.n	8001b56 <FEB_Fan_Validate_Speed+0x52>
			case 2:
				FEB_Fan_2_Speed_Set(0);
 8001b3c:	2000      	movs	r0, #0
 8001b3e:	f7ff fec7 	bl	80018d0 <FEB_Fan_2_Speed_Set>
				break;
 8001b42:	e008      	b.n	8001b56 <FEB_Fan_Validate_Speed+0x52>
			case 3:
				FEB_Fan_3_Speed_Set(0);
 8001b44:	2000      	movs	r0, #0
 8001b46:	f7ff fedb 	bl	8001900 <FEB_Fan_3_Speed_Set>
				break;
 8001b4a:	e004      	b.n	8001b56 <FEB_Fan_Validate_Speed+0x52>
			case 4:
				FEB_Fan_4_Speed_Set(0);
 8001b4c:	2000      	movs	r0, #0
 8001b4e:	f7ff feef 	bl	8001930 <FEB_Fan_4_Speed_Set>
				break;
 8001b52:	e000      	b.n	8001b56 <FEB_Fan_Validate_Speed+0x52>
		}
	}
 8001b54:	bf00      	nop
}
 8001b56:	bf00      	nop
 8001b58:	3708      	adds	r7, #8
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	bd80      	pop	{r7, pc}
 8001b5e:	bf00      	nop

08001b60 <FEB_LTC6811_Init>:
// Set accumulator
static Accumulator accumulator;

// ********************************** Functions **********************************

void FEB_LTC6811_Init(void) {
 8001b60:	b590      	push	{r4, r7, lr}
 8001b62:	b089      	sub	sp, #36	; 0x24
 8001b64:	af06      	add	r7, sp, #24
	FEB_LTC6811_Config_Cell_Discharge();
 8001b66:	f000 f83f 	bl	8001be8 <FEB_LTC6811_Config_Cell_Discharge>

	LTC6811_init_cfg(NUM_IC, accumulator.IC_config);
 8001b6a:	4917      	ldr	r1, [pc, #92]	; (8001bc8 <FEB_LTC6811_Init+0x68>)
 8001b6c:	2008      	movs	r0, #8
 8001b6e:	f001 f831 	bl	8002bd4 <LTC6811_init_cfg>
	for (uint8_t current_ic = 0; current_ic < NUM_IC; current_ic++) {
 8001b72:	2300      	movs	r3, #0
 8001b74:	71fb      	strb	r3, [r7, #7]
 8001b76:	e018      	b.n	8001baa <FEB_LTC6811_Init+0x4a>
		LTC6811_set_cfgr(current_ic, accumulator.IC_config, REFON, ADCOPT, GPIOBITS_A, DCCBITS_A, DCTOBITS, UV, OV);
 8001b78:	4b14      	ldr	r3, [pc, #80]	; (8001bcc <FEB_LTC6811_Init+0x6c>)
 8001b7a:	7819      	ldrb	r1, [r3, #0]
 8001b7c:	4b14      	ldr	r3, [pc, #80]	; (8001bd0 <FEB_LTC6811_Init+0x70>)
 8001b7e:	781c      	ldrb	r4, [r3, #0]
 8001b80:	4b14      	ldr	r3, [pc, #80]	; (8001bd4 <FEB_LTC6811_Init+0x74>)
 8001b82:	881b      	ldrh	r3, [r3, #0]
 8001b84:	4a14      	ldr	r2, [pc, #80]	; (8001bd8 <FEB_LTC6811_Init+0x78>)
 8001b86:	8812      	ldrh	r2, [r2, #0]
 8001b88:	79f8      	ldrb	r0, [r7, #7]
 8001b8a:	9204      	str	r2, [sp, #16]
 8001b8c:	9303      	str	r3, [sp, #12]
 8001b8e:	4b13      	ldr	r3, [pc, #76]	; (8001bdc <FEB_LTC6811_Init+0x7c>)
 8001b90:	9302      	str	r3, [sp, #8]
 8001b92:	4b13      	ldr	r3, [pc, #76]	; (8001be0 <FEB_LTC6811_Init+0x80>)
 8001b94:	9301      	str	r3, [sp, #4]
 8001b96:	4b13      	ldr	r3, [pc, #76]	; (8001be4 <FEB_LTC6811_Init+0x84>)
 8001b98:	9300      	str	r3, [sp, #0]
 8001b9a:	4623      	mov	r3, r4
 8001b9c:	460a      	mov	r2, r1
 8001b9e:	490a      	ldr	r1, [pc, #40]	; (8001bc8 <FEB_LTC6811_Init+0x68>)
 8001ba0:	f001 f827 	bl	8002bf2 <LTC6811_set_cfgr>
	for (uint8_t current_ic = 0; current_ic < NUM_IC; current_ic++) {
 8001ba4:	79fb      	ldrb	r3, [r7, #7]
 8001ba6:	3301      	adds	r3, #1
 8001ba8:	71fb      	strb	r3, [r7, #7]
 8001baa:	79fb      	ldrb	r3, [r7, #7]
 8001bac:	2b07      	cmp	r3, #7
 8001bae:	d9e3      	bls.n	8001b78 <FEB_LTC6811_Init+0x18>
	}
	LTC6811_reset_crc_count(NUM_IC, accumulator.IC_config);
 8001bb0:	4905      	ldr	r1, [pc, #20]	; (8001bc8 <FEB_LTC6811_Init+0x68>)
 8001bb2:	2008      	movs	r0, #8
 8001bb4:	f000 ffff 	bl	8002bb6 <LTC6811_reset_crc_count>
	LTC6811_init_reg_limits(NUM_IC, accumulator.IC_config);
 8001bb8:	4903      	ldr	r1, [pc, #12]	; (8001bc8 <FEB_LTC6811_Init+0x68>)
 8001bba:	2008      	movs	r0, #8
 8001bbc:	f000 ff46 	bl	8002a4c <LTC6811_init_reg_limits>
}
 8001bc0:	bf00      	nop
 8001bc2:	370c      	adds	r7, #12
 8001bc4:	46bd      	mov	sp, r7
 8001bc6:	bd90      	pop	{r4, r7, pc}
 8001bc8:	200026b0 	.word	0x200026b0
 8001bcc:	20000035 	.word	0x20000035
 8001bd0:	200026a0 	.word	0x200026a0
 8001bd4:	2000003e 	.word	0x2000003e
 8001bd8:	20000040 	.word	0x20000040
 8001bdc:	20000044 	.word	0x20000044
 8001be0:	200026a4 	.word	0x200026a4
 8001be4:	20000038 	.word	0x20000038

08001be8 <FEB_LTC6811_Config_Cell_Discharge>:

void FEB_LTC6811_Config_Cell_Discharge(void) {
 8001be8:	b480      	push	{r7}
 8001bea:	b083      	sub	sp, #12
 8001bec:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i < NUM_IC; i++) {
 8001bee:	2300      	movs	r3, #0
 8001bf0:	71fb      	strb	r3, [r7, #7]
 8001bf2:	e016      	b.n	8001c22 <FEB_LTC6811_Config_Cell_Discharge+0x3a>
		for (uint8_t j = 0; j < FEB_LTC6811_NUM_CELLS_PER_DAUGHTER_BOARD; j++) {
 8001bf4:	2300      	movs	r3, #0
 8001bf6:	71bb      	strb	r3, [r7, #6]
 8001bf8:	e00d      	b.n	8001c16 <FEB_LTC6811_Config_Cell_Discharge+0x2e>
			FEB_LTC6811_Cell_Discharge[i][j] = 0;
 8001bfa:	79fa      	ldrb	r2, [r7, #7]
 8001bfc:	79b9      	ldrb	r1, [r7, #6]
 8001bfe:	480e      	ldr	r0, [pc, #56]	; (8001c38 <FEB_LTC6811_Config_Cell_Discharge+0x50>)
 8001c00:	4613      	mov	r3, r2
 8001c02:	005b      	lsls	r3, r3, #1
 8001c04:	4413      	add	r3, r2
 8001c06:	009b      	lsls	r3, r3, #2
 8001c08:	4403      	add	r3, r0
 8001c0a:	440b      	add	r3, r1
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	701a      	strb	r2, [r3, #0]
		for (uint8_t j = 0; j < FEB_LTC6811_NUM_CELLS_PER_DAUGHTER_BOARD; j++) {
 8001c10:	79bb      	ldrb	r3, [r7, #6]
 8001c12:	3301      	adds	r3, #1
 8001c14:	71bb      	strb	r3, [r7, #6]
 8001c16:	79bb      	ldrb	r3, [r7, #6]
 8001c18:	2b0b      	cmp	r3, #11
 8001c1a:	d9ee      	bls.n	8001bfa <FEB_LTC6811_Config_Cell_Discharge+0x12>
	for (uint8_t i = 0; i < NUM_IC; i++) {
 8001c1c:	79fb      	ldrb	r3, [r7, #7]
 8001c1e:	3301      	adds	r3, #1
 8001c20:	71fb      	strb	r3, [r7, #7]
 8001c22:	79fb      	ldrb	r3, [r7, #7]
 8001c24:	2b07      	cmp	r3, #7
 8001c26:	d9e5      	bls.n	8001bf4 <FEB_LTC6811_Config_Cell_Discharge+0xc>
		}
	}
}
 8001c28:	bf00      	nop
 8001c2a:	bf00      	nop
 8001c2c:	370c      	adds	r7, #12
 8001c2e:	46bd      	mov	sp, r7
 8001c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c34:	4770      	bx	lr
 8001c36:	bf00      	nop
 8001c38:	20002640 	.word	0x20002640

08001c3c <FEB_LTC6811_Poll_Voltage>:

// ******************** Read Voltage ********************

void FEB_LTC6811_Poll_Voltage(void) {
 8001c3c:	b580      	push	{r7, lr}
 8001c3e:	af00      	add	r7, sp, #0
	FEB_LTC6811_Start_Cell_ADC_Measurement();
 8001c40:	f000 f806 	bl	8001c50 <FEB_LTC6811_Start_Cell_ADC_Measurement>
	FEB_LTC6811_Read_Cell_Voltage_Registers();
 8001c44:	f000 f812 	bl	8001c6c <FEB_LTC6811_Read_Cell_Voltage_Registers>
	FEB_LTC6811_Store_Voltage();
 8001c48:	f000 f81e 	bl	8001c88 <FEB_LTC6811_Store_Voltage>
}
 8001c4c:	bf00      	nop
 8001c4e:	bd80      	pop	{r7, pc}

08001c50 <FEB_LTC6811_Start_Cell_ADC_Measurement>:

void FEB_LTC6811_Start_Cell_ADC_Measurement(void) {
 8001c50:	b580      	push	{r7, lr}
 8001c52:	af00      	add	r7, sp, #0
	wakeup_sleep(NUM_IC);
 8001c54:	2008      	movs	r0, #8
 8001c56:	f001 f80a 	bl	8002c6e <wakeup_sleep>
	LTC6811_adcv(ADC_CONVERSION_MODE, ADC_DCP, CELL_CH_TO_CONVERT);
 8001c5a:	2200      	movs	r2, #0
 8001c5c:	2101      	movs	r1, #1
 8001c5e:	2002      	movs	r0, #2
 8001c60:	f000 ff50 	bl	8002b04 <LTC6811_adcv>
	LTC6811_pollAdc();
 8001c64:	f000 ffa0 	bl	8002ba8 <LTC6811_pollAdc>
}
 8001c68:	bf00      	nop
 8001c6a:	bd80      	pop	{r7, pc}

08001c6c <FEB_LTC6811_Read_Cell_Voltage_Registers>:

void FEB_LTC6811_Read_Cell_Voltage_Registers(void) {
 8001c6c:	b580      	push	{r7, lr}
 8001c6e:	af00      	add	r7, sp, #0
	wakeup_sleep(NUM_IC);
 8001c70:	2008      	movs	r0, #8
 8001c72:	f000 fffc 	bl	8002c6e <wakeup_sleep>
	LTC6811_rdcv(SEL_ALL_REG, NUM_IC, accumulator.IC_config);
 8001c76:	4a03      	ldr	r2, [pc, #12]	; (8001c84 <FEB_LTC6811_Read_Cell_Voltage_Registers+0x18>)
 8001c78:	2108      	movs	r1, #8
 8001c7a:	2000      	movs	r0, #0
 8001c7c:	f000 ff67 	bl	8002b4e <LTC6811_rdcv>
}
 8001c80:	bf00      	nop
 8001c82:	bd80      	pop	{r7, pc}
 8001c84:	200026b0 	.word	0x200026b0

08001c88 <FEB_LTC6811_Store_Voltage>:

void FEB_LTC6811_Store_Voltage(void) {
 8001c88:	b5b0      	push	{r4, r5, r7, lr}
 8001c8a:	b082      	sub	sp, #8
 8001c8c:	af00      	add	r7, sp, #0
    for (uint16_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001c8e:	2300      	movs	r3, #0
 8001c90:	80fb      	strh	r3, [r7, #6]
 8001c92:	e037      	b.n	8001d04 <FEB_LTC6811_Store_Voltage+0x7c>
    	for (uint8_t cell = 0; cell < FEB_LTC6811_NUM_CELLS_PER_BANK; cell++) {
 8001c94:	2300      	movs	r3, #0
 8001c96:	717b      	strb	r3, [r7, #5]
 8001c98:	e02e      	b.n	8001cf8 <FEB_LTC6811_Store_Voltage+0x70>
    		uint8_t ic = FEB_LTC6811_Get_IC(bank_idx, cell);
 8001c9a:	88fb      	ldrh	r3, [r7, #6]
 8001c9c:	b2db      	uxtb	r3, r3
 8001c9e:	797a      	ldrb	r2, [r7, #5]
 8001ca0:	4611      	mov	r1, r2
 8001ca2:	4618      	mov	r0, r3
 8001ca4:	f000 f862 	bl	8001d6c <FEB_LTC6811_Get_IC>
 8001ca8:	4603      	mov	r3, r0
 8001caa:	713b      	strb	r3, [r7, #4]
    		uint8_t cell_idx = FEB_LTC6811_Cell_Idx(cell);
 8001cac:	797b      	ldrb	r3, [r7, #5]
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f000 f876 	bl	8001da0 <FEB_LTC6811_Cell_Idx>
 8001cb4:	4603      	mov	r3, r0
 8001cb6:	70fb      	strb	r3, [r7, #3]
    		accumulator.banks[bank_idx].cells[cell].voltage = FEB_LTC6811_Convert_Voltage(accumulator.IC_config[ic].cells.c_codes[cell_idx]);
 8001cb8:	793a      	ldrb	r2, [r7, #4]
 8001cba:	78fb      	ldrb	r3, [r7, #3]
 8001cbc:	4915      	ldr	r1, [pc, #84]	; (8001d14 <FEB_LTC6811_Store_Voltage+0x8c>)
 8001cbe:	2074      	movs	r0, #116	; 0x74
 8001cc0:	fb00 f202 	mul.w	r2, r0, r2
 8001cc4:	4413      	add	r3, r2
 8001cc6:	330c      	adds	r3, #12
 8001cc8:	005b      	lsls	r3, r3, #1
 8001cca:	440b      	add	r3, r1
 8001ccc:	88db      	ldrh	r3, [r3, #6]
 8001cce:	88fc      	ldrh	r4, [r7, #6]
 8001cd0:	797d      	ldrb	r5, [r7, #5]
 8001cd2:	4618      	mov	r0, r3
 8001cd4:	f000 f820 	bl	8001d18 <FEB_LTC6811_Convert_Voltage>
 8001cd8:	eef0 7a40 	vmov.f32	s15, s0
 8001cdc:	4a0d      	ldr	r2, [pc, #52]	; (8001d14 <FEB_LTC6811_Store_Voltage+0x8c>)
 8001cde:	4623      	mov	r3, r4
 8001ce0:	011b      	lsls	r3, r3, #4
 8001ce2:	4423      	add	r3, r4
 8001ce4:	442b      	add	r3, r5
 8001ce6:	33e8      	adds	r3, #232	; 0xe8
 8001ce8:	00db      	lsls	r3, r3, #3
 8001cea:	4413      	add	r3, r2
 8001cec:	3304      	adds	r3, #4
 8001cee:	edc3 7a00 	vstr	s15, [r3]
    	for (uint8_t cell = 0; cell < FEB_LTC6811_NUM_CELLS_PER_BANK; cell++) {
 8001cf2:	797b      	ldrb	r3, [r7, #5]
 8001cf4:	3301      	adds	r3, #1
 8001cf6:	717b      	strb	r3, [r7, #5]
 8001cf8:	797b      	ldrb	r3, [r7, #5]
 8001cfa:	2b10      	cmp	r3, #16
 8001cfc:	d9cd      	bls.n	8001c9a <FEB_LTC6811_Store_Voltage+0x12>
    for (uint16_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001cfe:	88fb      	ldrh	r3, [r7, #6]
 8001d00:	3301      	adds	r3, #1
 8001d02:	80fb      	strh	r3, [r7, #6]
 8001d04:	88fb      	ldrh	r3, [r7, #6]
 8001d06:	2b03      	cmp	r3, #3
 8001d08:	d9c4      	bls.n	8001c94 <FEB_LTC6811_Store_Voltage+0xc>
    	}
    }
}
 8001d0a:	bf00      	nop
 8001d0c:	bf00      	nop
 8001d0e:	3708      	adds	r7, #8
 8001d10:	46bd      	mov	sp, r7
 8001d12:	bdb0      	pop	{r4, r5, r7, pc}
 8001d14:	200026b0 	.word	0x200026b0

08001d18 <FEB_LTC6811_Convert_Voltage>:

/*
 * @param value := Voltage (100uV) from LTC6811
 */
float FEB_LTC6811_Convert_Voltage(uint16_t value) {
 8001d18:	b580      	push	{r7, lr}
 8001d1a:	b082      	sub	sp, #8
 8001d1c:	af00      	add	r7, sp, #0
 8001d1e:	4603      	mov	r3, r0
 8001d20:	80fb      	strh	r3, [r7, #6]
	// Check for error: value = 2^16 - 1
	if (value == 65535) {
 8001d22:	88fb      	ldrh	r3, [r7, #6]
 8001d24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001d28:	4293      	cmp	r3, r2
 8001d2a:	d101      	bne.n	8001d30 <FEB_LTC6811_Convert_Voltage+0x18>
		return -42;
 8001d2c:	4b0e      	ldr	r3, [pc, #56]	; (8001d68 <FEB_LTC6811_Convert_Voltage+0x50>)
 8001d2e:	e00f      	b.n	8001d50 <FEB_LTC6811_Convert_Voltage+0x38>
	}
	return value * 0.0001;
 8001d30:	88fb      	ldrh	r3, [r7, #6]
 8001d32:	4618      	mov	r0, r3
 8001d34:	f7fe fc16 	bl	8000564 <__aeabi_i2d>
 8001d38:	a309      	add	r3, pc, #36	; (adr r3, 8001d60 <FEB_LTC6811_Convert_Voltage+0x48>)
 8001d3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d3e:	f7fe fc7b 	bl	8000638 <__aeabi_dmul>
 8001d42:	4602      	mov	r2, r0
 8001d44:	460b      	mov	r3, r1
 8001d46:	4610      	mov	r0, r2
 8001d48:	4619      	mov	r1, r3
 8001d4a:	f7fe ff6d 	bl	8000c28 <__aeabi_d2f>
 8001d4e:	4603      	mov	r3, r0
}
 8001d50:	ee07 3a90 	vmov	s15, r3
 8001d54:	eeb0 0a67 	vmov.f32	s0, s15
 8001d58:	3708      	adds	r7, #8
 8001d5a:	46bd      	mov	sp, r7
 8001d5c:	bd80      	pop	{r7, pc}
 8001d5e:	bf00      	nop
 8001d60:	eb1c432d 	.word	0xeb1c432d
 8001d64:	3f1a36e2 	.word	0x3f1a36e2
 8001d68:	c2280000 	.word	0xc2280000

08001d6c <FEB_LTC6811_Get_IC>:

// ******************** Voltage Cell Balance ********************

uint8_t FEB_LTC6811_Get_IC(uint8_t bank, uint8_t cell) {
 8001d6c:	b480      	push	{r7}
 8001d6e:	b083      	sub	sp, #12
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	4603      	mov	r3, r0
 8001d74:	460a      	mov	r2, r1
 8001d76:	71fb      	strb	r3, [r7, #7]
 8001d78:	4613      	mov	r3, r2
 8001d7a:	71bb      	strb	r3, [r7, #6]
	if (cell < 9) {
 8001d7c:	79bb      	ldrb	r3, [r7, #6]
 8001d7e:	2b08      	cmp	r3, #8
 8001d80:	d805      	bhi.n	8001d8e <FEB_LTC6811_Get_IC+0x22>
		return bank * 2 + 1;
 8001d82:	79fb      	ldrb	r3, [r7, #7]
 8001d84:	005b      	lsls	r3, r3, #1
 8001d86:	b2db      	uxtb	r3, r3
 8001d88:	3301      	adds	r3, #1
 8001d8a:	b2db      	uxtb	r3, r3
 8001d8c:	e002      	b.n	8001d94 <FEB_LTC6811_Get_IC+0x28>
	} else {
		return bank * 2;
 8001d8e:	79fb      	ldrb	r3, [r7, #7]
 8001d90:	005b      	lsls	r3, r3, #1
 8001d92:	b2db      	uxtb	r3, r3
	}
}
 8001d94:	4618      	mov	r0, r3
 8001d96:	370c      	adds	r7, #12
 8001d98:	46bd      	mov	sp, r7
 8001d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9e:	4770      	bx	lr

08001da0 <FEB_LTC6811_Cell_Idx>:

uint8_t FEB_LTC6811_Cell_Idx(uint8_t cell) {
 8001da0:	b480      	push	{r7}
 8001da2:	b083      	sub	sp, #12
 8001da4:	af00      	add	r7, sp, #0
 8001da6:	4603      	mov	r3, r0
 8001da8:	71fb      	strb	r3, [r7, #7]
	return FEB_LTC6811_Cell_Idx_Map[cell];
 8001daa:	79fb      	ldrb	r3, [r7, #7]
 8001dac:	4a03      	ldr	r2, [pc, #12]	; (8001dbc <FEB_LTC6811_Cell_Idx+0x1c>)
 8001dae:	5cd3      	ldrb	r3, [r2, r3]
}
 8001db0:	4618      	mov	r0, r3
 8001db2:	370c      	adds	r7, #12
 8001db4:	46bd      	mov	sp, r7
 8001db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dba:	4770      	bx	lr
 8001dbc:	20000024 	.word	0x20000024

08001dc0 <FEB_LTC6811_Balance_Cells>:
	FEB_LTC6811_UART_Transmit_Discharge_Lowest_V();
	FEB_LTC6811_UART_Transmit_Discharge_Lowest_Ind(low_bank, low_cell);

}

void FEB_LTC6811_Balance_Cells(void) {
 8001dc0:	b480      	push	{r7}
 8001dc2:	af00      	add	r7, sp, #0
	if (FEB_LTC6811_BALANCE_STATE == 0 || FEB_LTC6811_Cells_Balanced == 1 || FEB_BMS_Shutdown_State == 1) {
		return;
 8001dc4:	bf00      	nop
	if (cells_balanced == 1) {
		FEB_LTC6811_Cells_Balanced = 1;
		FEB_LTC6811_Clear_Balance_Cells();
	}

}
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dcc:	4770      	bx	lr
	...

08001dd0 <FEB_LTC6811_Configure_DCCBITS_A>:

void FEB_LTC6811_Clear_Balance_Cell(uint8_t bank, uint8_t cell) {
	FEB_LTC6811_Cell_Discharge[FEB_LTC6811_Get_IC(bank, cell)][FEB_LTC6811_Cell_Idx(cell)] = 0;
}

void FEB_LTC6811_Configure_DCCBITS_A(uint8_t ic) {
 8001dd0:	b480      	push	{r7}
 8001dd2:	b085      	sub	sp, #20
 8001dd4:	af00      	add	r7, sp, #0
 8001dd6:	4603      	mov	r3, r0
 8001dd8:	71fb      	strb	r3, [r7, #7]
	for (uint8_t i = 0; i < FEB_LTC6811_NUM_CELLS_PER_DAUGHTER_BOARD; i++) {
 8001dda:	2300      	movs	r3, #0
 8001ddc:	73fb      	strb	r3, [r7, #15]
 8001dde:	e014      	b.n	8001e0a <FEB_LTC6811_Configure_DCCBITS_A+0x3a>
		DCCBITS_A[i] = FEB_LTC6811_Cell_Discharge[ic][i];
 8001de0:	79fa      	ldrb	r2, [r7, #7]
 8001de2:	7bf9      	ldrb	r1, [r7, #15]
 8001de4:	480e      	ldr	r0, [pc, #56]	; (8001e20 <FEB_LTC6811_Configure_DCCBITS_A+0x50>)
 8001de6:	4613      	mov	r3, r2
 8001de8:	005b      	lsls	r3, r3, #1
 8001dea:	4413      	add	r3, r2
 8001dec:	009b      	lsls	r3, r3, #2
 8001dee:	4403      	add	r3, r0
 8001df0:	440b      	add	r3, r1
 8001df2:	781a      	ldrb	r2, [r3, #0]
 8001df4:	7bfb      	ldrb	r3, [r7, #15]
 8001df6:	2a00      	cmp	r2, #0
 8001df8:	bf14      	ite	ne
 8001dfa:	2201      	movne	r2, #1
 8001dfc:	2200      	moveq	r2, #0
 8001dfe:	b2d1      	uxtb	r1, r2
 8001e00:	4a08      	ldr	r2, [pc, #32]	; (8001e24 <FEB_LTC6811_Configure_DCCBITS_A+0x54>)
 8001e02:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < FEB_LTC6811_NUM_CELLS_PER_DAUGHTER_BOARD; i++) {
 8001e04:	7bfb      	ldrb	r3, [r7, #15]
 8001e06:	3301      	adds	r3, #1
 8001e08:	73fb      	strb	r3, [r7, #15]
 8001e0a:	7bfb      	ldrb	r3, [r7, #15]
 8001e0c:	2b0b      	cmp	r3, #11
 8001e0e:	d9e7      	bls.n	8001de0 <FEB_LTC6811_Configure_DCCBITS_A+0x10>
	}
}
 8001e10:	bf00      	nop
 8001e12:	bf00      	nop
 8001e14:	3714      	adds	r7, #20
 8001e16:	46bd      	mov	sp, r7
 8001e18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e1c:	4770      	bx	lr
 8001e1e:	bf00      	nop
 8001e20:	20002640 	.word	0x20002640
 8001e24:	200026a4 	.word	0x200026a4

08001e28 <FEB_LTC6811_UART_Transmit_Discharge>:

void FEB_LTC6811_UART_Transmit_Discharge(void) {
 8001e28:	b590      	push	{r4, r7, lr}
 8001e2a:	f2ad 5d0c 	subw	sp, sp, #1292	; 0x50c
 8001e2e:	af00      	add	r7, sp, #0
	char UART_str[1024];
	char temp_str[256];

	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001e30:	2300      	movs	r3, #0
 8001e32:	f887 3507 	strb.w	r3, [r7, #1287]	; 0x507
 8001e36:	e067      	b.n	8001f08 <FEB_LTC6811_UART_Transmit_Discharge+0xe0>
		// Add bank_idx, cell_idx to {@code UART_Str}
		sprintf(UART_str, "%d", (bank_idx << FEB_LTC6811_UART_BITS_PER_MESSAGE) + FEB_LTC6811_UART_DISCHARGE_ID);
 8001e38:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 8001e3c:	00db      	lsls	r3, r3, #3
 8001e3e:	1c9a      	adds	r2, r3, #2
 8001e40:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8001e44:	4935      	ldr	r1, [pc, #212]	; (8001f1c <FEB_LTC6811_UART_Transmit_Discharge+0xf4>)
 8001e46:	4618      	mov	r0, r3
 8001e48:	f008 f9b4 	bl	800a1b4 <siprintf>


		// Add values to {@code UART_Str}
		for (uint16_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8001e4c:	2300      	movs	r3, #0
 8001e4e:	f8a7 3504 	strh.w	r3, [r7, #1284]	; 0x504
 8001e52:	e033      	b.n	8001ebc <FEB_LTC6811_UART_Transmit_Discharge+0x94>
			uint8_t state = FEB_LTC6811_Cell_Discharge[FEB_LTC6811_Get_IC(bank_idx, cell_idx)][FEB_LTC6811_Cell_Idx(cell_idx)];
 8001e54:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 8001e58:	b2da      	uxtb	r2, r3
 8001e5a:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 8001e5e:	4611      	mov	r1, r2
 8001e60:	4618      	mov	r0, r3
 8001e62:	f7ff ff83 	bl	8001d6c <FEB_LTC6811_Get_IC>
 8001e66:	4603      	mov	r3, r0
 8001e68:	461c      	mov	r4, r3
 8001e6a:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 8001e6e:	b2db      	uxtb	r3, r3
 8001e70:	4618      	mov	r0, r3
 8001e72:	f7ff ff95 	bl	8001da0 <FEB_LTC6811_Cell_Idx>
 8001e76:	4603      	mov	r3, r0
 8001e78:	4619      	mov	r1, r3
 8001e7a:	4a29      	ldr	r2, [pc, #164]	; (8001f20 <FEB_LTC6811_UART_Transmit_Discharge+0xf8>)
 8001e7c:	4623      	mov	r3, r4
 8001e7e:	005b      	lsls	r3, r3, #1
 8001e80:	4423      	add	r3, r4
 8001e82:	009b      	lsls	r3, r3, #2
 8001e84:	4413      	add	r3, r2
 8001e86:	440b      	add	r3, r1
 8001e88:	781b      	ldrb	r3, [r3, #0]
 8001e8a:	f887 3503 	strb.w	r3, [r7, #1283]	; 0x503
			sprintf(temp_str, " %d", state);
 8001e8e:	f897 2503 	ldrb.w	r2, [r7, #1283]	; 0x503
 8001e92:	463b      	mov	r3, r7
 8001e94:	4923      	ldr	r1, [pc, #140]	; (8001f24 <FEB_LTC6811_UART_Transmit_Discharge+0xfc>)
 8001e96:	4618      	mov	r0, r3
 8001e98:	f008 f98c 	bl	800a1b4 <siprintf>
			strncat(UART_str, temp_str, strlen(temp_str));
 8001e9c:	463b      	mov	r3, r7
 8001e9e:	4618      	mov	r0, r3
 8001ea0:	f7fe f9b6 	bl	8000210 <strlen>
 8001ea4:	4602      	mov	r2, r0
 8001ea6:	4639      	mov	r1, r7
 8001ea8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8001eac:	4618      	mov	r0, r3
 8001eae:	f008 f9a1 	bl	800a1f4 <strncat>
		for (uint16_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8001eb2:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 8001eb6:	3301      	adds	r3, #1
 8001eb8:	f8a7 3504 	strh.w	r3, [r7, #1284]	; 0x504
 8001ebc:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 8001ec0:	2b10      	cmp	r3, #16
 8001ec2:	d9c7      	bls.n	8001e54 <FEB_LTC6811_UART_Transmit_Discharge+0x2c>
		}

		// Add '\n' to {@code UART_Str}
		sprintf(temp_str, "\n");
 8001ec4:	463b      	mov	r3, r7
 8001ec6:	4918      	ldr	r1, [pc, #96]	; (8001f28 <FEB_LTC6811_UART_Transmit_Discharge+0x100>)
 8001ec8:	4618      	mov	r0, r3
 8001eca:	f008 f973 	bl	800a1b4 <siprintf>
		strncat(UART_str, temp_str, strlen(temp_str));
 8001ece:	463b      	mov	r3, r7
 8001ed0:	4618      	mov	r0, r3
 8001ed2:	f7fe f99d 	bl	8000210 <strlen>
 8001ed6:	4602      	mov	r2, r0
 8001ed8:	4639      	mov	r1, r7
 8001eda:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8001ede:	4618      	mov	r0, r3
 8001ee0:	f008 f988 	bl	800a1f4 <strncat>

		HAL_UART_Transmit(&huart2, (uint8_t*) UART_str, strlen(UART_str), 100);
 8001ee4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8001ee8:	4618      	mov	r0, r3
 8001eea:	f7fe f991 	bl	8000210 <strlen>
 8001eee:	4603      	mov	r3, r0
 8001ef0:	b29a      	uxth	r2, r3
 8001ef2:	f507 7180 	add.w	r1, r7, #256	; 0x100
 8001ef6:	2364      	movs	r3, #100	; 0x64
 8001ef8:	480c      	ldr	r0, [pc, #48]	; (8001f2c <FEB_LTC6811_UART_Transmit_Discharge+0x104>)
 8001efa:	f007 f84a 	bl	8008f92 <HAL_UART_Transmit>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001efe:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 8001f02:	3301      	adds	r3, #1
 8001f04:	f887 3507 	strb.w	r3, [r7, #1287]	; 0x507
 8001f08:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 8001f0c:	2b03      	cmp	r3, #3
 8001f0e:	d993      	bls.n	8001e38 <FEB_LTC6811_UART_Transmit_Discharge+0x10>
	}
}
 8001f10:	bf00      	nop
 8001f12:	bf00      	nop
 8001f14:	f207 570c 	addw	r7, r7, #1292	; 0x50c
 8001f18:	46bd      	mov	sp, r7
 8001f1a:	bd90      	pop	{r4, r7, pc}
 8001f1c:	0800c788 	.word	0x0800c788
 8001f20:	20002640 	.word	0x20002640
 8001f24:	0800c78c 	.word	0x0800c78c
 8001f28:	0800c790 	.word	0x0800c790
 8001f2c:	20003220 	.word	0x20003220

08001f30 <FEB_LTC6811_Validate_Voltage>:
	HAL_UART_Transmit(&huart2, (uint8_t*) UART_str, strlen(UART_str), 100);

}
// ******************** Voltage Interface ********************

void FEB_LTC6811_Validate_Voltage(void) {
 8001f30:	b580      	push	{r7, lr}
 8001f32:	b082      	sub	sp, #8
 8001f34:	af00      	add	r7, sp, #0
	if (FEB_BMS_Shutdown_State == 1) {
 8001f36:	4b24      	ldr	r3, [pc, #144]	; (8001fc8 <FEB_LTC6811_Validate_Voltage+0x98>)
 8001f38:	781b      	ldrb	r3, [r3, #0]
 8001f3a:	2b01      	cmp	r3, #1
 8001f3c:	d03a      	beq.n	8001fb4 <FEB_LTC6811_Validate_Voltage+0x84>
		return;
	}
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001f3e:	2300      	movs	r3, #0
 8001f40:	71fb      	strb	r3, [r7, #7]
 8001f42:	e033      	b.n	8001fac <FEB_LTC6811_Validate_Voltage+0x7c>
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8001f44:	2300      	movs	r3, #0
 8001f46:	71bb      	strb	r3, [r7, #6]
 8001f48:	e02a      	b.n	8001fa0 <FEB_LTC6811_Validate_Voltage+0x70>
			float voltage = accumulator.banks[bank_idx].cells[cell_idx].voltage;
 8001f4a:	79fa      	ldrb	r2, [r7, #7]
 8001f4c:	79b9      	ldrb	r1, [r7, #6]
 8001f4e:	481f      	ldr	r0, [pc, #124]	; (8001fcc <FEB_LTC6811_Validate_Voltage+0x9c>)
 8001f50:	4613      	mov	r3, r2
 8001f52:	011b      	lsls	r3, r3, #4
 8001f54:	4413      	add	r3, r2
 8001f56:	440b      	add	r3, r1
 8001f58:	33e8      	adds	r3, #232	; 0xe8
 8001f5a:	00db      	lsls	r3, r3, #3
 8001f5c:	4403      	add	r3, r0
 8001f5e:	3304      	adds	r3, #4
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	603b      	str	r3, [r7, #0]
			if (voltage < FEB_LTC6811_CELL_MIN_VOLTAGE) {
 8001f64:	edd7 7a00 	vldr	s15, [r7]
 8001f68:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 8001f6c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f74:	d503      	bpl.n	8001f7e <FEB_LTC6811_Validate_Voltage+0x4e>
				FEB_BMS_Shutdown_Initiate("Module under voltage");
 8001f76:	4816      	ldr	r0, [pc, #88]	; (8001fd0 <FEB_LTC6811_Validate_Voltage+0xa0>)
 8001f78:	f7ff f84c 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
 8001f7c:	e00d      	b.n	8001f9a <FEB_LTC6811_Validate_Voltage+0x6a>
			} else if (voltage > FEB_LTC6811_CELL_MAX_VOLTAGE) {
 8001f7e:	6838      	ldr	r0, [r7, #0]
 8001f80:	f7fe fb02 	bl	8000588 <__aeabi_f2d>
 8001f84:	a30e      	add	r3, pc, #56	; (adr r3, 8001fc0 <FEB_LTC6811_Validate_Voltage+0x90>)
 8001f86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f8a:	f7fe fde5 	bl	8000b58 <__aeabi_dcmpgt>
 8001f8e:	4603      	mov	r3, r0
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	d002      	beq.n	8001f9a <FEB_LTC6811_Validate_Voltage+0x6a>
				FEB_BMS_Shutdown_Initiate("Module over voltage");
 8001f94:	480f      	ldr	r0, [pc, #60]	; (8001fd4 <FEB_LTC6811_Validate_Voltage+0xa4>)
 8001f96:	f7ff f83d 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8001f9a:	79bb      	ldrb	r3, [r7, #6]
 8001f9c:	3301      	adds	r3, #1
 8001f9e:	71bb      	strb	r3, [r7, #6]
 8001fa0:	79bb      	ldrb	r3, [r7, #6]
 8001fa2:	2b10      	cmp	r3, #16
 8001fa4:	d9d1      	bls.n	8001f4a <FEB_LTC6811_Validate_Voltage+0x1a>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001fa6:	79fb      	ldrb	r3, [r7, #7]
 8001fa8:	3301      	adds	r3, #1
 8001faa:	71fb      	strb	r3, [r7, #7]
 8001fac:	79fb      	ldrb	r3, [r7, #7]
 8001fae:	2b03      	cmp	r3, #3
 8001fb0:	d9c8      	bls.n	8001f44 <FEB_LTC6811_Validate_Voltage+0x14>
 8001fb2:	e000      	b.n	8001fb6 <FEB_LTC6811_Validate_Voltage+0x86>
		return;
 8001fb4:	bf00      	nop
			}
		}
	}
}
 8001fb6:	3708      	adds	r7, #8
 8001fb8:	46bd      	mov	sp, r7
 8001fba:	bd80      	pop	{r7, pc}
 8001fbc:	f3af 8000 	nop.w
 8001fc0:	66666666 	.word	0x66666666
 8001fc4:	40106666 	.word	0x40106666
 8001fc8:	200025e8 	.word	0x200025e8
 8001fcc:	200026b0 	.word	0x200026b0
 8001fd0:	0800c7d0 	.word	0x0800c7d0
 8001fd4:	0800c7e8 	.word	0x0800c7e8

08001fd8 <FEB_LTC6811_UART_Transmit_Voltage>:

void FEB_LTC6811_UART_Transmit_Voltage() {
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	f5ad 6da1 	sub.w	sp, sp, #1288	; 0x508
 8001fde:	af00      	add	r7, sp, #0
	char UART_str[1024];
	char temp_str[256];

	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8001fe0:	2300      	movs	r3, #0
 8001fe2:	f887 3507 	strb.w	r3, [r7, #1287]	; 0x507
 8001fe6:	e05e      	b.n	80020a6 <FEB_LTC6811_UART_Transmit_Voltage+0xce>
		// Add bank_idx, cell_idx to {@code UART_Str}
		sprintf(UART_str, "%d", (bank_idx << FEB_LTC6811_UART_BITS_PER_MESSAGE) + FEB_LTC6811_UART_VOLTAGE_ID);
 8001fe8:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 8001fec:	00da      	lsls	r2, r3, #3
 8001fee:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8001ff2:	4932      	ldr	r1, [pc, #200]	; (80020bc <FEB_LTC6811_UART_Transmit_Voltage+0xe4>)
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	f008 f8dd 	bl	800a1b4 <siprintf>


		// Add values to {@code UART_Str}
		for (uint16_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	f8a7 3504 	strh.w	r3, [r7, #1284]	; 0x504
 8002000:	e02b      	b.n	800205a <FEB_LTC6811_UART_Transmit_Voltage+0x82>
			float voltage = accumulator.banks[bank_idx].cells[cell_idx].voltage;
 8002002:	f897 2507 	ldrb.w	r2, [r7, #1287]	; 0x507
 8002006:	f8b7 1504 	ldrh.w	r1, [r7, #1284]	; 0x504
 800200a:	482d      	ldr	r0, [pc, #180]	; (80020c0 <FEB_LTC6811_UART_Transmit_Voltage+0xe8>)
 800200c:	4613      	mov	r3, r2
 800200e:	011b      	lsls	r3, r3, #4
 8002010:	4413      	add	r3, r2
 8002012:	440b      	add	r3, r1
 8002014:	33e8      	adds	r3, #232	; 0xe8
 8002016:	00db      	lsls	r3, r3, #3
 8002018:	4403      	add	r3, r0
 800201a:	3304      	adds	r3, #4
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f507 62a0 	add.w	r2, r7, #1280	; 0x500
 8002022:	6013      	str	r3, [r2, #0]

			sprintf(temp_str, " %f", voltage);
 8002024:	f507 63a0 	add.w	r3, r7, #1280	; 0x500
 8002028:	6818      	ldr	r0, [r3, #0]
 800202a:	f7fe faad 	bl	8000588 <__aeabi_f2d>
 800202e:	4602      	mov	r2, r0
 8002030:	460b      	mov	r3, r1
 8002032:	4638      	mov	r0, r7
 8002034:	4923      	ldr	r1, [pc, #140]	; (80020c4 <FEB_LTC6811_UART_Transmit_Voltage+0xec>)
 8002036:	f008 f8bd 	bl	800a1b4 <siprintf>
			strncat(UART_str, temp_str, strlen(temp_str));
 800203a:	463b      	mov	r3, r7
 800203c:	4618      	mov	r0, r3
 800203e:	f7fe f8e7 	bl	8000210 <strlen>
 8002042:	4602      	mov	r2, r0
 8002044:	4639      	mov	r1, r7
 8002046:	f507 7380 	add.w	r3, r7, #256	; 0x100
 800204a:	4618      	mov	r0, r3
 800204c:	f008 f8d2 	bl	800a1f4 <strncat>
		for (uint16_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8002050:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 8002054:	3301      	adds	r3, #1
 8002056:	f8a7 3504 	strh.w	r3, [r7, #1284]	; 0x504
 800205a:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 800205e:	2b10      	cmp	r3, #16
 8002060:	d9cf      	bls.n	8002002 <FEB_LTC6811_UART_Transmit_Voltage+0x2a>
		}

		// Add '\n' to {@code UART_Str}
		sprintf(temp_str, "\n");
 8002062:	463b      	mov	r3, r7
 8002064:	4918      	ldr	r1, [pc, #96]	; (80020c8 <FEB_LTC6811_UART_Transmit_Voltage+0xf0>)
 8002066:	4618      	mov	r0, r3
 8002068:	f008 f8a4 	bl	800a1b4 <siprintf>
		strncat(UART_str, temp_str, strlen(temp_str));
 800206c:	463b      	mov	r3, r7
 800206e:	4618      	mov	r0, r3
 8002070:	f7fe f8ce 	bl	8000210 <strlen>
 8002074:	4602      	mov	r2, r0
 8002076:	4639      	mov	r1, r7
 8002078:	f507 7380 	add.w	r3, r7, #256	; 0x100
 800207c:	4618      	mov	r0, r3
 800207e:	f008 f8b9 	bl	800a1f4 <strncat>

		HAL_UART_Transmit(&huart2, (uint8_t*) UART_str, strlen(UART_str), 100);
 8002082:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8002086:	4618      	mov	r0, r3
 8002088:	f7fe f8c2 	bl	8000210 <strlen>
 800208c:	4603      	mov	r3, r0
 800208e:	b29a      	uxth	r2, r3
 8002090:	f507 7180 	add.w	r1, r7, #256	; 0x100
 8002094:	2364      	movs	r3, #100	; 0x64
 8002096:	480d      	ldr	r0, [pc, #52]	; (80020cc <FEB_LTC6811_UART_Transmit_Voltage+0xf4>)
 8002098:	f006 ff7b 	bl	8008f92 <HAL_UART_Transmit>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 800209c:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 80020a0:	3301      	adds	r3, #1
 80020a2:	f887 3507 	strb.w	r3, [r7, #1287]	; 0x507
 80020a6:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 80020aa:	2b03      	cmp	r3, #3
 80020ac:	d99c      	bls.n	8001fe8 <FEB_LTC6811_UART_Transmit_Voltage+0x10>
	}
}
 80020ae:	bf00      	nop
 80020b0:	bf00      	nop
 80020b2:	f507 67a1 	add.w	r7, r7, #1288	; 0x508
 80020b6:	46bd      	mov	sp, r7
 80020b8:	bd80      	pop	{r7, pc}
 80020ba:	bf00      	nop
 80020bc:	0800c788 	.word	0x0800c788
 80020c0:	200026b0 	.word	0x200026b0
 80020c4:	0800c7fc 	.word	0x0800c7fc
 80020c8:	0800c790 	.word	0x0800c790
 80020cc:	20003220 	.word	0x20003220

080020d0 <FEB_LTC6811_Total_Bank_Voltage>:

float FEB_LTC6811_Total_Bank_Voltage(void) {
 80020d0:	b480      	push	{r7}
 80020d2:	b083      	sub	sp, #12
 80020d4:	af00      	add	r7, sp, #0
	float total_voltage = 0;
 80020d6:	f04f 0300 	mov.w	r3, #0
 80020da:	607b      	str	r3, [r7, #4]

	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 80020dc:	2300      	movs	r3, #0
 80020de:	70fb      	strb	r3, [r7, #3]
 80020e0:	e01e      	b.n	8002120 <FEB_LTC6811_Total_Bank_Voltage+0x50>
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 80020e2:	2300      	movs	r3, #0
 80020e4:	70bb      	strb	r3, [r7, #2]
 80020e6:	e015      	b.n	8002114 <FEB_LTC6811_Total_Bank_Voltage+0x44>
			total_voltage += accumulator.banks[bank_idx].cells[cell_idx].voltage;
 80020e8:	78fa      	ldrb	r2, [r7, #3]
 80020ea:	78b9      	ldrb	r1, [r7, #2]
 80020ec:	4813      	ldr	r0, [pc, #76]	; (800213c <FEB_LTC6811_Total_Bank_Voltage+0x6c>)
 80020ee:	4613      	mov	r3, r2
 80020f0:	011b      	lsls	r3, r3, #4
 80020f2:	4413      	add	r3, r2
 80020f4:	440b      	add	r3, r1
 80020f6:	33e8      	adds	r3, #232	; 0xe8
 80020f8:	00db      	lsls	r3, r3, #3
 80020fa:	4403      	add	r3, r0
 80020fc:	3304      	adds	r3, #4
 80020fe:	edd3 7a00 	vldr	s15, [r3]
 8002102:	ed97 7a01 	vldr	s14, [r7, #4]
 8002106:	ee77 7a27 	vadd.f32	s15, s14, s15
 800210a:	edc7 7a01 	vstr	s15, [r7, #4]
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 800210e:	78bb      	ldrb	r3, [r7, #2]
 8002110:	3301      	adds	r3, #1
 8002112:	70bb      	strb	r3, [r7, #2]
 8002114:	78bb      	ldrb	r3, [r7, #2]
 8002116:	2b10      	cmp	r3, #16
 8002118:	d9e6      	bls.n	80020e8 <FEB_LTC6811_Total_Bank_Voltage+0x18>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 800211a:	78fb      	ldrb	r3, [r7, #3]
 800211c:	3301      	adds	r3, #1
 800211e:	70fb      	strb	r3, [r7, #3]
 8002120:	78fb      	ldrb	r3, [r7, #3]
 8002122:	2b03      	cmp	r3, #3
 8002124:	d9dd      	bls.n	80020e2 <FEB_LTC6811_Total_Bank_Voltage+0x12>
		}
	}

	return total_voltage;
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	ee07 3a90 	vmov	s15, r3
}
 800212c:	eeb0 0a67 	vmov.f32	s0, s15
 8002130:	370c      	adds	r7, #12
 8002132:	46bd      	mov	sp, r7
 8002134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002138:	4770      	bx	lr
 800213a:	bf00      	nop
 800213c:	200026b0 	.word	0x200026b0

08002140 <FEB_LTC6811_Poll_Temperature>:
	}
}

// ******************** Read Temperature ********************

void FEB_LTC6811_Poll_Temperature(void) {
 8002140:	b580      	push	{r7, lr}
 8002142:	b082      	sub	sp, #8
 8002144:	af00      	add	r7, sp, #0
	for (uint8_t channel = 0; channel <= 4; channel++) {
 8002146:	2300      	movs	r3, #0
 8002148:	71fb      	strb	r3, [r7, #7]
 800214a:	e00e      	b.n	800216a <FEB_LTC6811_Poll_Temperature+0x2a>
		FEB_LTC6811_Update_GPIO(channel);
 800214c:	79fb      	ldrb	r3, [r7, #7]
 800214e:	4618      	mov	r0, r3
 8002150:	f000 f814 	bl	800217c <FEB_LTC6811_Update_GPIO>
		FEB_LTC6811_Start_GPIO_ADC_Measurement();
 8002154:	f000 f880 	bl	8002258 <FEB_LTC6811_Start_GPIO_ADC_Measurement>
		FEB_LTC6811_Read_Aux_Voltages();
 8002158:	f000 f88c 	bl	8002274 <FEB_LTC6811_Read_Aux_Voltages>
		FEB_LTC6811_Store_Temperature(channel);
 800215c:	79fb      	ldrb	r3, [r7, #7]
 800215e:	4618      	mov	r0, r3
 8002160:	f000 f896 	bl	8002290 <FEB_LTC6811_Store_Temperature>
	for (uint8_t channel = 0; channel <= 4; channel++) {
 8002164:	79fb      	ldrb	r3, [r7, #7]
 8002166:	3301      	adds	r3, #1
 8002168:	71fb      	strb	r3, [r7, #7]
 800216a:	79fb      	ldrb	r3, [r7, #7]
 800216c:	2b04      	cmp	r3, #4
 800216e:	d9ed      	bls.n	800214c <FEB_LTC6811_Poll_Temperature+0xc>
	}
}
 8002170:	bf00      	nop
 8002172:	bf00      	nop
 8002174:	3708      	adds	r7, #8
 8002176:	46bd      	mov	sp, r7
 8002178:	bd80      	pop	{r7, pc}
	...

0800217c <FEB_LTC6811_Update_GPIO>:

void FEB_LTC6811_Update_GPIO(uint8_t channel) {
 800217c:	b590      	push	{r4, r7, lr}
 800217e:	b08b      	sub	sp, #44	; 0x2c
 8002180:	af06      	add	r7, sp, #24
 8002182:	4603      	mov	r3, r0
 8002184:	71fb      	strb	r3, [r7, #7]
	GPIOBITS_A[0] = 0b1;					// ADC
 8002186:	4b2c      	ldr	r3, [pc, #176]	; (8002238 <FEB_LTC6811_Update_GPIO+0xbc>)
 8002188:	2201      	movs	r2, #1
 800218a:	701a      	strb	r2, [r3, #0]
	GPIOBITS_A[1] = 0b1;					// ADC
 800218c:	4b2a      	ldr	r3, [pc, #168]	; (8002238 <FEB_LTC6811_Update_GPIO+0xbc>)
 800218e:	2201      	movs	r2, #1
 8002190:	705a      	strb	r2, [r3, #1]
	GPIOBITS_A[2] = (channel >> 0) & 0b1;	// MUX Select
 8002192:	79fb      	ldrb	r3, [r7, #7]
 8002194:	f003 0301 	and.w	r3, r3, #1
 8002198:	2b00      	cmp	r3, #0
 800219a:	bf14      	ite	ne
 800219c:	2301      	movne	r3, #1
 800219e:	2300      	moveq	r3, #0
 80021a0:	b2da      	uxtb	r2, r3
 80021a2:	4b25      	ldr	r3, [pc, #148]	; (8002238 <FEB_LTC6811_Update_GPIO+0xbc>)
 80021a4:	709a      	strb	r2, [r3, #2]
	GPIOBITS_A[3] = (channel >> 1) & 0b1;	// MUX Select
 80021a6:	79fb      	ldrb	r3, [r7, #7]
 80021a8:	085b      	lsrs	r3, r3, #1
 80021aa:	b2db      	uxtb	r3, r3
 80021ac:	f003 0301 	and.w	r3, r3, #1
 80021b0:	2b00      	cmp	r3, #0
 80021b2:	bf14      	ite	ne
 80021b4:	2301      	movne	r3, #1
 80021b6:	2300      	moveq	r3, #0
 80021b8:	b2da      	uxtb	r2, r3
 80021ba:	4b1f      	ldr	r3, [pc, #124]	; (8002238 <FEB_LTC6811_Update_GPIO+0xbc>)
 80021bc:	70da      	strb	r2, [r3, #3]
	GPIOBITS_A[4] = (channel >> 2) & 0b1;	// MUX Select
 80021be:	79fb      	ldrb	r3, [r7, #7]
 80021c0:	089b      	lsrs	r3, r3, #2
 80021c2:	b2db      	uxtb	r3, r3
 80021c4:	f003 0301 	and.w	r3, r3, #1
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	bf14      	ite	ne
 80021cc:	2301      	movne	r3, #1
 80021ce:	2300      	moveq	r3, #0
 80021d0:	b2da      	uxtb	r2, r3
 80021d2:	4b19      	ldr	r3, [pc, #100]	; (8002238 <FEB_LTC6811_Update_GPIO+0xbc>)
 80021d4:	711a      	strb	r2, [r3, #4]

    wakeup_sleep(NUM_IC);
 80021d6:	2008      	movs	r0, #8
 80021d8:	f000 fd49 	bl	8002c6e <wakeup_sleep>
    for (uint8_t current_ic = 0; current_ic < NUM_IC; current_ic++) {
 80021dc:	2300      	movs	r3, #0
 80021de:	73fb      	strb	r3, [r7, #15]
 80021e0:	e01c      	b.n	800221c <FEB_LTC6811_Update_GPIO+0xa0>
    	FEB_LTC6811_Configure_DCCBITS_A(current_ic);
 80021e2:	7bfb      	ldrb	r3, [r7, #15]
 80021e4:	4618      	mov	r0, r3
 80021e6:	f7ff fdf3 	bl	8001dd0 <FEB_LTC6811_Configure_DCCBITS_A>
		LTC6811_set_cfgr(current_ic, accumulator.IC_config, REFON, ADCOPT, GPIOBITS_A, DCCBITS_A, DCTOBITS, UV, OV);
 80021ea:	4b14      	ldr	r3, [pc, #80]	; (800223c <FEB_LTC6811_Update_GPIO+0xc0>)
 80021ec:	7819      	ldrb	r1, [r3, #0]
 80021ee:	4b14      	ldr	r3, [pc, #80]	; (8002240 <FEB_LTC6811_Update_GPIO+0xc4>)
 80021f0:	781c      	ldrb	r4, [r3, #0]
 80021f2:	4b14      	ldr	r3, [pc, #80]	; (8002244 <FEB_LTC6811_Update_GPIO+0xc8>)
 80021f4:	881b      	ldrh	r3, [r3, #0]
 80021f6:	4a14      	ldr	r2, [pc, #80]	; (8002248 <FEB_LTC6811_Update_GPIO+0xcc>)
 80021f8:	8812      	ldrh	r2, [r2, #0]
 80021fa:	7bf8      	ldrb	r0, [r7, #15]
 80021fc:	9204      	str	r2, [sp, #16]
 80021fe:	9303      	str	r3, [sp, #12]
 8002200:	4b12      	ldr	r3, [pc, #72]	; (800224c <FEB_LTC6811_Update_GPIO+0xd0>)
 8002202:	9302      	str	r3, [sp, #8]
 8002204:	4b12      	ldr	r3, [pc, #72]	; (8002250 <FEB_LTC6811_Update_GPIO+0xd4>)
 8002206:	9301      	str	r3, [sp, #4]
 8002208:	4b0b      	ldr	r3, [pc, #44]	; (8002238 <FEB_LTC6811_Update_GPIO+0xbc>)
 800220a:	9300      	str	r3, [sp, #0]
 800220c:	4623      	mov	r3, r4
 800220e:	460a      	mov	r2, r1
 8002210:	4910      	ldr	r1, [pc, #64]	; (8002254 <FEB_LTC6811_Update_GPIO+0xd8>)
 8002212:	f000 fcee 	bl	8002bf2 <LTC6811_set_cfgr>
    for (uint8_t current_ic = 0; current_ic < NUM_IC; current_ic++) {
 8002216:	7bfb      	ldrb	r3, [r7, #15]
 8002218:	3301      	adds	r3, #1
 800221a:	73fb      	strb	r3, [r7, #15]
 800221c:	7bfb      	ldrb	r3, [r7, #15]
 800221e:	2b07      	cmp	r3, #7
 8002220:	d9df      	bls.n	80021e2 <FEB_LTC6811_Update_GPIO+0x66>
    }
    wakeup_idle(NUM_IC);
 8002222:	2008      	movs	r0, #8
 8002224:	f000 fd06 	bl	8002c34 <wakeup_idle>
    LTC6811_wrcfg(NUM_IC, accumulator.IC_config);
 8002228:	490a      	ldr	r1, [pc, #40]	; (8002254 <FEB_LTC6811_Update_GPIO+0xd8>)
 800222a:	2008      	movs	r0, #8
 800222c:	f000 fc5b 	bl	8002ae6 <LTC6811_wrcfg>
}
 8002230:	bf00      	nop
 8002232:	3714      	adds	r7, #20
 8002234:	46bd      	mov	sp, r7
 8002236:	bd90      	pop	{r4, r7, pc}
 8002238:	20000038 	.word	0x20000038
 800223c:	20000035 	.word	0x20000035
 8002240:	200026a0 	.word	0x200026a0
 8002244:	2000003e 	.word	0x2000003e
 8002248:	20000040 	.word	0x20000040
 800224c:	20000044 	.word	0x20000044
 8002250:	200026a4 	.word	0x200026a4
 8002254:	200026b0 	.word	0x200026b0

08002258 <FEB_LTC6811_Start_GPIO_ADC_Measurement>:

void FEB_LTC6811_Start_GPIO_ADC_Measurement(void) {
 8002258:	b580      	push	{r7, lr}
 800225a:	af00      	add	r7, sp, #0
	wakeup_sleep(NUM_IC);
 800225c:	2008      	movs	r0, #8
 800225e:	f000 fd06 	bl	8002c6e <wakeup_sleep>
	LTC6811_adax(ADC_CONVERSION_MODE, AUX_CH_TO_CONVERT);
 8002262:	2100      	movs	r1, #0
 8002264:	2002      	movs	r0, #2
 8002266:	f000 fc60 	bl	8002b2a <LTC6811_adax>
	LTC6811_pollAdc();
 800226a:	f000 fc9d 	bl	8002ba8 <LTC6811_pollAdc>
}
 800226e:	bf00      	nop
 8002270:	bd80      	pop	{r7, pc}
	...

08002274 <FEB_LTC6811_Read_Aux_Voltages>:

void FEB_LTC6811_Read_Aux_Voltages(void) {
 8002274:	b580      	push	{r7, lr}
 8002276:	af00      	add	r7, sp, #0
	wakeup_sleep(NUM_IC);
 8002278:	2008      	movs	r0, #8
 800227a:	f000 fcf8 	bl	8002c6e <wakeup_sleep>
	LTC6811_rdaux(SEL_ALL_REG, NUM_IC, accumulator.IC_config);
 800227e:	4a03      	ldr	r2, [pc, #12]	; (800228c <FEB_LTC6811_Read_Aux_Voltages+0x18>)
 8002280:	2108      	movs	r1, #8
 8002282:	2000      	movs	r0, #0
 8002284:	f000 fc7a 	bl	8002b7c <LTC6811_rdaux>
}
 8002288:	bf00      	nop
 800228a:	bd80      	pop	{r7, pc}
 800228c:	200026b0 	.word	0x200026b0

08002290 <FEB_LTC6811_Store_Temperature>:

void FEB_LTC6811_Store_Temperature(uint8_t channel) {
 8002290:	b590      	push	{r4, r7, lr}
 8002292:	b085      	sub	sp, #20
 8002294:	af00      	add	r7, sp, #0
 8002296:	4603      	mov	r3, r0
 8002298:	71fb      	strb	r3, [r7, #7]
    for (uint16_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 800229a:	2300      	movs	r3, #0
 800229c:	81fb      	strh	r3, [r7, #14]
 800229e:	e1cd      	b.n	800263c <FEB_LTC6811_Store_Temperature+0x3ac>
    	switch (channel) {
 80022a0:	79fb      	ldrb	r3, [r7, #7]
 80022a2:	2b04      	cmp	r3, #4
 80022a4:	f200 81c7 	bhi.w	8002636 <FEB_LTC6811_Store_Temperature+0x3a6>
 80022a8:	a201      	add	r2, pc, #4	; (adr r2, 80022b0 <FEB_LTC6811_Store_Temperature+0x20>)
 80022aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022ae:	bf00      	nop
 80022b0:	080022c5 	.word	0x080022c5
 80022b4:	08002393 	.word	0x08002393
 80022b8:	08002461 	.word	0x08002461
 80022bc:	0800252f 	.word	0x0800252f
 80022c0:	08002601 	.word	0x08002601
    		case 0:
    			accumulator.banks[bank_idx].cells[12].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[0]);
 80022c4:	89fb      	ldrh	r3, [r7, #14]
 80022c6:	005b      	lsls	r3, r3, #1
 80022c8:	4acc      	ldr	r2, [pc, #816]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80022ca:	21e8      	movs	r1, #232	; 0xe8
 80022cc:	fb01 f303 	mul.w	r3, r1, r3
 80022d0:	4413      	add	r3, r2
 80022d2:	3348      	adds	r3, #72	; 0x48
 80022d4:	881b      	ldrh	r3, [r3, #0]
 80022d6:	89fc      	ldrh	r4, [r7, #14]
 80022d8:	4618      	mov	r0, r3
 80022da:	f000 f9bd 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80022de:	eef0 7a40 	vmov.f32	s15, s0
 80022e2:	4ac6      	ldr	r2, [pc, #792]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80022e4:	4623      	mov	r3, r4
 80022e6:	011b      	lsls	r3, r3, #4
 80022e8:	4423      	add	r3, r4
 80022ea:	00db      	lsls	r3, r3, #3
 80022ec:	4413      	add	r3, r2
 80022ee:	f503 63f4 	add.w	r3, r3, #1952	; 0x7a0
 80022f2:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[16].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[1]);
 80022f6:	89fb      	ldrh	r3, [r7, #14]
 80022f8:	005b      	lsls	r3, r3, #1
 80022fa:	4ac0      	ldr	r2, [pc, #768]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80022fc:	21e8      	movs	r1, #232	; 0xe8
 80022fe:	fb01 f303 	mul.w	r3, r1, r3
 8002302:	4413      	add	r3, r2
 8002304:	334a      	adds	r3, #74	; 0x4a
 8002306:	881b      	ldrh	r3, [r3, #0]
 8002308:	89fc      	ldrh	r4, [r7, #14]
 800230a:	4618      	mov	r0, r3
 800230c:	f000 f9a4 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002310:	eef0 7a40 	vmov.f32	s15, s0
 8002314:	4ab9      	ldr	r2, [pc, #740]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002316:	4623      	mov	r3, r4
 8002318:	011b      	lsls	r3, r3, #4
 800231a:	4423      	add	r3, r4
 800231c:	00db      	lsls	r3, r3, #3
 800231e:	4413      	add	r3, r2
 8002320:	f503 63f8 	add.w	r3, r3, #1984	; 0x7c0
 8002324:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[4].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[0]);
 8002328:	89fb      	ldrh	r3, [r7, #14]
 800232a:	005b      	lsls	r3, r3, #1
 800232c:	3301      	adds	r3, #1
 800232e:	4ab3      	ldr	r2, [pc, #716]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002330:	21e8      	movs	r1, #232	; 0xe8
 8002332:	fb01 f303 	mul.w	r3, r1, r3
 8002336:	4413      	add	r3, r2
 8002338:	3348      	adds	r3, #72	; 0x48
 800233a:	881b      	ldrh	r3, [r3, #0]
 800233c:	89fc      	ldrh	r4, [r7, #14]
 800233e:	4618      	mov	r0, r3
 8002340:	f000 f98a 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002344:	eef0 7a40 	vmov.f32	s15, s0
 8002348:	4aac      	ldr	r2, [pc, #688]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 800234a:	4623      	mov	r3, r4
 800234c:	011b      	lsls	r3, r3, #4
 800234e:	4423      	add	r3, r4
 8002350:	00db      	lsls	r3, r3, #3
 8002352:	4413      	add	r3, r2
 8002354:	f503 63ec 	add.w	r3, r3, #1888	; 0x760
 8002358:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[8].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[1]);
 800235c:	89fb      	ldrh	r3, [r7, #14]
 800235e:	005b      	lsls	r3, r3, #1
 8002360:	3301      	adds	r3, #1
 8002362:	4aa6      	ldr	r2, [pc, #664]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002364:	21e8      	movs	r1, #232	; 0xe8
 8002366:	fb01 f303 	mul.w	r3, r1, r3
 800236a:	4413      	add	r3, r2
 800236c:	334a      	adds	r3, #74	; 0x4a
 800236e:	881b      	ldrh	r3, [r3, #0]
 8002370:	89fc      	ldrh	r4, [r7, #14]
 8002372:	4618      	mov	r0, r3
 8002374:	f000 f970 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002378:	eef0 7a40 	vmov.f32	s15, s0
 800237c:	4a9f      	ldr	r2, [pc, #636]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 800237e:	4623      	mov	r3, r4
 8002380:	011b      	lsls	r3, r3, #4
 8002382:	4423      	add	r3, r4
 8002384:	00db      	lsls	r3, r3, #3
 8002386:	4413      	add	r3, r2
 8002388:	f503 63f0 	add.w	r3, r3, #1920	; 0x780
 800238c:	edc3 7a00 	vstr	s15, [r3]
    			break;
 8002390:	e151      	b.n	8002636 <FEB_LTC6811_Store_Temperature+0x3a6>
    		case 1:
    			accumulator.banks[bank_idx].cells[11].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[0]);
 8002392:	89fb      	ldrh	r3, [r7, #14]
 8002394:	005b      	lsls	r3, r3, #1
 8002396:	4a99      	ldr	r2, [pc, #612]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002398:	21e8      	movs	r1, #232	; 0xe8
 800239a:	fb01 f303 	mul.w	r3, r1, r3
 800239e:	4413      	add	r3, r2
 80023a0:	3348      	adds	r3, #72	; 0x48
 80023a2:	881b      	ldrh	r3, [r3, #0]
 80023a4:	89fc      	ldrh	r4, [r7, #14]
 80023a6:	4618      	mov	r0, r3
 80023a8:	f000 f956 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80023ac:	eef0 7a40 	vmov.f32	s15, s0
 80023b0:	4a92      	ldr	r2, [pc, #584]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80023b2:	4623      	mov	r3, r4
 80023b4:	011b      	lsls	r3, r3, #4
 80023b6:	4423      	add	r3, r4
 80023b8:	00db      	lsls	r3, r3, #3
 80023ba:	4413      	add	r3, r2
 80023bc:	f503 63f3 	add.w	r3, r3, #1944	; 0x798
 80023c0:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[15].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[1]);
 80023c4:	89fb      	ldrh	r3, [r7, #14]
 80023c6:	005b      	lsls	r3, r3, #1
 80023c8:	4a8c      	ldr	r2, [pc, #560]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80023ca:	21e8      	movs	r1, #232	; 0xe8
 80023cc:	fb01 f303 	mul.w	r3, r1, r3
 80023d0:	4413      	add	r3, r2
 80023d2:	334a      	adds	r3, #74	; 0x4a
 80023d4:	881b      	ldrh	r3, [r3, #0]
 80023d6:	89fc      	ldrh	r4, [r7, #14]
 80023d8:	4618      	mov	r0, r3
 80023da:	f000 f93d 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80023de:	eef0 7a40 	vmov.f32	s15, s0
 80023e2:	4a86      	ldr	r2, [pc, #536]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80023e4:	4623      	mov	r3, r4
 80023e6:	011b      	lsls	r3, r3, #4
 80023e8:	4423      	add	r3, r4
 80023ea:	00db      	lsls	r3, r3, #3
 80023ec:	4413      	add	r3, r2
 80023ee:	f503 63f7 	add.w	r3, r3, #1976	; 0x7b8
 80023f2:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[3].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[0]);
 80023f6:	89fb      	ldrh	r3, [r7, #14]
 80023f8:	005b      	lsls	r3, r3, #1
 80023fa:	3301      	adds	r3, #1
 80023fc:	4a7f      	ldr	r2, [pc, #508]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80023fe:	21e8      	movs	r1, #232	; 0xe8
 8002400:	fb01 f303 	mul.w	r3, r1, r3
 8002404:	4413      	add	r3, r2
 8002406:	3348      	adds	r3, #72	; 0x48
 8002408:	881b      	ldrh	r3, [r3, #0]
 800240a:	89fc      	ldrh	r4, [r7, #14]
 800240c:	4618      	mov	r0, r3
 800240e:	f000 f923 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002412:	eef0 7a40 	vmov.f32	s15, s0
 8002416:	4a79      	ldr	r2, [pc, #484]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002418:	4623      	mov	r3, r4
 800241a:	011b      	lsls	r3, r3, #4
 800241c:	4423      	add	r3, r4
 800241e:	00db      	lsls	r3, r3, #3
 8002420:	4413      	add	r3, r2
 8002422:	f503 63eb 	add.w	r3, r3, #1880	; 0x758
 8002426:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[7].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[1]);
 800242a:	89fb      	ldrh	r3, [r7, #14]
 800242c:	005b      	lsls	r3, r3, #1
 800242e:	3301      	adds	r3, #1
 8002430:	4a72      	ldr	r2, [pc, #456]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002432:	21e8      	movs	r1, #232	; 0xe8
 8002434:	fb01 f303 	mul.w	r3, r1, r3
 8002438:	4413      	add	r3, r2
 800243a:	334a      	adds	r3, #74	; 0x4a
 800243c:	881b      	ldrh	r3, [r3, #0]
 800243e:	89fc      	ldrh	r4, [r7, #14]
 8002440:	4618      	mov	r0, r3
 8002442:	f000 f909 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002446:	eef0 7a40 	vmov.f32	s15, s0
 800244a:	4a6c      	ldr	r2, [pc, #432]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 800244c:	4623      	mov	r3, r4
 800244e:	011b      	lsls	r3, r3, #4
 8002450:	4423      	add	r3, r4
 8002452:	00db      	lsls	r3, r3, #3
 8002454:	4413      	add	r3, r2
 8002456:	f503 63ef 	add.w	r3, r3, #1912	; 0x778
 800245a:	edc3 7a00 	vstr	s15, [r3]
    			break;
 800245e:	e0ea      	b.n	8002636 <FEB_LTC6811_Store_Temperature+0x3a6>
    		case 2:
    			accumulator.banks[bank_idx].cells[10].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[0]);
 8002460:	89fb      	ldrh	r3, [r7, #14]
 8002462:	005b      	lsls	r3, r3, #1
 8002464:	4a65      	ldr	r2, [pc, #404]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002466:	21e8      	movs	r1, #232	; 0xe8
 8002468:	fb01 f303 	mul.w	r3, r1, r3
 800246c:	4413      	add	r3, r2
 800246e:	3348      	adds	r3, #72	; 0x48
 8002470:	881b      	ldrh	r3, [r3, #0]
 8002472:	89fc      	ldrh	r4, [r7, #14]
 8002474:	4618      	mov	r0, r3
 8002476:	f000 f8ef 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 800247a:	eef0 7a40 	vmov.f32	s15, s0
 800247e:	4a5f      	ldr	r2, [pc, #380]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002480:	4623      	mov	r3, r4
 8002482:	011b      	lsls	r3, r3, #4
 8002484:	4423      	add	r3, r4
 8002486:	00db      	lsls	r3, r3, #3
 8002488:	4413      	add	r3, r2
 800248a:	f503 63f2 	add.w	r3, r3, #1936	; 0x790
 800248e:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[14].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[1]);
 8002492:	89fb      	ldrh	r3, [r7, #14]
 8002494:	005b      	lsls	r3, r3, #1
 8002496:	4a59      	ldr	r2, [pc, #356]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002498:	21e8      	movs	r1, #232	; 0xe8
 800249a:	fb01 f303 	mul.w	r3, r1, r3
 800249e:	4413      	add	r3, r2
 80024a0:	334a      	adds	r3, #74	; 0x4a
 80024a2:	881b      	ldrh	r3, [r3, #0]
 80024a4:	89fc      	ldrh	r4, [r7, #14]
 80024a6:	4618      	mov	r0, r3
 80024a8:	f000 f8d6 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80024ac:	eef0 7a40 	vmov.f32	s15, s0
 80024b0:	4a52      	ldr	r2, [pc, #328]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80024b2:	4623      	mov	r3, r4
 80024b4:	011b      	lsls	r3, r3, #4
 80024b6:	4423      	add	r3, r4
 80024b8:	00db      	lsls	r3, r3, #3
 80024ba:	4413      	add	r3, r2
 80024bc:	f503 63f6 	add.w	r3, r3, #1968	; 0x7b0
 80024c0:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[2].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[0]);
 80024c4:	89fb      	ldrh	r3, [r7, #14]
 80024c6:	005b      	lsls	r3, r3, #1
 80024c8:	3301      	adds	r3, #1
 80024ca:	4a4c      	ldr	r2, [pc, #304]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80024cc:	21e8      	movs	r1, #232	; 0xe8
 80024ce:	fb01 f303 	mul.w	r3, r1, r3
 80024d2:	4413      	add	r3, r2
 80024d4:	3348      	adds	r3, #72	; 0x48
 80024d6:	881b      	ldrh	r3, [r3, #0]
 80024d8:	89fc      	ldrh	r4, [r7, #14]
 80024da:	4618      	mov	r0, r3
 80024dc:	f000 f8bc 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80024e0:	eef0 7a40 	vmov.f32	s15, s0
 80024e4:	4a45      	ldr	r2, [pc, #276]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80024e6:	4623      	mov	r3, r4
 80024e8:	011b      	lsls	r3, r3, #4
 80024ea:	4423      	add	r3, r4
 80024ec:	00db      	lsls	r3, r3, #3
 80024ee:	4413      	add	r3, r2
 80024f0:	f503 63ea 	add.w	r3, r3, #1872	; 0x750
 80024f4:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[6].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[1]);
 80024f8:	89fb      	ldrh	r3, [r7, #14]
 80024fa:	005b      	lsls	r3, r3, #1
 80024fc:	3301      	adds	r3, #1
 80024fe:	4a3f      	ldr	r2, [pc, #252]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002500:	21e8      	movs	r1, #232	; 0xe8
 8002502:	fb01 f303 	mul.w	r3, r1, r3
 8002506:	4413      	add	r3, r2
 8002508:	334a      	adds	r3, #74	; 0x4a
 800250a:	881b      	ldrh	r3, [r3, #0]
 800250c:	89fc      	ldrh	r4, [r7, #14]
 800250e:	4618      	mov	r0, r3
 8002510:	f000 f8a2 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002514:	eef0 7a40 	vmov.f32	s15, s0
 8002518:	4a38      	ldr	r2, [pc, #224]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 800251a:	4623      	mov	r3, r4
 800251c:	011b      	lsls	r3, r3, #4
 800251e:	4423      	add	r3, r4
 8002520:	00db      	lsls	r3, r3, #3
 8002522:	4413      	add	r3, r2
 8002524:	f503 63ee 	add.w	r3, r3, #1904	; 0x770
 8002528:	edc3 7a00 	vstr	s15, [r3]
    			break;
 800252c:	e083      	b.n	8002636 <FEB_LTC6811_Store_Temperature+0x3a6>
    		case 3:
    			accumulator.banks[bank_idx].cells[9].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[0]);
 800252e:	89fb      	ldrh	r3, [r7, #14]
 8002530:	005b      	lsls	r3, r3, #1
 8002532:	4a32      	ldr	r2, [pc, #200]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002534:	21e8      	movs	r1, #232	; 0xe8
 8002536:	fb01 f303 	mul.w	r3, r1, r3
 800253a:	4413      	add	r3, r2
 800253c:	3348      	adds	r3, #72	; 0x48
 800253e:	881b      	ldrh	r3, [r3, #0]
 8002540:	89fc      	ldrh	r4, [r7, #14]
 8002542:	4618      	mov	r0, r3
 8002544:	f000 f888 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 8002548:	eef0 7a40 	vmov.f32	s15, s0
 800254c:	4a2b      	ldr	r2, [pc, #172]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 800254e:	4623      	mov	r3, r4
 8002550:	011b      	lsls	r3, r3, #4
 8002552:	4423      	add	r3, r4
 8002554:	00db      	lsls	r3, r3, #3
 8002556:	4413      	add	r3, r2
 8002558:	f503 63f1 	add.w	r3, r3, #1928	; 0x788
 800255c:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[13].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2].aux.a_codes[1]);
 8002560:	89fb      	ldrh	r3, [r7, #14]
 8002562:	005b      	lsls	r3, r3, #1
 8002564:	4a25      	ldr	r2, [pc, #148]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002566:	21e8      	movs	r1, #232	; 0xe8
 8002568:	fb01 f303 	mul.w	r3, r1, r3
 800256c:	4413      	add	r3, r2
 800256e:	334a      	adds	r3, #74	; 0x4a
 8002570:	881b      	ldrh	r3, [r3, #0]
 8002572:	89fc      	ldrh	r4, [r7, #14]
 8002574:	4618      	mov	r0, r3
 8002576:	f000 f86f 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 800257a:	eef0 7a40 	vmov.f32	s15, s0
 800257e:	4a1f      	ldr	r2, [pc, #124]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 8002580:	4623      	mov	r3, r4
 8002582:	011b      	lsls	r3, r3, #4
 8002584:	4423      	add	r3, r4
 8002586:	00db      	lsls	r3, r3, #3
 8002588:	4413      	add	r3, r2
 800258a:	f503 63f5 	add.w	r3, r3, #1960	; 0x7a8
 800258e:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[1].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[0]);
 8002592:	89fb      	ldrh	r3, [r7, #14]
 8002594:	005b      	lsls	r3, r3, #1
 8002596:	3301      	adds	r3, #1
 8002598:	4a18      	ldr	r2, [pc, #96]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 800259a:	21e8      	movs	r1, #232	; 0xe8
 800259c:	fb01 f303 	mul.w	r3, r1, r3
 80025a0:	4413      	add	r3, r2
 80025a2:	3348      	adds	r3, #72	; 0x48
 80025a4:	881b      	ldrh	r3, [r3, #0]
 80025a6:	89fc      	ldrh	r4, [r7, #14]
 80025a8:	4618      	mov	r0, r3
 80025aa:	f000 f855 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80025ae:	eef0 7a40 	vmov.f32	s15, s0
 80025b2:	4a12      	ldr	r2, [pc, #72]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80025b4:	4623      	mov	r3, r4
 80025b6:	011b      	lsls	r3, r3, #4
 80025b8:	4423      	add	r3, r4
 80025ba:	00db      	lsls	r3, r3, #3
 80025bc:	4413      	add	r3, r2
 80025be:	f503 63e9 	add.w	r3, r3, #1864	; 0x748
 80025c2:	edc3 7a00 	vstr	s15, [r3]
    			accumulator.banks[bank_idx].cells[5].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[1]);
 80025c6:	89fb      	ldrh	r3, [r7, #14]
 80025c8:	005b      	lsls	r3, r3, #1
 80025ca:	3301      	adds	r3, #1
 80025cc:	4a0b      	ldr	r2, [pc, #44]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80025ce:	21e8      	movs	r1, #232	; 0xe8
 80025d0:	fb01 f303 	mul.w	r3, r1, r3
 80025d4:	4413      	add	r3, r2
 80025d6:	334a      	adds	r3, #74	; 0x4a
 80025d8:	881b      	ldrh	r3, [r3, #0]
 80025da:	89fc      	ldrh	r4, [r7, #14]
 80025dc:	4618      	mov	r0, r3
 80025de:	f000 f83b 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 80025e2:	eef0 7a40 	vmov.f32	s15, s0
 80025e6:	4a05      	ldr	r2, [pc, #20]	; (80025fc <FEB_LTC6811_Store_Temperature+0x36c>)
 80025e8:	4623      	mov	r3, r4
 80025ea:	011b      	lsls	r3, r3, #4
 80025ec:	4423      	add	r3, r4
 80025ee:	00db      	lsls	r3, r3, #3
 80025f0:	4413      	add	r3, r2
 80025f2:	f503 63ed 	add.w	r3, r3, #1896	; 0x768
 80025f6:	edc3 7a00 	vstr	s15, [r3]
    			break;
 80025fa:	e01c      	b.n	8002636 <FEB_LTC6811_Store_Temperature+0x3a6>
 80025fc:	200026b0 	.word	0x200026b0
    		case 4:
    			accumulator.banks[bank_idx].cells[0].temperature = FEB_LTC6811_Convert_Temperature(accumulator.IC_config[bank_idx * 2 + 1].aux.a_codes[0]);
 8002600:	89fb      	ldrh	r3, [r7, #14]
 8002602:	005b      	lsls	r3, r3, #1
 8002604:	3301      	adds	r3, #1
 8002606:	4a12      	ldr	r2, [pc, #72]	; (8002650 <FEB_LTC6811_Store_Temperature+0x3c0>)
 8002608:	21e8      	movs	r1, #232	; 0xe8
 800260a:	fb01 f303 	mul.w	r3, r1, r3
 800260e:	4413      	add	r3, r2
 8002610:	3348      	adds	r3, #72	; 0x48
 8002612:	881b      	ldrh	r3, [r3, #0]
 8002614:	89fc      	ldrh	r4, [r7, #14]
 8002616:	4618      	mov	r0, r3
 8002618:	f000 f81e 	bl	8002658 <FEB_LTC6811_Convert_Temperature>
 800261c:	eef0 7a40 	vmov.f32	s15, s0
 8002620:	4a0b      	ldr	r2, [pc, #44]	; (8002650 <FEB_LTC6811_Store_Temperature+0x3c0>)
 8002622:	4623      	mov	r3, r4
 8002624:	011b      	lsls	r3, r3, #4
 8002626:	4423      	add	r3, r4
 8002628:	00db      	lsls	r3, r3, #3
 800262a:	4413      	add	r3, r2
 800262c:	f503 63e8 	add.w	r3, r3, #1856	; 0x740
 8002630:	edc3 7a00 	vstr	s15, [r3]
    			break;
 8002634:	bf00      	nop
    for (uint16_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 8002636:	89fb      	ldrh	r3, [r7, #14]
 8002638:	3301      	adds	r3, #1
 800263a:	81fb      	strh	r3, [r7, #14]
 800263c:	89fb      	ldrh	r3, [r7, #14]
 800263e:	2b03      	cmp	r3, #3
 8002640:	f67f ae2e 	bls.w	80022a0 <FEB_LTC6811_Store_Temperature+0x10>
    	}
    }
}
 8002644:	bf00      	nop
 8002646:	bf00      	nop
 8002648:	3714      	adds	r7, #20
 800264a:	46bd      	mov	sp, r7
 800264c:	bd90      	pop	{r4, r7, pc}
 800264e:	bf00      	nop
 8002650:	200026b0 	.word	0x200026b0
 8002654:	00000000 	.word	0x00000000

08002658 <FEB_LTC6811_Convert_Temperature>:

/*
 * @param value := Voltage (100uV) from LTC6811
 */
float FEB_LTC6811_Convert_Temperature(uint16_t value) {
 8002658:	b580      	push	{r7, lr}
 800265a:	b082      	sub	sp, #8
 800265c:	af00      	add	r7, sp, #0
 800265e:	4603      	mov	r3, r0
 8002660:	80fb      	strh	r3, [r7, #6]
	// Check for error: value = 2^16 - 1
	if (value == 65535) {
 8002662:	88fb      	ldrh	r3, [r7, #6]
 8002664:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002668:	4293      	cmp	r3, r2
 800266a:	d102      	bne.n	8002672 <FEB_LTC6811_Convert_Temperature+0x1a>
		return -42;
 800266c:	eddf 7a10 	vldr	s15, [pc, #64]	; 80026b0 <FEB_LTC6811_Convert_Temperature+0x58>
 8002670:	e015      	b.n	800269e <FEB_LTC6811_Convert_Temperature+0x46>
	}
	//return value * 0.0001;
	return FEB_LTC6811_Temp_LUT_Get_Temperature(value * 0.0001);
 8002672:	88fb      	ldrh	r3, [r7, #6]
 8002674:	4618      	mov	r0, r3
 8002676:	f7fd ff75 	bl	8000564 <__aeabi_i2d>
 800267a:	a30b      	add	r3, pc, #44	; (adr r3, 80026a8 <FEB_LTC6811_Convert_Temperature+0x50>)
 800267c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002680:	f7fd ffda 	bl	8000638 <__aeabi_dmul>
 8002684:	4602      	mov	r2, r0
 8002686:	460b      	mov	r3, r1
 8002688:	4610      	mov	r0, r2
 800268a:	4619      	mov	r1, r3
 800268c:	f7fe facc 	bl	8000c28 <__aeabi_d2f>
 8002690:	4603      	mov	r3, r0
 8002692:	ee00 3a10 	vmov	s0, r3
 8002696:	f000 f92f 	bl	80028f8 <FEB_LTC6811_Temp_LUT_Get_Temperature>
 800269a:	eef0 7a40 	vmov.f32	s15, s0
}
 800269e:	eeb0 0a67 	vmov.f32	s0, s15
 80026a2:	3708      	adds	r7, #8
 80026a4:	46bd      	mov	sp, r7
 80026a6:	bd80      	pop	{r7, pc}
 80026a8:	eb1c432d 	.word	0xeb1c432d
 80026ac:	3f1a36e2 	.word	0x3f1a36e2
 80026b0:	c2280000 	.word	0xc2280000

080026b4 <FEB_LTC6811_Validate_Temperature>:

// ******************** Temperature Interface ********************

void FEB_LTC6811_Validate_Temperature(void) {
 80026b4:	b580      	push	{r7, lr}
 80026b6:	b084      	sub	sp, #16
 80026b8:	af00      	add	r7, sp, #0
	if (FEB_BMS_Shutdown_State == 1) {
 80026ba:	4b32      	ldr	r3, [pc, #200]	; (8002784 <FEB_LTC6811_Validate_Temperature+0xd0>)
 80026bc:	781b      	ldrb	r3, [r3, #0]
 80026be:	2b01      	cmp	r3, #1
 80026c0:	d05b      	beq.n	800277a <FEB_LTC6811_Validate_Temperature+0xc6>
		return;
	}
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 80026c2:	2300      	movs	r3, #0
 80026c4:	73fb      	strb	r3, [r7, #15]
 80026c6:	e054      	b.n	8002772 <FEB_LTC6811_Validate_Temperature+0xbe>
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 80026c8:	2300      	movs	r3, #0
 80026ca:	73bb      	strb	r3, [r7, #14]
 80026cc:	e04b      	b.n	8002766 <FEB_LTC6811_Validate_Temperature+0xb2>
			float temperature = accumulator.banks[bank_idx].cells[cell_idx].temperature;
 80026ce:	7bfa      	ldrb	r2, [r7, #15]
 80026d0:	7bb9      	ldrb	r1, [r7, #14]
 80026d2:	482d      	ldr	r0, [pc, #180]	; (8002788 <FEB_LTC6811_Validate_Temperature+0xd4>)
 80026d4:	4613      	mov	r3, r2
 80026d6:	011b      	lsls	r3, r3, #4
 80026d8:	4413      	add	r3, r2
 80026da:	440b      	add	r3, r1
 80026dc:	33e8      	adds	r3, #232	; 0xe8
 80026de:	00db      	lsls	r3, r3, #3
 80026e0:	4403      	add	r3, r0
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	60bb      	str	r3, [r7, #8]
			if (fabs(temperature - -42.0f) < 0.1f || fabs(temperature  - -41.0f) < 0.1f) {
 80026e6:	edd7 7a02 	vldr	s15, [r7, #8]
 80026ea:	ed9f 7a28 	vldr	s14, [pc, #160]	; 800278c <FEB_LTC6811_Validate_Temperature+0xd8>
 80026ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80026f2:	eef0 7ae7 	vabs.f32	s15, s15
 80026f6:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8002790 <FEB_LTC6811_Validate_Temperature+0xdc>
 80026fa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80026fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002702:	d42c      	bmi.n	800275e <FEB_LTC6811_Validate_Temperature+0xaa>
 8002704:	edd7 7a02 	vldr	s15, [r7, #8]
 8002708:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8002794 <FEB_LTC6811_Validate_Temperature+0xe0>
 800270c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002710:	eef0 7ae7 	vabs.f32	s15, s15
 8002714:	ed9f 7a1e 	vldr	s14, [pc, #120]	; 8002790 <FEB_LTC6811_Validate_Temperature+0xdc>
 8002718:	eef4 7ac7 	vcmpe.f32	s15, s14
 800271c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002720:	d41d      	bmi.n	800275e <FEB_LTC6811_Validate_Temperature+0xaa>
			  // TK: override error code, might want to disable this after fixing the segments
			  continue;
			}
			float min_temperature = FEB_LTC6811_CELL_MIN_OPERATION_TEMPERATURE;
 8002722:	4b1d      	ldr	r3, [pc, #116]	; (8002798 <FEB_LTC6811_Validate_Temperature+0xe4>)
 8002724:	607b      	str	r3, [r7, #4]
			float max_temperature = FEB_LTC6811_CELL_MAX_OPERATION_TEMPERATURE;
 8002726:	4b1d      	ldr	r3, [pc, #116]	; (800279c <FEB_LTC6811_Validate_Temperature+0xe8>)
 8002728:	603b      	str	r3, [r7, #0]
			if (FEB_CAN_CHARGER_STATE == 1) {
				min_temperature = FEB_LTC6811_CELL_MIN_CHARGING_TEMPERATURE;
				max_temperature = FEB_LTC6811_CELL_MAX_CHARGING_TEMPERATURE;
			}
			if (temperature < min_temperature) {
 800272a:	ed97 7a02 	vldr	s14, [r7, #8]
 800272e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002732:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800273a:	d503      	bpl.n	8002744 <FEB_LTC6811_Validate_Temperature+0x90>
				FEB_BMS_Shutdown_Initiate("Module under temperature");
 800273c:	4818      	ldr	r0, [pc, #96]	; (80027a0 <FEB_LTC6811_Validate_Temperature+0xec>)
 800273e:	f7fe fc69 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
 8002742:	e00d      	b.n	8002760 <FEB_LTC6811_Validate_Temperature+0xac>
			} else if (temperature > max_temperature) {
 8002744:	ed97 7a02 	vldr	s14, [r7, #8]
 8002748:	edd7 7a00 	vldr	s15, [r7]
 800274c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002754:	dd04      	ble.n	8002760 <FEB_LTC6811_Validate_Temperature+0xac>
				FEB_BMS_Shutdown_Initiate("Module over temperature");
 8002756:	4813      	ldr	r0, [pc, #76]	; (80027a4 <FEB_LTC6811_Validate_Temperature+0xf0>)
 8002758:	f7fe fc5c 	bl	8001014 <FEB_BMS_Shutdown_Initiate>
 800275c:	e000      	b.n	8002760 <FEB_LTC6811_Validate_Temperature+0xac>
			  continue;
 800275e:	bf00      	nop
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8002760:	7bbb      	ldrb	r3, [r7, #14]
 8002762:	3301      	adds	r3, #1
 8002764:	73bb      	strb	r3, [r7, #14]
 8002766:	7bbb      	ldrb	r3, [r7, #14]
 8002768:	2b10      	cmp	r3, #16
 800276a:	d9b0      	bls.n	80026ce <FEB_LTC6811_Validate_Temperature+0x1a>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 800276c:	7bfb      	ldrb	r3, [r7, #15]
 800276e:	3301      	adds	r3, #1
 8002770:	73fb      	strb	r3, [r7, #15]
 8002772:	7bfb      	ldrb	r3, [r7, #15]
 8002774:	2b03      	cmp	r3, #3
 8002776:	d9a7      	bls.n	80026c8 <FEB_LTC6811_Validate_Temperature+0x14>
 8002778:	e000      	b.n	800277c <FEB_LTC6811_Validate_Temperature+0xc8>
		return;
 800277a:	bf00      	nop
			}
		}
	}
}
 800277c:	3710      	adds	r7, #16
 800277e:	46bd      	mov	sp, r7
 8002780:	bd80      	pop	{r7, pc}
 8002782:	bf00      	nop
 8002784:	200025e8 	.word	0x200025e8
 8002788:	200026b0 	.word	0x200026b0
 800278c:	42280000 	.word	0x42280000
 8002790:	3dcccccd 	.word	0x3dcccccd
 8002794:	42240000 	.word	0x42240000
 8002798:	c1a00000 	.word	0xc1a00000
 800279c:	42700000 	.word	0x42700000
 80027a0:	0800c800 	.word	0x0800c800
 80027a4:	0800c81c 	.word	0x0800c81c

080027a8 <FEB_LTC6811_UART_Transmit_Temperature>:

void FEB_LTC6811_UART_Transmit_Temperature() {
 80027a8:	b580      	push	{r7, lr}
 80027aa:	f5ad 6da1 	sub.w	sp, sp, #1288	; 0x508
 80027ae:	af00      	add	r7, sp, #0
	char UART_Str[1024];
	char temp_str[256];

	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 80027b0:	2300      	movs	r3, #0
 80027b2:	f887 3507 	strb.w	r3, [r7, #1287]	; 0x507
 80027b6:	e05e      	b.n	8002876 <FEB_LTC6811_UART_Transmit_Temperature+0xce>
		// Add bank_idx, cell_idx to {@code UART_Str}
		sprintf(UART_Str, "%d", (bank_idx << FEB_LTC6811_UART_BITS_PER_MESSAGE) + FEB_LTC6811_UART_TEMPERATURE_ID);
 80027b8:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 80027bc:	00db      	lsls	r3, r3, #3
 80027be:	1c5a      	adds	r2, r3, #1
 80027c0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80027c4:	4931      	ldr	r1, [pc, #196]	; (800288c <FEB_LTC6811_UART_Transmit_Temperature+0xe4>)
 80027c6:	4618      	mov	r0, r3
 80027c8:	f007 fcf4 	bl	800a1b4 <siprintf>


		// Add values to {@code UART_Str}
		for (uint16_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 80027cc:	2300      	movs	r3, #0
 80027ce:	f8a7 3504 	strh.w	r3, [r7, #1284]	; 0x504
 80027d2:	e02a      	b.n	800282a <FEB_LTC6811_UART_Transmit_Temperature+0x82>
			float temperature = accumulator.banks[bank_idx].cells[cell_idx].temperature;
 80027d4:	f897 2507 	ldrb.w	r2, [r7, #1287]	; 0x507
 80027d8:	f8b7 1504 	ldrh.w	r1, [r7, #1284]	; 0x504
 80027dc:	482c      	ldr	r0, [pc, #176]	; (8002890 <FEB_LTC6811_UART_Transmit_Temperature+0xe8>)
 80027de:	4613      	mov	r3, r2
 80027e0:	011b      	lsls	r3, r3, #4
 80027e2:	4413      	add	r3, r2
 80027e4:	440b      	add	r3, r1
 80027e6:	33e8      	adds	r3, #232	; 0xe8
 80027e8:	00db      	lsls	r3, r3, #3
 80027ea:	4403      	add	r3, r0
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	f507 62a0 	add.w	r2, r7, #1280	; 0x500
 80027f2:	6013      	str	r3, [r2, #0]

			sprintf(temp_str, " %f", temperature);
 80027f4:	f507 63a0 	add.w	r3, r7, #1280	; 0x500
 80027f8:	6818      	ldr	r0, [r3, #0]
 80027fa:	f7fd fec5 	bl	8000588 <__aeabi_f2d>
 80027fe:	4602      	mov	r2, r0
 8002800:	460b      	mov	r3, r1
 8002802:	4638      	mov	r0, r7
 8002804:	4923      	ldr	r1, [pc, #140]	; (8002894 <FEB_LTC6811_UART_Transmit_Temperature+0xec>)
 8002806:	f007 fcd5 	bl	800a1b4 <siprintf>
			strncat(UART_Str, temp_str, strlen(temp_str));
 800280a:	463b      	mov	r3, r7
 800280c:	4618      	mov	r0, r3
 800280e:	f7fd fcff 	bl	8000210 <strlen>
 8002812:	4602      	mov	r2, r0
 8002814:	4639      	mov	r1, r7
 8002816:	f507 7380 	add.w	r3, r7, #256	; 0x100
 800281a:	4618      	mov	r0, r3
 800281c:	f007 fcea 	bl	800a1f4 <strncat>
		for (uint16_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 8002820:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 8002824:	3301      	adds	r3, #1
 8002826:	f8a7 3504 	strh.w	r3, [r7, #1284]	; 0x504
 800282a:	f8b7 3504 	ldrh.w	r3, [r7, #1284]	; 0x504
 800282e:	2b10      	cmp	r3, #16
 8002830:	d9d0      	bls.n	80027d4 <FEB_LTC6811_UART_Transmit_Temperature+0x2c>
		}

		// Add '\n' to {@code UART_Str}
		sprintf(temp_str, "\n");
 8002832:	463b      	mov	r3, r7
 8002834:	4918      	ldr	r1, [pc, #96]	; (8002898 <FEB_LTC6811_UART_Transmit_Temperature+0xf0>)
 8002836:	4618      	mov	r0, r3
 8002838:	f007 fcbc 	bl	800a1b4 <siprintf>
		strncat(UART_Str, temp_str, strlen(temp_str));
 800283c:	463b      	mov	r3, r7
 800283e:	4618      	mov	r0, r3
 8002840:	f7fd fce6 	bl	8000210 <strlen>
 8002844:	4602      	mov	r2, r0
 8002846:	4639      	mov	r1, r7
 8002848:	f507 7380 	add.w	r3, r7, #256	; 0x100
 800284c:	4618      	mov	r0, r3
 800284e:	f007 fcd1 	bl	800a1f4 <strncat>
		HAL_UART_Transmit(&huart2, (uint8_t*) UART_Str, strlen(UART_Str), 100);
 8002852:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8002856:	4618      	mov	r0, r3
 8002858:	f7fd fcda 	bl	8000210 <strlen>
 800285c:	4603      	mov	r3, r0
 800285e:	b29a      	uxth	r2, r3
 8002860:	f507 7180 	add.w	r1, r7, #256	; 0x100
 8002864:	2364      	movs	r3, #100	; 0x64
 8002866:	480d      	ldr	r0, [pc, #52]	; (800289c <FEB_LTC6811_UART_Transmit_Temperature+0xf4>)
 8002868:	f006 fb93 	bl	8008f92 <HAL_UART_Transmit>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 800286c:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 8002870:	3301      	adds	r3, #1
 8002872:	f887 3507 	strb.w	r3, [r7, #1287]	; 0x507
 8002876:	f897 3507 	ldrb.w	r3, [r7, #1287]	; 0x507
 800287a:	2b03      	cmp	r3, #3
 800287c:	d99c      	bls.n	80027b8 <FEB_LTC6811_UART_Transmit_Temperature+0x10>
	}
}
 800287e:	bf00      	nop
 8002880:	bf00      	nop
 8002882:	f507 67a1 	add.w	r7, r7, #1288	; 0x508
 8002886:	46bd      	mov	sp, r7
 8002888:	bd80      	pop	{r7, pc}
 800288a:	bf00      	nop
 800288c:	0800c788 	.word	0x0800c788
 8002890:	200026b0 	.word	0x200026b0
 8002894:	0800c7fc 	.word	0x0800c7fc
 8002898:	0800c790 	.word	0x0800c790
 800289c:	20003220 	.word	0x20003220

080028a0 <FEB_LTC6811_Clear_Temperature>:

void FEB_LTC6811_Clear_Temperature(void) {
 80028a0:	b480      	push	{r7}
 80028a2:	b083      	sub	sp, #12
 80028a4:	af00      	add	r7, sp, #0
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 80028a6:	2300      	movs	r3, #0
 80028a8:	71fb      	strb	r3, [r7, #7]
 80028aa:	e018      	b.n	80028de <FEB_LTC6811_Clear_Temperature+0x3e>
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 80028ac:	2300      	movs	r3, #0
 80028ae:	71bb      	strb	r3, [r7, #6]
 80028b0:	e00f      	b.n	80028d2 <FEB_LTC6811_Clear_Temperature+0x32>
			accumulator.banks[bank_idx].cells[cell_idx].temperature = 0;
 80028b2:	79fa      	ldrb	r2, [r7, #7]
 80028b4:	79b9      	ldrb	r1, [r7, #6]
 80028b6:	480f      	ldr	r0, [pc, #60]	; (80028f4 <FEB_LTC6811_Clear_Temperature+0x54>)
 80028b8:	4613      	mov	r3, r2
 80028ba:	011b      	lsls	r3, r3, #4
 80028bc:	4413      	add	r3, r2
 80028be:	440b      	add	r3, r1
 80028c0:	33e8      	adds	r3, #232	; 0xe8
 80028c2:	00db      	lsls	r3, r3, #3
 80028c4:	4403      	add	r3, r0
 80028c6:	f04f 0200 	mov.w	r2, #0
 80028ca:	601a      	str	r2, [r3, #0]
		for (uint8_t cell_idx = 0; cell_idx < FEB_LTC6811_NUM_CELLS_PER_BANK; cell_idx++) {
 80028cc:	79bb      	ldrb	r3, [r7, #6]
 80028ce:	3301      	adds	r3, #1
 80028d0:	71bb      	strb	r3, [r7, #6]
 80028d2:	79bb      	ldrb	r3, [r7, #6]
 80028d4:	2b10      	cmp	r3, #16
 80028d6:	d9ec      	bls.n	80028b2 <FEB_LTC6811_Clear_Temperature+0x12>
	for (uint8_t bank_idx = 0; bank_idx < FEB_LTC6811_NUM_BANKS; bank_idx++) {
 80028d8:	79fb      	ldrb	r3, [r7, #7]
 80028da:	3301      	adds	r3, #1
 80028dc:	71fb      	strb	r3, [r7, #7]
 80028de:	79fb      	ldrb	r3, [r7, #7]
 80028e0:	2b03      	cmp	r3, #3
 80028e2:	d9e3      	bls.n	80028ac <FEB_LTC6811_Clear_Temperature+0xc>
		}
	}
}
 80028e4:	bf00      	nop
 80028e6:	bf00      	nop
 80028e8:	370c      	adds	r7, #12
 80028ea:	46bd      	mov	sp, r7
 80028ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f0:	4770      	bx	lr
 80028f2:	bf00      	nop
 80028f4:	200026b0 	.word	0x200026b0

080028f8 <FEB_LTC6811_Temp_LUT_Get_Temperature>:
 80028f8:	b580      	push	{r7, lr}
 80028fa:	b084      	sub	sp, #16
 80028fc:	af00      	add	r7, sp, #0
 80028fe:	ed87 0a01 	vstr	s0, [r7, #4]
 8002902:	6878      	ldr	r0, [r7, #4]
 8002904:	f7fd fe40 	bl	8000588 <__aeabi_f2d>
 8002908:	a323      	add	r3, pc, #140	; (adr r3, 8002998 <FEB_LTC6811_Temp_LUT_Get_Temperature+0xa0>)
 800290a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800290e:	f7fe f905 	bl	8000b1c <__aeabi_dcmplt>
 8002912:	4603      	mov	r3, r0
 8002914:	2b00      	cmp	r3, #0
 8002916:	d10a      	bne.n	800292e <FEB_LTC6811_Temp_LUT_Get_Temperature+0x36>
 8002918:	6878      	ldr	r0, [r7, #4]
 800291a:	f7fd fe35 	bl	8000588 <__aeabi_f2d>
 800291e:	a324      	add	r3, pc, #144	; (adr r3, 80029b0 <FEB_LTC6811_Temp_LUT_Get_Temperature+0xb8>)
 8002920:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002924:	f7fe f918 	bl	8000b58 <__aeabi_dcmpgt>
 8002928:	4603      	mov	r3, r0
 800292a:	2b00      	cmp	r3, #0
 800292c:	d001      	beq.n	8002932 <FEB_LTC6811_Temp_LUT_Get_Temperature+0x3a>
 800292e:	4b1e      	ldr	r3, [pc, #120]	; (80029a8 <FEB_LTC6811_Temp_LUT_Get_Temperature+0xb0>)
 8002930:	e028      	b.n	8002984 <FEB_LTC6811_Temp_LUT_Get_Temperature+0x8c>
 8002932:	6878      	ldr	r0, [r7, #4]
 8002934:	f7fd fe28 	bl	8000588 <__aeabi_f2d>
 8002938:	a317      	add	r3, pc, #92	; (adr r3, 8002998 <FEB_LTC6811_Temp_LUT_Get_Temperature+0xa0>)
 800293a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800293e:	f7fd fcc3 	bl	80002c8 <__aeabi_dsub>
 8002942:	4602      	mov	r2, r0
 8002944:	460b      	mov	r3, r1
 8002946:	4610      	mov	r0, r2
 8002948:	4619      	mov	r1, r3
 800294a:	a315      	add	r3, pc, #84	; (adr r3, 80029a0 <FEB_LTC6811_Temp_LUT_Get_Temperature+0xa8>)
 800294c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002950:	f7fd ff9c 	bl	800088c <__aeabi_ddiv>
 8002954:	4602      	mov	r2, r0
 8002956:	460b      	mov	r3, r1
 8002958:	ec43 2b17 	vmov	d7, r2, r3
 800295c:	eeb0 0a47 	vmov.f32	s0, s14
 8002960:	eef0 0a67 	vmov.f32	s1, s15
 8002964:	f009 fdb8 	bl	800c4d8 <round>
 8002968:	ec53 2b10 	vmov	r2, r3, d0
 800296c:	4610      	mov	r0, r2
 800296e:	4619      	mov	r1, r3
 8002970:	f7fe f93a 	bl	8000be8 <__aeabi_d2uiz>
 8002974:	4603      	mov	r3, r0
 8002976:	81fb      	strh	r3, [r7, #14]
 8002978:	89fb      	ldrh	r3, [r7, #14]
 800297a:	4a0c      	ldr	r2, [pc, #48]	; (80029ac <FEB_LTC6811_Temp_LUT_Get_Temperature+0xb4>)
 800297c:	00db      	lsls	r3, r3, #3
 800297e:	4413      	add	r3, r2
 8002980:	3304      	adds	r3, #4
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	ee07 3a90 	vmov	s15, r3
 8002988:	eeb0 0a67 	vmov.f32	s0, s15
 800298c:	3710      	adds	r7, #16
 800298e:	46bd      	mov	sp, r7
 8002990:	bd80      	pop	{r7, pc}
 8002992:	bf00      	nop
 8002994:	f3af 8000 	nop.w
 8002998:	cccccccd 	.word	0xcccccccd
 800299c:	3ff4cccc 	.word	0x3ff4cccc
 80029a0:	d2f1a9fc 	.word	0xd2f1a9fc
 80029a4:	3f50624d 	.word	0x3f50624d
 80029a8:	c2240000 	.word	0xc2240000
 80029ac:	20000048 	.word	0x20000048
 80029b0:	b851eb85 	.word	0xb851eb85
 80029b4:	4003851e 	.word	0x4003851e

080029b8 <FEB_Math_Uint32_To_Signed_Long>:
 80029b8:	b480      	push	{r7}
 80029ba:	b083      	sub	sp, #12
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 80029c6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80029ca:	4618      	mov	r0, r3
 80029cc:	370c      	adds	r7, #12
 80029ce:	46bd      	mov	sp, r7
 80029d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d4:	4770      	bx	lr

080029d6 <FEB_Math_Uint16_To_Int16>:
 80029d6:	b480      	push	{r7}
 80029d8:	b083      	sub	sp, #12
 80029da:	af00      	add	r7, sp, #0
 80029dc:	4603      	mov	r3, r0
 80029de:	80fb      	strh	r3, [r7, #6]
 80029e0:	88fb      	ldrh	r3, [r7, #6]
 80029e2:	f083 437f 	eor.w	r3, r3, #4278190080	; 0xff000000
 80029e6:	f483 037f 	eor.w	r3, r3, #16711680	; 0xff0000
 80029ea:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80029ee:	b29b      	uxth	r3, r3
 80029f0:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
 80029f4:	b29b      	uxth	r3, r3
 80029f6:	b21b      	sxth	r3, r3
 80029f8:	4618      	mov	r0, r3
 80029fa:	370c      	adds	r7, #12
 80029fc:	46bd      	mov	sp, r7
 80029fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a02:	4770      	bx	lr

08002a04 <FEB_Timer_Init>:
 8002a04:	b580      	push	{r7, lr}
 8002a06:	af00      	add	r7, sp, #0
 8002a08:	4802      	ldr	r0, [pc, #8]	; (8002a14 <FEB_Timer_Init+0x10>)
 8002a0a:	f005 fb83 	bl	8008114 <HAL_TIM_Base_Start>
 8002a0e:	bf00      	nop
 8002a10:	bd80      	pop	{r7, pc}
 8002a12:	bf00      	nop
 8002a14:	200031d8 	.word	0x200031d8

08002a18 <FEB_Timer_Delay_Micro>:
 8002a18:	b480      	push	{r7}
 8002a1a:	b083      	sub	sp, #12
 8002a1c:	af00      	add	r7, sp, #0
 8002a1e:	4603      	mov	r3, r0
 8002a20:	80fb      	strh	r3, [r7, #6]
 8002a22:	4b09      	ldr	r3, [pc, #36]	; (8002a48 <FEB_Timer_Delay_Micro+0x30>)
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	2200      	movs	r2, #0
 8002a28:	625a      	str	r2, [r3, #36]	; 0x24
 8002a2a:	bf00      	nop
 8002a2c:	4b06      	ldr	r3, [pc, #24]	; (8002a48 <FEB_Timer_Delay_Micro+0x30>)
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002a32:	88fb      	ldrh	r3, [r7, #6]
 8002a34:	429a      	cmp	r2, r3
 8002a36:	d3f9      	bcc.n	8002a2c <FEB_Timer_Delay_Micro+0x14>
 8002a38:	bf00      	nop
 8002a3a:	bf00      	nop
 8002a3c:	370c      	adds	r7, #12
 8002a3e:	46bd      	mov	sp, r7
 8002a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a44:	4770      	bx	lr
 8002a46:	bf00      	nop
 8002a48:	200031d8 	.word	0x200031d8

08002a4c <LTC6811_init_reg_limits>:
 8002a4c:	b480      	push	{r7}
 8002a4e:	b085      	sub	sp, #20
 8002a50:	af00      	add	r7, sp, #0
 8002a52:	4603      	mov	r3, r0
 8002a54:	6039      	str	r1, [r7, #0]
 8002a56:	71fb      	strb	r3, [r7, #7]
 8002a58:	2300      	movs	r3, #0
 8002a5a:	73fb      	strb	r3, [r7, #15]
 8002a5c:	e038      	b.n	8002ad0 <LTC6811_init_reg_limits+0x84>
 8002a5e:	7bfb      	ldrb	r3, [r7, #15]
 8002a60:	22e8      	movs	r2, #232	; 0xe8
 8002a62:	fb02 f303 	mul.w	r3, r2, r3
 8002a66:	683a      	ldr	r2, [r7, #0]
 8002a68:	4413      	add	r3, r2
 8002a6a:	220c      	movs	r2, #12
 8002a6c:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc
 8002a70:	7bfb      	ldrb	r3, [r7, #15]
 8002a72:	22e8      	movs	r2, #232	; 0xe8
 8002a74:	fb02 f303 	mul.w	r3, r2, r3
 8002a78:	683a      	ldr	r2, [r7, #0]
 8002a7a:	4413      	add	r3, r2
 8002a7c:	2204      	movs	r2, #4
 8002a7e:	f883 20dd 	strb.w	r2, [r3, #221]	; 0xdd
 8002a82:	7bfb      	ldrb	r3, [r7, #15]
 8002a84:	22e8      	movs	r2, #232	; 0xe8
 8002a86:	fb02 f303 	mul.w	r3, r2, r3
 8002a8a:	683a      	ldr	r2, [r7, #0]
 8002a8c:	4413      	add	r3, r2
 8002a8e:	2206      	movs	r2, #6
 8002a90:	f883 20de 	strb.w	r2, [r3, #222]	; 0xde
 8002a94:	7bfb      	ldrb	r3, [r7, #15]
 8002a96:	22e8      	movs	r2, #232	; 0xe8
 8002a98:	fb02 f303 	mul.w	r3, r2, r3
 8002a9c:	683a      	ldr	r2, [r7, #0]
 8002a9e:	4413      	add	r3, r2
 8002aa0:	2204      	movs	r2, #4
 8002aa2:	f883 20df 	strb.w	r2, [r3, #223]	; 0xdf
 8002aa6:	7bfb      	ldrb	r3, [r7, #15]
 8002aa8:	22e8      	movs	r2, #232	; 0xe8
 8002aaa:	fb02 f303 	mul.w	r3, r2, r3
 8002aae:	683a      	ldr	r2, [r7, #0]
 8002ab0:	4413      	add	r3, r2
 8002ab2:	2202      	movs	r2, #2
 8002ab4:	f883 20e0 	strb.w	r2, [r3, #224]	; 0xe0
 8002ab8:	7bfb      	ldrb	r3, [r7, #15]
 8002aba:	22e8      	movs	r2, #232	; 0xe8
 8002abc:	fb02 f303 	mul.w	r3, r2, r3
 8002ac0:	683a      	ldr	r2, [r7, #0]
 8002ac2:	4413      	add	r3, r2
 8002ac4:	2203      	movs	r2, #3
 8002ac6:	f883 20e1 	strb.w	r2, [r3, #225]	; 0xe1
 8002aca:	7bfb      	ldrb	r3, [r7, #15]
 8002acc:	3301      	adds	r3, #1
 8002ace:	73fb      	strb	r3, [r7, #15]
 8002ad0:	7bfa      	ldrb	r2, [r7, #15]
 8002ad2:	79fb      	ldrb	r3, [r7, #7]
 8002ad4:	429a      	cmp	r2, r3
 8002ad6:	d3c2      	bcc.n	8002a5e <LTC6811_init_reg_limits+0x12>
 8002ad8:	bf00      	nop
 8002ada:	bf00      	nop
 8002adc:	3714      	adds	r7, #20
 8002ade:	46bd      	mov	sp, r7
 8002ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ae4:	4770      	bx	lr

08002ae6 <LTC6811_wrcfg>:
 8002ae6:	b580      	push	{r7, lr}
 8002ae8:	b082      	sub	sp, #8
 8002aea:	af00      	add	r7, sp, #0
 8002aec:	4603      	mov	r3, r0
 8002aee:	6039      	str	r1, [r7, #0]
 8002af0:	71fb      	strb	r3, [r7, #7]
 8002af2:	79fb      	ldrb	r3, [r7, #7]
 8002af4:	6839      	ldr	r1, [r7, #0]
 8002af6:	4618      	mov	r0, r3
 8002af8:	f000 f9c4 	bl	8002e84 <LTC681x_wrcfg>
 8002afc:	bf00      	nop
 8002afe:	3708      	adds	r7, #8
 8002b00:	46bd      	mov	sp, r7
 8002b02:	bd80      	pop	{r7, pc}

08002b04 <LTC6811_adcv>:
 8002b04:	b580      	push	{r7, lr}
 8002b06:	b082      	sub	sp, #8
 8002b08:	af00      	add	r7, sp, #0
 8002b0a:	4603      	mov	r3, r0
 8002b0c:	71fb      	strb	r3, [r7, #7]
 8002b0e:	460b      	mov	r3, r1
 8002b10:	71bb      	strb	r3, [r7, #6]
 8002b12:	4613      	mov	r3, r2
 8002b14:	717b      	strb	r3, [r7, #5]
 8002b16:	797a      	ldrb	r2, [r7, #5]
 8002b18:	79b9      	ldrb	r1, [r7, #6]
 8002b1a:	79fb      	ldrb	r3, [r7, #7]
 8002b1c:	4618      	mov	r0, r3
 8002b1e:	f000 fa30 	bl	8002f82 <LTC681x_adcv>
 8002b22:	bf00      	nop
 8002b24:	3708      	adds	r7, #8
 8002b26:	46bd      	mov	sp, r7
 8002b28:	bd80      	pop	{r7, pc}

08002b2a <LTC6811_adax>:
 8002b2a:	b580      	push	{r7, lr}
 8002b2c:	b082      	sub	sp, #8
 8002b2e:	af00      	add	r7, sp, #0
 8002b30:	4603      	mov	r3, r0
 8002b32:	460a      	mov	r2, r1
 8002b34:	71fb      	strb	r3, [r7, #7]
 8002b36:	4613      	mov	r3, r2
 8002b38:	71bb      	strb	r3, [r7, #6]
 8002b3a:	79ba      	ldrb	r2, [r7, #6]
 8002b3c:	79fb      	ldrb	r3, [r7, #7]
 8002b3e:	4611      	mov	r1, r2
 8002b40:	4618      	mov	r0, r3
 8002b42:	f000 fa49 	bl	8002fd8 <LTC681x_adax>
 8002b46:	bf00      	nop
 8002b48:	3708      	adds	r7, #8
 8002b4a:	46bd      	mov	sp, r7
 8002b4c:	bd80      	pop	{r7, pc}

08002b4e <LTC6811_rdcv>:
 8002b4e:	b580      	push	{r7, lr}
 8002b50:	b084      	sub	sp, #16
 8002b52:	af00      	add	r7, sp, #0
 8002b54:	4603      	mov	r3, r0
 8002b56:	603a      	str	r2, [r7, #0]
 8002b58:	71fb      	strb	r3, [r7, #7]
 8002b5a:	460b      	mov	r3, r1
 8002b5c:	71bb      	strb	r3, [r7, #6]
 8002b5e:	2300      	movs	r3, #0
 8002b60:	73fb      	strb	r3, [r7, #15]
 8002b62:	79b9      	ldrb	r1, [r7, #6]
 8002b64:	79fb      	ldrb	r3, [r7, #7]
 8002b66:	683a      	ldr	r2, [r7, #0]
 8002b68:	4618      	mov	r0, r3
 8002b6a:	f000 fa5a 	bl	8003022 <LTC681x_rdcv>
 8002b6e:	4603      	mov	r3, r0
 8002b70:	73fb      	strb	r3, [r7, #15]
 8002b72:	7bfb      	ldrb	r3, [r7, #15]
 8002b74:	4618      	mov	r0, r3
 8002b76:	3710      	adds	r7, #16
 8002b78:	46bd      	mov	sp, r7
 8002b7a:	bd80      	pop	{r7, pc}

08002b7c <LTC6811_rdaux>:
 8002b7c:	b580      	push	{r7, lr}
 8002b7e:	b084      	sub	sp, #16
 8002b80:	af00      	add	r7, sp, #0
 8002b82:	4603      	mov	r3, r0
 8002b84:	603a      	str	r2, [r7, #0]
 8002b86:	71fb      	strb	r3, [r7, #7]
 8002b88:	460b      	mov	r3, r1
 8002b8a:	71bb      	strb	r3, [r7, #6]
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	73fb      	strb	r3, [r7, #15]
 8002b90:	79b9      	ldrb	r1, [r7, #6]
 8002b92:	79fb      	ldrb	r3, [r7, #7]
 8002b94:	683a      	ldr	r2, [r7, #0]
 8002b96:	4618      	mov	r0, r3
 8002b98:	f000 faf7 	bl	800318a <LTC681x_rdaux>
 8002b9c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	3710      	adds	r7, #16
 8002ba4:	46bd      	mov	sp, r7
 8002ba6:	bd80      	pop	{r7, pc}

08002ba8 <LTC6811_pollAdc>:
 8002ba8:	b580      	push	{r7, lr}
 8002baa:	af00      	add	r7, sp, #0
 8002bac:	f000 fcb8 	bl	8003520 <LTC681x_pollAdc>
 8002bb0:	4603      	mov	r3, r0
 8002bb2:	4618      	mov	r0, r3
 8002bb4:	bd80      	pop	{r7, pc}

08002bb6 <LTC6811_reset_crc_count>:
 8002bb6:	b580      	push	{r7, lr}
 8002bb8:	b082      	sub	sp, #8
 8002bba:	af00      	add	r7, sp, #0
 8002bbc:	4603      	mov	r3, r0
 8002bbe:	6039      	str	r1, [r7, #0]
 8002bc0:	71fb      	strb	r3, [r7, #7]
 8002bc2:	79fb      	ldrb	r3, [r7, #7]
 8002bc4:	6839      	ldr	r1, [r7, #0]
 8002bc6:	4618      	mov	r0, r3
 8002bc8:	f000 fe92 	bl	80038f0 <LTC681x_reset_crc_count>
 8002bcc:	bf00      	nop
 8002bce:	3708      	adds	r7, #8
 8002bd0:	46bd      	mov	sp, r7
 8002bd2:	bd80      	pop	{r7, pc}

08002bd4 <LTC6811_init_cfg>:
 8002bd4:	b580      	push	{r7, lr}
 8002bd6:	b082      	sub	sp, #8
 8002bd8:	af00      	add	r7, sp, #0
 8002bda:	4603      	mov	r3, r0
 8002bdc:	6039      	str	r1, [r7, #0]
 8002bde:	71fb      	strb	r3, [r7, #7]
 8002be0:	79fb      	ldrb	r3, [r7, #7]
 8002be2:	6839      	ldr	r1, [r7, #0]
 8002be4:	4618      	mov	r0, r3
 8002be6:	f000 fee9 	bl	80039bc <LTC681x_init_cfg>
 8002bea:	bf00      	nop
 8002bec:	3708      	adds	r7, #8
 8002bee:	46bd      	mov	sp, r7
 8002bf0:	bd80      	pop	{r7, pc}

08002bf2 <LTC6811_set_cfgr>:
 8002bf2:	b580      	push	{r7, lr}
 8002bf4:	b088      	sub	sp, #32
 8002bf6:	af06      	add	r7, sp, #24
 8002bf8:	6039      	str	r1, [r7, #0]
 8002bfa:	4611      	mov	r1, r2
 8002bfc:	461a      	mov	r2, r3
 8002bfe:	4603      	mov	r3, r0
 8002c00:	71fb      	strb	r3, [r7, #7]
 8002c02:	460b      	mov	r3, r1
 8002c04:	71bb      	strb	r3, [r7, #6]
 8002c06:	4613      	mov	r3, r2
 8002c08:	717b      	strb	r3, [r7, #5]
 8002c0a:	7979      	ldrb	r1, [r7, #5]
 8002c0c:	79ba      	ldrb	r2, [r7, #6]
 8002c0e:	79f8      	ldrb	r0, [r7, #7]
 8002c10:	8c3b      	ldrh	r3, [r7, #32]
 8002c12:	9304      	str	r3, [sp, #16]
 8002c14:	8bbb      	ldrh	r3, [r7, #28]
 8002c16:	9303      	str	r3, [sp, #12]
 8002c18:	69bb      	ldr	r3, [r7, #24]
 8002c1a:	9302      	str	r3, [sp, #8]
 8002c1c:	697b      	ldr	r3, [r7, #20]
 8002c1e:	9301      	str	r3, [sp, #4]
 8002c20:	693b      	ldr	r3, [r7, #16]
 8002c22:	9300      	str	r3, [sp, #0]
 8002c24:	460b      	mov	r3, r1
 8002c26:	6839      	ldr	r1, [r7, #0]
 8002c28:	f000 fef2 	bl	8003a10 <LTC681x_set_cfgr>
 8002c2c:	bf00      	nop
 8002c2e:	3708      	adds	r7, #8
 8002c30:	46bd      	mov	sp, r7
 8002c32:	bd80      	pop	{r7, pc}

08002c34 <wakeup_idle>:
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b084      	sub	sp, #16
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	4603      	mov	r3, r0
 8002c3c:	71fb      	strb	r3, [r7, #7]
 8002c3e:	2300      	movs	r3, #0
 8002c40:	60fb      	str	r3, [r7, #12]
 8002c42:	e00b      	b.n	8002c5c <wakeup_idle+0x28>
 8002c44:	200a      	movs	r0, #10
 8002c46:	f001 f949 	bl	8003edc <cs_low>
 8002c4a:	20ff      	movs	r0, #255	; 0xff
 8002c4c:	f001 f9b0 	bl	8003fb0 <spi_read_byte>
 8002c50:	200a      	movs	r0, #10
 8002c52:	f001 f953 	bl	8003efc <cs_high>
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	3301      	adds	r3, #1
 8002c5a:	60fb      	str	r3, [r7, #12]
 8002c5c:	79fb      	ldrb	r3, [r7, #7]
 8002c5e:	68fa      	ldr	r2, [r7, #12]
 8002c60:	429a      	cmp	r2, r3
 8002c62:	dbef      	blt.n	8002c44 <wakeup_idle+0x10>
 8002c64:	bf00      	nop
 8002c66:	bf00      	nop
 8002c68:	3710      	adds	r7, #16
 8002c6a:	46bd      	mov	sp, r7
 8002c6c:	bd80      	pop	{r7, pc}

08002c6e <wakeup_sleep>:
 8002c6e:	b580      	push	{r7, lr}
 8002c70:	b084      	sub	sp, #16
 8002c72:	af00      	add	r7, sp, #0
 8002c74:	4603      	mov	r3, r0
 8002c76:	71fb      	strb	r3, [r7, #7]
 8002c78:	2300      	movs	r3, #0
 8002c7a:	60fb      	str	r3, [r7, #12]
 8002c7c:	e00f      	b.n	8002c9e <wakeup_sleep+0x30>
 8002c7e:	200a      	movs	r0, #10
 8002c80:	f001 f92c 	bl	8003edc <cs_low>
 8002c84:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8002c88:	f001 f91b 	bl	8003ec2 <delay_u>
 8002c8c:	200a      	movs	r0, #10
 8002c8e:	f001 f935 	bl	8003efc <cs_high>
 8002c92:	200a      	movs	r0, #10
 8002c94:	f001 f915 	bl	8003ec2 <delay_u>
 8002c98:	68fb      	ldr	r3, [r7, #12]
 8002c9a:	3301      	adds	r3, #1
 8002c9c:	60fb      	str	r3, [r7, #12]
 8002c9e:	79fb      	ldrb	r3, [r7, #7]
 8002ca0:	68fa      	ldr	r2, [r7, #12]
 8002ca2:	429a      	cmp	r2, r3
 8002ca4:	dbeb      	blt.n	8002c7e <wakeup_sleep+0x10>
 8002ca6:	bf00      	nop
 8002ca8:	bf00      	nop
 8002caa:	3710      	adds	r7, #16
 8002cac:	46bd      	mov	sp, r7
 8002cae:	bd80      	pop	{r7, pc}

08002cb0 <cmd_68>:
 8002cb0:	b580      	push	{r7, lr}
 8002cb2:	b084      	sub	sp, #16
 8002cb4:	af00      	add	r7, sp, #0
 8002cb6:	6078      	str	r0, [r7, #4]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	781b      	ldrb	r3, [r3, #0]
 8002cbc:	723b      	strb	r3, [r7, #8]
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	785b      	ldrb	r3, [r3, #1]
 8002cc2:	727b      	strb	r3, [r7, #9]
 8002cc4:	f107 0308 	add.w	r3, r7, #8
 8002cc8:	4619      	mov	r1, r3
 8002cca:	2002      	movs	r0, #2
 8002ccc:	f000 f8a6 	bl	8002e1c <pec15_calc>
 8002cd0:	4603      	mov	r3, r0
 8002cd2:	81fb      	strh	r3, [r7, #14]
 8002cd4:	89fb      	ldrh	r3, [r7, #14]
 8002cd6:	0a1b      	lsrs	r3, r3, #8
 8002cd8:	b29b      	uxth	r3, r3
 8002cda:	b2db      	uxtb	r3, r3
 8002cdc:	72bb      	strb	r3, [r7, #10]
 8002cde:	89fb      	ldrh	r3, [r7, #14]
 8002ce0:	b2db      	uxtb	r3, r3
 8002ce2:	72fb      	strb	r3, [r7, #11]
 8002ce4:	200a      	movs	r0, #10
 8002ce6:	f001 f8f9 	bl	8003edc <cs_low>
 8002cea:	f107 0308 	add.w	r3, r7, #8
 8002cee:	4619      	mov	r1, r3
 8002cf0:	2004      	movs	r0, #4
 8002cf2:	f001 f913 	bl	8003f1c <spi_write_array>
 8002cf6:	200a      	movs	r0, #10
 8002cf8:	f001 f900 	bl	8003efc <cs_high>
 8002cfc:	bf00      	nop
 8002cfe:	3710      	adds	r7, #16
 8002d00:	46bd      	mov	sp, r7
 8002d02:	bd80      	pop	{r7, pc}

08002d04 <write_68>:
 8002d04:	b580      	push	{r7, lr}
 8002d06:	b088      	sub	sp, #32
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	60b9      	str	r1, [r7, #8]
 8002d0e:	607a      	str	r2, [r7, #4]
 8002d10:	73fb      	strb	r3, [r7, #15]
 8002d12:	2306      	movs	r3, #6
 8002d14:	773b      	strb	r3, [r7, #28]
 8002d16:	7bfb      	ldrb	r3, [r7, #15]
 8002d18:	00db      	lsls	r3, r3, #3
 8002d1a:	b2db      	uxtb	r3, r3
 8002d1c:	3304      	adds	r3, #4
 8002d1e:	76fb      	strb	r3, [r7, #27]
 8002d20:	7efb      	ldrb	r3, [r7, #27]
 8002d22:	4618      	mov	r0, r3
 8002d24:	f006 fcd4 	bl	80096d0 <malloc>
 8002d28:	4603      	mov	r3, r0
 8002d2a:	617b      	str	r3, [r7, #20]
 8002d2c:	68bb      	ldr	r3, [r7, #8]
 8002d2e:	781a      	ldrb	r2, [r3, #0]
 8002d30:	697b      	ldr	r3, [r7, #20]
 8002d32:	701a      	strb	r2, [r3, #0]
 8002d34:	697b      	ldr	r3, [r7, #20]
 8002d36:	3301      	adds	r3, #1
 8002d38:	68ba      	ldr	r2, [r7, #8]
 8002d3a:	7852      	ldrb	r2, [r2, #1]
 8002d3c:	701a      	strb	r2, [r3, #0]
 8002d3e:	6979      	ldr	r1, [r7, #20]
 8002d40:	2002      	movs	r0, #2
 8002d42:	f000 f86b 	bl	8002e1c <pec15_calc>
 8002d46:	4603      	mov	r3, r0
 8002d48:	827b      	strh	r3, [r7, #18]
 8002d4a:	8a7b      	ldrh	r3, [r7, #18]
 8002d4c:	0a1b      	lsrs	r3, r3, #8
 8002d4e:	b29a      	uxth	r2, r3
 8002d50:	697b      	ldr	r3, [r7, #20]
 8002d52:	3302      	adds	r3, #2
 8002d54:	b2d2      	uxtb	r2, r2
 8002d56:	701a      	strb	r2, [r3, #0]
 8002d58:	697b      	ldr	r3, [r7, #20]
 8002d5a:	3303      	adds	r3, #3
 8002d5c:	8a7a      	ldrh	r2, [r7, #18]
 8002d5e:	b2d2      	uxtb	r2, r2
 8002d60:	701a      	strb	r2, [r3, #0]
 8002d62:	2304      	movs	r3, #4
 8002d64:	77fb      	strb	r3, [r7, #31]
 8002d66:	7bfb      	ldrb	r3, [r7, #15]
 8002d68:	77bb      	strb	r3, [r7, #30]
 8002d6a:	e042      	b.n	8002df2 <write_68+0xee>
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	777b      	strb	r3, [r7, #29]
 8002d70:	e016      	b.n	8002da0 <write_68+0x9c>
 8002d72:	7fbb      	ldrb	r3, [r7, #30]
 8002d74:	1e5a      	subs	r2, r3, #1
 8002d76:	4613      	mov	r3, r2
 8002d78:	005b      	lsls	r3, r3, #1
 8002d7a:	4413      	add	r3, r2
 8002d7c:	005b      	lsls	r3, r3, #1
 8002d7e:	461a      	mov	r2, r3
 8002d80:	7f7b      	ldrb	r3, [r7, #29]
 8002d82:	4413      	add	r3, r2
 8002d84:	461a      	mov	r2, r3
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	441a      	add	r2, r3
 8002d8a:	7ffb      	ldrb	r3, [r7, #31]
 8002d8c:	6979      	ldr	r1, [r7, #20]
 8002d8e:	440b      	add	r3, r1
 8002d90:	7812      	ldrb	r2, [r2, #0]
 8002d92:	701a      	strb	r2, [r3, #0]
 8002d94:	7ffb      	ldrb	r3, [r7, #31]
 8002d96:	3301      	adds	r3, #1
 8002d98:	77fb      	strb	r3, [r7, #31]
 8002d9a:	7f7b      	ldrb	r3, [r7, #29]
 8002d9c:	3301      	adds	r3, #1
 8002d9e:	777b      	strb	r3, [r7, #29]
 8002da0:	7f7a      	ldrb	r2, [r7, #29]
 8002da2:	7f3b      	ldrb	r3, [r7, #28]
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d3e4      	bcc.n	8002d72 <write_68+0x6e>
 8002da8:	7fbb      	ldrb	r3, [r7, #30]
 8002daa:	1e5a      	subs	r2, r3, #1
 8002dac:	4613      	mov	r3, r2
 8002dae:	005b      	lsls	r3, r3, #1
 8002db0:	4413      	add	r3, r2
 8002db2:	005b      	lsls	r3, r3, #1
 8002db4:	461a      	mov	r2, r3
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	441a      	add	r2, r3
 8002dba:	7f3b      	ldrb	r3, [r7, #28]
 8002dbc:	4611      	mov	r1, r2
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	f000 f82c 	bl	8002e1c <pec15_calc>
 8002dc4:	4603      	mov	r3, r0
 8002dc6:	823b      	strh	r3, [r7, #16]
 8002dc8:	8a3b      	ldrh	r3, [r7, #16]
 8002dca:	0a1b      	lsrs	r3, r3, #8
 8002dcc:	b299      	uxth	r1, r3
 8002dce:	7ffb      	ldrb	r3, [r7, #31]
 8002dd0:	697a      	ldr	r2, [r7, #20]
 8002dd2:	4413      	add	r3, r2
 8002dd4:	b2ca      	uxtb	r2, r1
 8002dd6:	701a      	strb	r2, [r3, #0]
 8002dd8:	7ffb      	ldrb	r3, [r7, #31]
 8002dda:	3301      	adds	r3, #1
 8002ddc:	697a      	ldr	r2, [r7, #20]
 8002dde:	4413      	add	r3, r2
 8002de0:	8a3a      	ldrh	r2, [r7, #16]
 8002de2:	b2d2      	uxtb	r2, r2
 8002de4:	701a      	strb	r2, [r3, #0]
 8002de6:	7ffb      	ldrb	r3, [r7, #31]
 8002de8:	3302      	adds	r3, #2
 8002dea:	77fb      	strb	r3, [r7, #31]
 8002dec:	7fbb      	ldrb	r3, [r7, #30]
 8002dee:	3b01      	subs	r3, #1
 8002df0:	77bb      	strb	r3, [r7, #30]
 8002df2:	7fbb      	ldrb	r3, [r7, #30]
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d1b9      	bne.n	8002d6c <write_68+0x68>
 8002df8:	200a      	movs	r0, #10
 8002dfa:	f001 f86f 	bl	8003edc <cs_low>
 8002dfe:	7efb      	ldrb	r3, [r7, #27]
 8002e00:	6979      	ldr	r1, [r7, #20]
 8002e02:	4618      	mov	r0, r3
 8002e04:	f001 f88a 	bl	8003f1c <spi_write_array>
 8002e08:	200a      	movs	r0, #10
 8002e0a:	f001 f877 	bl	8003efc <cs_high>
 8002e0e:	6978      	ldr	r0, [r7, #20]
 8002e10:	f006 fc66 	bl	80096e0 <free>
 8002e14:	bf00      	nop
 8002e16:	3720      	adds	r7, #32
 8002e18:	46bd      	mov	sp, r7
 8002e1a:	bd80      	pop	{r7, pc}

08002e1c <pec15_calc>:
 8002e1c:	b480      	push	{r7}
 8002e1e:	b085      	sub	sp, #20
 8002e20:	af00      	add	r7, sp, #0
 8002e22:	4603      	mov	r3, r0
 8002e24:	6039      	str	r1, [r7, #0]
 8002e26:	71fb      	strb	r3, [r7, #7]
 8002e28:	2310      	movs	r3, #16
 8002e2a:	81fb      	strh	r3, [r7, #14]
 8002e2c:	2300      	movs	r3, #0
 8002e2e:	737b      	strb	r3, [r7, #13]
 8002e30:	e019      	b.n	8002e66 <pec15_calc+0x4a>
 8002e32:	89fb      	ldrh	r3, [r7, #14]
 8002e34:	09db      	lsrs	r3, r3, #7
 8002e36:	b29a      	uxth	r2, r3
 8002e38:	7b7b      	ldrb	r3, [r7, #13]
 8002e3a:	6839      	ldr	r1, [r7, #0]
 8002e3c:	440b      	add	r3, r1
 8002e3e:	781b      	ldrb	r3, [r3, #0]
 8002e40:	b29b      	uxth	r3, r3
 8002e42:	4053      	eors	r3, r2
 8002e44:	b29b      	uxth	r3, r3
 8002e46:	b2db      	uxtb	r3, r3
 8002e48:	817b      	strh	r3, [r7, #10]
 8002e4a:	89fb      	ldrh	r3, [r7, #14]
 8002e4c:	021b      	lsls	r3, r3, #8
 8002e4e:	b21a      	sxth	r2, r3
 8002e50:	897b      	ldrh	r3, [r7, #10]
 8002e52:	490b      	ldr	r1, [pc, #44]	; (8002e80 <pec15_calc+0x64>)
 8002e54:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8002e58:	b21b      	sxth	r3, r3
 8002e5a:	4053      	eors	r3, r2
 8002e5c:	b21b      	sxth	r3, r3
 8002e5e:	81fb      	strh	r3, [r7, #14]
 8002e60:	7b7b      	ldrb	r3, [r7, #13]
 8002e62:	3301      	adds	r3, #1
 8002e64:	737b      	strb	r3, [r7, #13]
 8002e66:	7b7a      	ldrb	r2, [r7, #13]
 8002e68:	79fb      	ldrb	r3, [r7, #7]
 8002e6a:	429a      	cmp	r2, r3
 8002e6c:	d3e1      	bcc.n	8002e32 <pec15_calc+0x16>
 8002e6e:	89fb      	ldrh	r3, [r7, #14]
 8002e70:	005b      	lsls	r3, r3, #1
 8002e72:	b29b      	uxth	r3, r3
 8002e74:	4618      	mov	r0, r3
 8002e76:	3714      	adds	r7, #20
 8002e78:	46bd      	mov	sp, r7
 8002e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e7e:	4770      	bx	lr
 8002e80:	0800c834 	.word	0x0800c834

08002e84 <LTC681x_wrcfg>:
 8002e84:	b580      	push	{r7, lr}
 8002e86:	b0c4      	sub	sp, #272	; 0x110
 8002e88:	af00      	add	r7, sp, #0
 8002e8a:	4602      	mov	r2, r0
 8002e8c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8002e90:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8002e94:	6019      	str	r1, [r3, #0]
 8002e96:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8002e9a:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 8002e9e:	701a      	strb	r2, [r3, #0]
 8002ea0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002ea4:	f8a7 3108 	strh.w	r3, [r7, #264]	; 0x108
 8002ea8:	2300      	movs	r3, #0
 8002eaa:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 8002eae:	2300      	movs	r3, #0
 8002eb0:	f887 310e 	strb.w	r3, [r7, #270]	; 0x10e
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	f887 310d 	strb.w	r3, [r7, #269]	; 0x10d
 8002eba:	e048      	b.n	8002f4e <LTC681x_wrcfg+0xca>
 8002ebc:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8002ec0:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	f893 30bf 	ldrb.w	r3, [r3, #191]	; 0xbf
 8002eca:	f083 0301 	eor.w	r3, r3, #1
 8002ece:	b2db      	uxtb	r3, r3
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d004      	beq.n	8002ede <LTC681x_wrcfg+0x5a>
 8002ed4:	f897 310d 	ldrb.w	r3, [r7, #269]	; 0x10d
 8002ed8:	f887 310e 	strb.w	r3, [r7, #270]	; 0x10e
 8002edc:	e00b      	b.n	8002ef6 <LTC681x_wrcfg+0x72>
 8002ede:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8002ee2:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 8002ee6:	781a      	ldrb	r2, [r3, #0]
 8002ee8:	f897 310d 	ldrb.w	r3, [r7, #269]	; 0x10d
 8002eec:	1ad3      	subs	r3, r2, r3
 8002eee:	b2db      	uxtb	r3, r3
 8002ef0:	3b01      	subs	r3, #1
 8002ef2:	f887 310e 	strb.w	r3, [r7, #270]	; 0x10e
 8002ef6:	2300      	movs	r3, #0
 8002ef8:	f887 310c 	strb.w	r3, [r7, #268]	; 0x10c
 8002efc:	e01e      	b.n	8002f3c <LTC681x_wrcfg+0xb8>
 8002efe:	f897 310e 	ldrb.w	r3, [r7, #270]	; 0x10e
 8002f02:	22e8      	movs	r2, #232	; 0xe8
 8002f04:	fb02 f303 	mul.w	r3, r2, r3
 8002f08:	f507 7288 	add.w	r2, r7, #272	; 0x110
 8002f0c:	f5a2 7288 	sub.w	r2, r2, #272	; 0x110
 8002f10:	6812      	ldr	r2, [r2, #0]
 8002f12:	18d1      	adds	r1, r2, r3
 8002f14:	f897 210c 	ldrb.w	r2, [r7, #268]	; 0x10c
 8002f18:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 8002f1c:	5c89      	ldrb	r1, [r1, r2]
 8002f1e:	f507 7288 	add.w	r2, r7, #272	; 0x110
 8002f22:	f5a2 7284 	sub.w	r2, r2, #264	; 0x108
 8002f26:	54d1      	strb	r1, [r2, r3]
 8002f28:	f897 310f 	ldrb.w	r3, [r7, #271]	; 0x10f
 8002f2c:	3301      	adds	r3, #1
 8002f2e:	f887 310f 	strb.w	r3, [r7, #271]	; 0x10f
 8002f32:	f897 310c 	ldrb.w	r3, [r7, #268]	; 0x10c
 8002f36:	3301      	adds	r3, #1
 8002f38:	f887 310c 	strb.w	r3, [r7, #268]	; 0x10c
 8002f3c:	f897 310c 	ldrb.w	r3, [r7, #268]	; 0x10c
 8002f40:	2b05      	cmp	r3, #5
 8002f42:	d9dc      	bls.n	8002efe <LTC681x_wrcfg+0x7a>
 8002f44:	f897 310d 	ldrb.w	r3, [r7, #269]	; 0x10d
 8002f48:	3301      	adds	r3, #1
 8002f4a:	f887 310d 	strb.w	r3, [r7, #269]	; 0x10d
 8002f4e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8002f52:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 8002f56:	f897 210d 	ldrb.w	r2, [r7, #269]	; 0x10d
 8002f5a:	781b      	ldrb	r3, [r3, #0]
 8002f5c:	429a      	cmp	r2, r3
 8002f5e:	d3ad      	bcc.n	8002ebc <LTC681x_wrcfg+0x38>
 8002f60:	f107 0208 	add.w	r2, r7, #8
 8002f64:	f507 7184 	add.w	r1, r7, #264	; 0x108
 8002f68:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8002f6c:	f2a3 1309 	subw	r3, r3, #265	; 0x109
 8002f70:	781b      	ldrb	r3, [r3, #0]
 8002f72:	4618      	mov	r0, r3
 8002f74:	f7ff fec6 	bl	8002d04 <write_68>
 8002f78:	bf00      	nop
 8002f7a:	f507 7788 	add.w	r7, r7, #272	; 0x110
 8002f7e:	46bd      	mov	sp, r7
 8002f80:	bd80      	pop	{r7, pc}

08002f82 <LTC681x_adcv>:
 8002f82:	b580      	push	{r7, lr}
 8002f84:	b084      	sub	sp, #16
 8002f86:	af00      	add	r7, sp, #0
 8002f88:	4603      	mov	r3, r0
 8002f8a:	71fb      	strb	r3, [r7, #7]
 8002f8c:	460b      	mov	r3, r1
 8002f8e:	71bb      	strb	r3, [r7, #6]
 8002f90:	4613      	mov	r3, r2
 8002f92:	717b      	strb	r3, [r7, #5]
 8002f94:	79fb      	ldrb	r3, [r7, #7]
 8002f96:	105b      	asrs	r3, r3, #1
 8002f98:	b2db      	uxtb	r3, r3
 8002f9a:	f003 0301 	and.w	r3, r3, #1
 8002f9e:	73fb      	strb	r3, [r7, #15]
 8002fa0:	7bfb      	ldrb	r3, [r7, #15]
 8002fa2:	3302      	adds	r3, #2
 8002fa4:	b2db      	uxtb	r3, r3
 8002fa6:	733b      	strb	r3, [r7, #12]
 8002fa8:	79fb      	ldrb	r3, [r7, #7]
 8002faa:	01db      	lsls	r3, r3, #7
 8002fac:	73fb      	strb	r3, [r7, #15]
 8002fae:	79bb      	ldrb	r3, [r7, #6]
 8002fb0:	011b      	lsls	r3, r3, #4
 8002fb2:	b2da      	uxtb	r2, r3
 8002fb4:	7bfb      	ldrb	r3, [r7, #15]
 8002fb6:	4413      	add	r3, r2
 8002fb8:	b2da      	uxtb	r2, r3
 8002fba:	797b      	ldrb	r3, [r7, #5]
 8002fbc:	4413      	add	r3, r2
 8002fbe:	b2db      	uxtb	r3, r3
 8002fc0:	3360      	adds	r3, #96	; 0x60
 8002fc2:	b2db      	uxtb	r3, r3
 8002fc4:	737b      	strb	r3, [r7, #13]
 8002fc6:	f107 030c 	add.w	r3, r7, #12
 8002fca:	4618      	mov	r0, r3
 8002fcc:	f7ff fe70 	bl	8002cb0 <cmd_68>
 8002fd0:	bf00      	nop
 8002fd2:	3710      	adds	r7, #16
 8002fd4:	46bd      	mov	sp, r7
 8002fd6:	bd80      	pop	{r7, pc}

08002fd8 <LTC681x_adax>:
 8002fd8:	b580      	push	{r7, lr}
 8002fda:	b084      	sub	sp, #16
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	4603      	mov	r3, r0
 8002fe0:	460a      	mov	r2, r1
 8002fe2:	71fb      	strb	r3, [r7, #7]
 8002fe4:	4613      	mov	r3, r2
 8002fe6:	71bb      	strb	r3, [r7, #6]
 8002fe8:	79fb      	ldrb	r3, [r7, #7]
 8002fea:	105b      	asrs	r3, r3, #1
 8002fec:	b2db      	uxtb	r3, r3
 8002fee:	f003 0301 	and.w	r3, r3, #1
 8002ff2:	73fb      	strb	r3, [r7, #15]
 8002ff4:	7bfb      	ldrb	r3, [r7, #15]
 8002ff6:	3304      	adds	r3, #4
 8002ff8:	b2db      	uxtb	r3, r3
 8002ffa:	723b      	strb	r3, [r7, #8]
 8002ffc:	79fb      	ldrb	r3, [r7, #7]
 8002ffe:	01db      	lsls	r3, r3, #7
 8003000:	73fb      	strb	r3, [r7, #15]
 8003002:	7bfa      	ldrb	r2, [r7, #15]
 8003004:	79bb      	ldrb	r3, [r7, #6]
 8003006:	4413      	add	r3, r2
 8003008:	b2db      	uxtb	r3, r3
 800300a:	3360      	adds	r3, #96	; 0x60
 800300c:	b2db      	uxtb	r3, r3
 800300e:	727b      	strb	r3, [r7, #9]
 8003010:	f107 0308 	add.w	r3, r7, #8
 8003014:	4618      	mov	r0, r3
 8003016:	f7ff fe4b 	bl	8002cb0 <cmd_68>
 800301a:	bf00      	nop
 800301c:	3710      	adds	r7, #16
 800301e:	46bd      	mov	sp, r7
 8003020:	bd80      	pop	{r7, pc}

08003022 <LTC681x_rdcv>:
 8003022:	b5b0      	push	{r4, r5, r7, lr}
 8003024:	b088      	sub	sp, #32
 8003026:	af02      	add	r7, sp, #8
 8003028:	4603      	mov	r3, r0
 800302a:	603a      	str	r2, [r7, #0]
 800302c:	71fb      	strb	r3, [r7, #7]
 800302e:	460b      	mov	r3, r1
 8003030:	71bb      	strb	r3, [r7, #6]
 8003032:	2300      	movs	r3, #0
 8003034:	75fb      	strb	r3, [r7, #23]
 8003036:	2300      	movs	r3, #0
 8003038:	75bb      	strb	r3, [r7, #22]
 800303a:	79bb      	ldrb	r3, [r7, #6]
 800303c:	00db      	lsls	r3, r3, #3
 800303e:	4618      	mov	r0, r3
 8003040:	f006 fb46 	bl	80096d0 <malloc>
 8003044:	4603      	mov	r3, r0
 8003046:	60bb      	str	r3, [r7, #8]
 8003048:	79fb      	ldrb	r3, [r7, #7]
 800304a:	2b00      	cmp	r3, #0
 800304c:	d14b      	bne.n	80030e6 <LTC681x_rdcv+0xc4>
 800304e:	2301      	movs	r3, #1
 8003050:	757b      	strb	r3, [r7, #21]
 8003052:	e041      	b.n	80030d8 <LTC681x_rdcv+0xb6>
 8003054:	79b9      	ldrb	r1, [r7, #6]
 8003056:	7d7b      	ldrb	r3, [r7, #21]
 8003058:	68ba      	ldr	r2, [r7, #8]
 800305a:	4618      	mov	r0, r3
 800305c:	f000 f93d 	bl	80032da <LTC681x_rdcv_reg>
 8003060:	2300      	movs	r3, #0
 8003062:	613b      	str	r3, [r7, #16]
 8003064:	e031      	b.n	80030ca <LTC681x_rdcv+0xa8>
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	f893 30bf 	ldrb.w	r3, [r3, #191]	; 0xbf
 800306c:	f083 0301 	eor.w	r3, r3, #1
 8003070:	b2db      	uxtb	r3, r3
 8003072:	2b00      	cmp	r3, #0
 8003074:	d002      	beq.n	800307c <LTC681x_rdcv+0x5a>
 8003076:	693b      	ldr	r3, [r7, #16]
 8003078:	75bb      	strb	r3, [r7, #22]
 800307a:	e006      	b.n	800308a <LTC681x_rdcv+0x68>
 800307c:	693b      	ldr	r3, [r7, #16]
 800307e:	b2db      	uxtb	r3, r3
 8003080:	79ba      	ldrb	r2, [r7, #6]
 8003082:	1ad3      	subs	r3, r2, r3
 8003084:	b2db      	uxtb	r3, r3
 8003086:	3b01      	subs	r3, #1
 8003088:	75bb      	strb	r3, [r7, #22]
 800308a:	693b      	ldr	r3, [r7, #16]
 800308c:	b2d8      	uxtb	r0, r3
 800308e:	7dbb      	ldrb	r3, [r7, #22]
 8003090:	22e8      	movs	r2, #232	; 0xe8
 8003092:	fb02 f303 	mul.w	r3, r2, r3
 8003096:	683a      	ldr	r2, [r7, #0]
 8003098:	4413      	add	r3, r2
 800309a:	f103 041e 	add.w	r4, r3, #30
 800309e:	7dbb      	ldrb	r3, [r7, #22]
 80030a0:	22e8      	movs	r2, #232	; 0xe8
 80030a2:	fb02 f303 	mul.w	r3, r2, r3
 80030a6:	683a      	ldr	r2, [r7, #0]
 80030a8:	4413      	add	r3, r2
 80030aa:	3342      	adds	r3, #66	; 0x42
 80030ac:	7d79      	ldrb	r1, [r7, #21]
 80030ae:	9300      	str	r3, [sp, #0]
 80030b0:	4623      	mov	r3, r4
 80030b2:	68ba      	ldr	r2, [r7, #8]
 80030b4:	f000 f9c2 	bl	800343c <parse_cells>
 80030b8:	4603      	mov	r3, r0
 80030ba:	b2da      	uxtb	r2, r3
 80030bc:	7dfb      	ldrb	r3, [r7, #23]
 80030be:	4413      	add	r3, r2
 80030c0:	b2db      	uxtb	r3, r3
 80030c2:	75fb      	strb	r3, [r7, #23]
 80030c4:	693b      	ldr	r3, [r7, #16]
 80030c6:	3301      	adds	r3, #1
 80030c8:	613b      	str	r3, [r7, #16]
 80030ca:	79bb      	ldrb	r3, [r7, #6]
 80030cc:	693a      	ldr	r2, [r7, #16]
 80030ce:	429a      	cmp	r2, r3
 80030d0:	dbc9      	blt.n	8003066 <LTC681x_rdcv+0x44>
 80030d2:	7d7b      	ldrb	r3, [r7, #21]
 80030d4:	3301      	adds	r3, #1
 80030d6:	757b      	strb	r3, [r7, #21]
 80030d8:	683b      	ldr	r3, [r7, #0]
 80030da:	f893 30df 	ldrb.w	r3, [r3, #223]	; 0xdf
 80030de:	7d7a      	ldrb	r2, [r7, #21]
 80030e0:	429a      	cmp	r2, r3
 80030e2:	d9b7      	bls.n	8003054 <LTC681x_rdcv+0x32>
 80030e4:	e043      	b.n	800316e <LTC681x_rdcv+0x14c>
 80030e6:	79b9      	ldrb	r1, [r7, #6]
 80030e8:	79fb      	ldrb	r3, [r7, #7]
 80030ea:	68ba      	ldr	r2, [r7, #8]
 80030ec:	4618      	mov	r0, r3
 80030ee:	f000 f8f4 	bl	80032da <LTC681x_rdcv_reg>
 80030f2:	2300      	movs	r3, #0
 80030f4:	60fb      	str	r3, [r7, #12]
 80030f6:	e036      	b.n	8003166 <LTC681x_rdcv+0x144>
 80030f8:	683b      	ldr	r3, [r7, #0]
 80030fa:	f893 30bf 	ldrb.w	r3, [r3, #191]	; 0xbf
 80030fe:	f083 0301 	eor.w	r3, r3, #1
 8003102:	b2db      	uxtb	r3, r3
 8003104:	2b00      	cmp	r3, #0
 8003106:	d002      	beq.n	800310e <LTC681x_rdcv+0xec>
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	75bb      	strb	r3, [r7, #22]
 800310c:	e006      	b.n	800311c <LTC681x_rdcv+0xfa>
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	b2db      	uxtb	r3, r3
 8003112:	79ba      	ldrb	r2, [r7, #6]
 8003114:	1ad3      	subs	r3, r2, r3
 8003116:	b2db      	uxtb	r3, r3
 8003118:	3b01      	subs	r3, #1
 800311a:	75bb      	strb	r3, [r7, #22]
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	b2d8      	uxtb	r0, r3
 8003120:	7dbb      	ldrb	r3, [r7, #22]
 8003122:	00db      	lsls	r3, r3, #3
 8003124:	461a      	mov	r2, r3
 8003126:	68bb      	ldr	r3, [r7, #8]
 8003128:	189c      	adds	r4, r3, r2
 800312a:	7dbb      	ldrb	r3, [r7, #22]
 800312c:	22e8      	movs	r2, #232	; 0xe8
 800312e:	fb02 f303 	mul.w	r3, r2, r3
 8003132:	683a      	ldr	r2, [r7, #0]
 8003134:	4413      	add	r3, r2
 8003136:	f103 051e 	add.w	r5, r3, #30
 800313a:	7dbb      	ldrb	r3, [r7, #22]
 800313c:	22e8      	movs	r2, #232	; 0xe8
 800313e:	fb02 f303 	mul.w	r3, r2, r3
 8003142:	683a      	ldr	r2, [r7, #0]
 8003144:	4413      	add	r3, r2
 8003146:	3342      	adds	r3, #66	; 0x42
 8003148:	79f9      	ldrb	r1, [r7, #7]
 800314a:	9300      	str	r3, [sp, #0]
 800314c:	462b      	mov	r3, r5
 800314e:	4622      	mov	r2, r4
 8003150:	f000 f974 	bl	800343c <parse_cells>
 8003154:	4603      	mov	r3, r0
 8003156:	b2da      	uxtb	r2, r3
 8003158:	7dfb      	ldrb	r3, [r7, #23]
 800315a:	4413      	add	r3, r2
 800315c:	b2db      	uxtb	r3, r3
 800315e:	75fb      	strb	r3, [r7, #23]
 8003160:	68fb      	ldr	r3, [r7, #12]
 8003162:	3301      	adds	r3, #1
 8003164:	60fb      	str	r3, [r7, #12]
 8003166:	79bb      	ldrb	r3, [r7, #6]
 8003168:	68fa      	ldr	r2, [r7, #12]
 800316a:	429a      	cmp	r2, r3
 800316c:	dbc4      	blt.n	80030f8 <LTC681x_rdcv+0xd6>
 800316e:	79bb      	ldrb	r3, [r7, #6]
 8003170:	683a      	ldr	r2, [r7, #0]
 8003172:	2101      	movs	r1, #1
 8003174:	4618      	mov	r0, r3
 8003176:	f000 fa17 	bl	80035a8 <LTC681x_check_pec>
 800317a:	68b8      	ldr	r0, [r7, #8]
 800317c:	f006 fab0 	bl	80096e0 <free>
 8003180:	7dfb      	ldrb	r3, [r7, #23]
 8003182:	4618      	mov	r0, r3
 8003184:	3718      	adds	r7, #24
 8003186:	46bd      	mov	sp, r7
 8003188:	bdb0      	pop	{r4, r5, r7, pc}

0800318a <LTC681x_rdaux>:
 800318a:	b590      	push	{r4, r7, lr}
 800318c:	b089      	sub	sp, #36	; 0x24
 800318e:	af02      	add	r7, sp, #8
 8003190:	4603      	mov	r3, r0
 8003192:	603a      	str	r2, [r7, #0]
 8003194:	71fb      	strb	r3, [r7, #7]
 8003196:	460b      	mov	r3, r1
 8003198:	71bb      	strb	r3, [r7, #6]
 800319a:	2300      	movs	r3, #0
 800319c:	75fb      	strb	r3, [r7, #23]
 800319e:	2300      	movs	r3, #0
 80031a0:	75bb      	strb	r3, [r7, #22]
 80031a2:	79bb      	ldrb	r3, [r7, #6]
 80031a4:	00db      	lsls	r3, r3, #3
 80031a6:	4618      	mov	r0, r3
 80031a8:	f006 fa92 	bl	80096d0 <malloc>
 80031ac:	4603      	mov	r3, r0
 80031ae:	60bb      	str	r3, [r7, #8]
 80031b0:	79fb      	ldrb	r3, [r7, #7]
 80031b2:	2b00      	cmp	r3, #0
 80031b4:	d147      	bne.n	8003246 <LTC681x_rdaux+0xbc>
 80031b6:	2301      	movs	r3, #1
 80031b8:	757b      	strb	r3, [r7, #21]
 80031ba:	e03d      	b.n	8003238 <LTC681x_rdaux+0xae>
 80031bc:	79b9      	ldrb	r1, [r7, #6]
 80031be:	7d7b      	ldrb	r3, [r7, #21]
 80031c0:	68ba      	ldr	r2, [r7, #8]
 80031c2:	4618      	mov	r0, r3
 80031c4:	f000 f8e7 	bl	8003396 <LTC681x_rdaux_reg>
 80031c8:	2300      	movs	r3, #0
 80031ca:	613b      	str	r3, [r7, #16]
 80031cc:	e02d      	b.n	800322a <LTC681x_rdaux+0xa0>
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	f893 30bf 	ldrb.w	r3, [r3, #191]	; 0xbf
 80031d4:	f083 0301 	eor.w	r3, r3, #1
 80031d8:	b2db      	uxtb	r3, r3
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d002      	beq.n	80031e4 <LTC681x_rdaux+0x5a>
 80031de:	693b      	ldr	r3, [r7, #16]
 80031e0:	75bb      	strb	r3, [r7, #22]
 80031e2:	e006      	b.n	80031f2 <LTC681x_rdaux+0x68>
 80031e4:	693b      	ldr	r3, [r7, #16]
 80031e6:	b2db      	uxtb	r3, r3
 80031e8:	79ba      	ldrb	r2, [r7, #6]
 80031ea:	1ad3      	subs	r3, r2, r3
 80031ec:	b2db      	uxtb	r3, r3
 80031ee:	3b01      	subs	r3, #1
 80031f0:	75bb      	strb	r3, [r7, #22]
 80031f2:	693b      	ldr	r3, [r7, #16]
 80031f4:	b2d8      	uxtb	r0, r3
 80031f6:	7dbb      	ldrb	r3, [r7, #22]
 80031f8:	22e8      	movs	r2, #232	; 0xe8
 80031fa:	fb02 f303 	mul.w	r3, r2, r3
 80031fe:	683a      	ldr	r2, [r7, #0]
 8003200:	4413      	add	r3, r2
 8003202:	f103 0448 	add.w	r4, r3, #72	; 0x48
 8003206:	7dbb      	ldrb	r3, [r7, #22]
 8003208:	22e8      	movs	r2, #232	; 0xe8
 800320a:	fb02 f303 	mul.w	r3, r2, r3
 800320e:	683a      	ldr	r2, [r7, #0]
 8003210:	4413      	add	r3, r2
 8003212:	335a      	adds	r3, #90	; 0x5a
 8003214:	7d79      	ldrb	r1, [r7, #21]
 8003216:	9300      	str	r3, [sp, #0]
 8003218:	4623      	mov	r3, r4
 800321a:	68ba      	ldr	r2, [r7, #8]
 800321c:	f000 f90e 	bl	800343c <parse_cells>
 8003220:	4603      	mov	r3, r0
 8003222:	75fb      	strb	r3, [r7, #23]
 8003224:	693b      	ldr	r3, [r7, #16]
 8003226:	3301      	adds	r3, #1
 8003228:	613b      	str	r3, [r7, #16]
 800322a:	79bb      	ldrb	r3, [r7, #6]
 800322c:	693a      	ldr	r2, [r7, #16]
 800322e:	429a      	cmp	r2, r3
 8003230:	dbcd      	blt.n	80031ce <LTC681x_rdaux+0x44>
 8003232:	7d7b      	ldrb	r3, [r7, #21]
 8003234:	3301      	adds	r3, #1
 8003236:	757b      	strb	r3, [r7, #21]
 8003238:	683b      	ldr	r3, [r7, #0]
 800323a:	f893 30e0 	ldrb.w	r3, [r3, #224]	; 0xe0
 800323e:	7d7a      	ldrb	r2, [r7, #21]
 8003240:	429a      	cmp	r2, r3
 8003242:	d9bb      	bls.n	80031bc <LTC681x_rdaux+0x32>
 8003244:	e03a      	b.n	80032bc <LTC681x_rdaux+0x132>
 8003246:	79b9      	ldrb	r1, [r7, #6]
 8003248:	79fb      	ldrb	r3, [r7, #7]
 800324a:	68ba      	ldr	r2, [r7, #8]
 800324c:	4618      	mov	r0, r3
 800324e:	f000 f8a2 	bl	8003396 <LTC681x_rdaux_reg>
 8003252:	2300      	movs	r3, #0
 8003254:	60fb      	str	r3, [r7, #12]
 8003256:	e02d      	b.n	80032b4 <LTC681x_rdaux+0x12a>
 8003258:	683b      	ldr	r3, [r7, #0]
 800325a:	f893 30bf 	ldrb.w	r3, [r3, #191]	; 0xbf
 800325e:	f083 0301 	eor.w	r3, r3, #1
 8003262:	b2db      	uxtb	r3, r3
 8003264:	2b00      	cmp	r3, #0
 8003266:	d002      	beq.n	800326e <LTC681x_rdaux+0xe4>
 8003268:	68fb      	ldr	r3, [r7, #12]
 800326a:	75bb      	strb	r3, [r7, #22]
 800326c:	e006      	b.n	800327c <LTC681x_rdaux+0xf2>
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	b2db      	uxtb	r3, r3
 8003272:	79ba      	ldrb	r2, [r7, #6]
 8003274:	1ad3      	subs	r3, r2, r3
 8003276:	b2db      	uxtb	r3, r3
 8003278:	3b01      	subs	r3, #1
 800327a:	75bb      	strb	r3, [r7, #22]
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	b2d8      	uxtb	r0, r3
 8003280:	7dbb      	ldrb	r3, [r7, #22]
 8003282:	22e8      	movs	r2, #232	; 0xe8
 8003284:	fb02 f303 	mul.w	r3, r2, r3
 8003288:	683a      	ldr	r2, [r7, #0]
 800328a:	4413      	add	r3, r2
 800328c:	f103 0448 	add.w	r4, r3, #72	; 0x48
 8003290:	7dbb      	ldrb	r3, [r7, #22]
 8003292:	22e8      	movs	r2, #232	; 0xe8
 8003294:	fb02 f303 	mul.w	r3, r2, r3
 8003298:	683a      	ldr	r2, [r7, #0]
 800329a:	4413      	add	r3, r2
 800329c:	335a      	adds	r3, #90	; 0x5a
 800329e:	79f9      	ldrb	r1, [r7, #7]
 80032a0:	9300      	str	r3, [sp, #0]
 80032a2:	4623      	mov	r3, r4
 80032a4:	68ba      	ldr	r2, [r7, #8]
 80032a6:	f000 f8c9 	bl	800343c <parse_cells>
 80032aa:	4603      	mov	r3, r0
 80032ac:	75fb      	strb	r3, [r7, #23]
 80032ae:	68fb      	ldr	r3, [r7, #12]
 80032b0:	3301      	adds	r3, #1
 80032b2:	60fb      	str	r3, [r7, #12]
 80032b4:	79bb      	ldrb	r3, [r7, #6]
 80032b6:	68fa      	ldr	r2, [r7, #12]
 80032b8:	429a      	cmp	r2, r3
 80032ba:	dbcd      	blt.n	8003258 <LTC681x_rdaux+0xce>
 80032bc:	79bb      	ldrb	r3, [r7, #6]
 80032be:	683a      	ldr	r2, [r7, #0]
 80032c0:	2102      	movs	r1, #2
 80032c2:	4618      	mov	r0, r3
 80032c4:	f000 f970 	bl	80035a8 <LTC681x_check_pec>
 80032c8:	68b8      	ldr	r0, [r7, #8]
 80032ca:	f006 fa09 	bl	80096e0 <free>
 80032ce:	f997 3017 	ldrsb.w	r3, [r7, #23]
 80032d2:	4618      	mov	r0, r3
 80032d4:	371c      	adds	r7, #28
 80032d6:	46bd      	mov	sp, r7
 80032d8:	bd90      	pop	{r4, r7, pc}

080032da <LTC681x_rdcv_reg>:
 80032da:	b580      	push	{r7, lr}
 80032dc:	b084      	sub	sp, #16
 80032de:	af00      	add	r7, sp, #0
 80032e0:	4603      	mov	r3, r0
 80032e2:	603a      	str	r2, [r7, #0]
 80032e4:	71fb      	strb	r3, [r7, #7]
 80032e6:	460b      	mov	r3, r1
 80032e8:	71bb      	strb	r3, [r7, #6]
 80032ea:	2308      	movs	r3, #8
 80032ec:	73fb      	strb	r3, [r7, #15]
 80032ee:	79fb      	ldrb	r3, [r7, #7]
 80032f0:	2b01      	cmp	r3, #1
 80032f2:	d104      	bne.n	80032fe <LTC681x_rdcv_reg+0x24>
 80032f4:	2304      	movs	r3, #4
 80032f6:	727b      	strb	r3, [r7, #9]
 80032f8:	2300      	movs	r3, #0
 80032fa:	723b      	strb	r3, [r7, #8]
 80032fc:	e026      	b.n	800334c <LTC681x_rdcv_reg+0x72>
 80032fe:	79fb      	ldrb	r3, [r7, #7]
 8003300:	2b02      	cmp	r3, #2
 8003302:	d104      	bne.n	800330e <LTC681x_rdcv_reg+0x34>
 8003304:	2306      	movs	r3, #6
 8003306:	727b      	strb	r3, [r7, #9]
 8003308:	2300      	movs	r3, #0
 800330a:	723b      	strb	r3, [r7, #8]
 800330c:	e01e      	b.n	800334c <LTC681x_rdcv_reg+0x72>
 800330e:	79fb      	ldrb	r3, [r7, #7]
 8003310:	2b03      	cmp	r3, #3
 8003312:	d104      	bne.n	800331e <LTC681x_rdcv_reg+0x44>
 8003314:	2308      	movs	r3, #8
 8003316:	727b      	strb	r3, [r7, #9]
 8003318:	2300      	movs	r3, #0
 800331a:	723b      	strb	r3, [r7, #8]
 800331c:	e016      	b.n	800334c <LTC681x_rdcv_reg+0x72>
 800331e:	79fb      	ldrb	r3, [r7, #7]
 8003320:	2b04      	cmp	r3, #4
 8003322:	d104      	bne.n	800332e <LTC681x_rdcv_reg+0x54>
 8003324:	230a      	movs	r3, #10
 8003326:	727b      	strb	r3, [r7, #9]
 8003328:	2300      	movs	r3, #0
 800332a:	723b      	strb	r3, [r7, #8]
 800332c:	e00e      	b.n	800334c <LTC681x_rdcv_reg+0x72>
 800332e:	79fb      	ldrb	r3, [r7, #7]
 8003330:	2b05      	cmp	r3, #5
 8003332:	d104      	bne.n	800333e <LTC681x_rdcv_reg+0x64>
 8003334:	2309      	movs	r3, #9
 8003336:	727b      	strb	r3, [r7, #9]
 8003338:	2300      	movs	r3, #0
 800333a:	723b      	strb	r3, [r7, #8]
 800333c:	e006      	b.n	800334c <LTC681x_rdcv_reg+0x72>
 800333e:	79fb      	ldrb	r3, [r7, #7]
 8003340:	2b06      	cmp	r3, #6
 8003342:	d103      	bne.n	800334c <LTC681x_rdcv_reg+0x72>
 8003344:	230b      	movs	r3, #11
 8003346:	727b      	strb	r3, [r7, #9]
 8003348:	2300      	movs	r3, #0
 800334a:	723b      	strb	r3, [r7, #8]
 800334c:	f107 0308 	add.w	r3, r7, #8
 8003350:	4619      	mov	r1, r3
 8003352:	2002      	movs	r0, #2
 8003354:	f7ff fd62 	bl	8002e1c <pec15_calc>
 8003358:	4603      	mov	r3, r0
 800335a:	81bb      	strh	r3, [r7, #12]
 800335c:	89bb      	ldrh	r3, [r7, #12]
 800335e:	0a1b      	lsrs	r3, r3, #8
 8003360:	b29b      	uxth	r3, r3
 8003362:	b2db      	uxtb	r3, r3
 8003364:	72bb      	strb	r3, [r7, #10]
 8003366:	89bb      	ldrh	r3, [r7, #12]
 8003368:	b2db      	uxtb	r3, r3
 800336a:	72fb      	strb	r3, [r7, #11]
 800336c:	200a      	movs	r0, #10
 800336e:	f000 fdb5 	bl	8003edc <cs_low>
 8003372:	7bfa      	ldrb	r2, [r7, #15]
 8003374:	79bb      	ldrb	r3, [r7, #6]
 8003376:	fb12 f303 	smulbb	r3, r2, r3
 800337a:	b2db      	uxtb	r3, r3
 800337c:	f107 0008 	add.w	r0, r7, #8
 8003380:	683a      	ldr	r2, [r7, #0]
 8003382:	2104      	movs	r1, #4
 8003384:	f000 fdde 	bl	8003f44 <spi_write_read>
 8003388:	200a      	movs	r0, #10
 800338a:	f000 fdb7 	bl	8003efc <cs_high>
 800338e:	bf00      	nop
 8003390:	3710      	adds	r7, #16
 8003392:	46bd      	mov	sp, r7
 8003394:	bd80      	pop	{r7, pc}

08003396 <LTC681x_rdaux_reg>:
 8003396:	b580      	push	{r7, lr}
 8003398:	b084      	sub	sp, #16
 800339a:	af00      	add	r7, sp, #0
 800339c:	4603      	mov	r3, r0
 800339e:	603a      	str	r2, [r7, #0]
 80033a0:	71fb      	strb	r3, [r7, #7]
 80033a2:	460b      	mov	r3, r1
 80033a4:	71bb      	strb	r3, [r7, #6]
 80033a6:	2308      	movs	r3, #8
 80033a8:	73fb      	strb	r3, [r7, #15]
 80033aa:	79fb      	ldrb	r3, [r7, #7]
 80033ac:	2b01      	cmp	r3, #1
 80033ae:	d104      	bne.n	80033ba <LTC681x_rdaux_reg+0x24>
 80033b0:	230c      	movs	r3, #12
 80033b2:	727b      	strb	r3, [r7, #9]
 80033b4:	2300      	movs	r3, #0
 80033b6:	723b      	strb	r3, [r7, #8]
 80033b8:	e01b      	b.n	80033f2 <LTC681x_rdaux_reg+0x5c>
 80033ba:	79fb      	ldrb	r3, [r7, #7]
 80033bc:	2b02      	cmp	r3, #2
 80033be:	d104      	bne.n	80033ca <LTC681x_rdaux_reg+0x34>
 80033c0:	230e      	movs	r3, #14
 80033c2:	727b      	strb	r3, [r7, #9]
 80033c4:	2300      	movs	r3, #0
 80033c6:	723b      	strb	r3, [r7, #8]
 80033c8:	e013      	b.n	80033f2 <LTC681x_rdaux_reg+0x5c>
 80033ca:	79fb      	ldrb	r3, [r7, #7]
 80033cc:	2b03      	cmp	r3, #3
 80033ce:	d104      	bne.n	80033da <LTC681x_rdaux_reg+0x44>
 80033d0:	230d      	movs	r3, #13
 80033d2:	727b      	strb	r3, [r7, #9]
 80033d4:	2300      	movs	r3, #0
 80033d6:	723b      	strb	r3, [r7, #8]
 80033d8:	e00b      	b.n	80033f2 <LTC681x_rdaux_reg+0x5c>
 80033da:	79fb      	ldrb	r3, [r7, #7]
 80033dc:	2b04      	cmp	r3, #4
 80033de:	d104      	bne.n	80033ea <LTC681x_rdaux_reg+0x54>
 80033e0:	230f      	movs	r3, #15
 80033e2:	727b      	strb	r3, [r7, #9]
 80033e4:	2300      	movs	r3, #0
 80033e6:	723b      	strb	r3, [r7, #8]
 80033e8:	e003      	b.n	80033f2 <LTC681x_rdaux_reg+0x5c>
 80033ea:	230c      	movs	r3, #12
 80033ec:	727b      	strb	r3, [r7, #9]
 80033ee:	2300      	movs	r3, #0
 80033f0:	723b      	strb	r3, [r7, #8]
 80033f2:	f107 0308 	add.w	r3, r7, #8
 80033f6:	4619      	mov	r1, r3
 80033f8:	2002      	movs	r0, #2
 80033fa:	f7ff fd0f 	bl	8002e1c <pec15_calc>
 80033fe:	4603      	mov	r3, r0
 8003400:	81bb      	strh	r3, [r7, #12]
 8003402:	89bb      	ldrh	r3, [r7, #12]
 8003404:	0a1b      	lsrs	r3, r3, #8
 8003406:	b29b      	uxth	r3, r3
 8003408:	b2db      	uxtb	r3, r3
 800340a:	72bb      	strb	r3, [r7, #10]
 800340c:	89bb      	ldrh	r3, [r7, #12]
 800340e:	b2db      	uxtb	r3, r3
 8003410:	72fb      	strb	r3, [r7, #11]
 8003412:	200a      	movs	r0, #10
 8003414:	f000 fd62 	bl	8003edc <cs_low>
 8003418:	7bfa      	ldrb	r2, [r7, #15]
 800341a:	79bb      	ldrb	r3, [r7, #6]
 800341c:	fb12 f303 	smulbb	r3, r2, r3
 8003420:	b2db      	uxtb	r3, r3
 8003422:	f107 0008 	add.w	r0, r7, #8
 8003426:	683a      	ldr	r2, [r7, #0]
 8003428:	2104      	movs	r1, #4
 800342a:	f000 fd8b 	bl	8003f44 <spi_write_read>
 800342e:	200a      	movs	r0, #10
 8003430:	f000 fd64 	bl	8003efc <cs_high>
 8003434:	bf00      	nop
 8003436:	3710      	adds	r7, #16
 8003438:	46bd      	mov	sp, r7
 800343a:	bd80      	pop	{r7, pc}

0800343c <parse_cells>:
 800343c:	b580      	push	{r7, lr}
 800343e:	b088      	sub	sp, #32
 8003440:	af00      	add	r7, sp, #0
 8003442:	60ba      	str	r2, [r7, #8]
 8003444:	607b      	str	r3, [r7, #4]
 8003446:	4603      	mov	r3, r0
 8003448:	73fb      	strb	r3, [r7, #15]
 800344a:	460b      	mov	r3, r1
 800344c:	73bb      	strb	r3, [r7, #14]
 800344e:	2306      	movs	r3, #6
 8003450:	773b      	strb	r3, [r7, #28]
 8003452:	2303      	movs	r3, #3
 8003454:	76fb      	strb	r3, [r7, #27]
 8003456:	2300      	movs	r3, #0
 8003458:	77fb      	strb	r3, [r7, #31]
 800345a:	7bfb      	ldrb	r3, [r7, #15]
 800345c:	00db      	lsls	r3, r3, #3
 800345e:	77bb      	strb	r3, [r7, #30]
 8003460:	2300      	movs	r3, #0
 8003462:	777b      	strb	r3, [r7, #29]
 8003464:	e020      	b.n	80034a8 <parse_cells+0x6c>
 8003466:	7fbb      	ldrb	r3, [r7, #30]
 8003468:	68ba      	ldr	r2, [r7, #8]
 800346a:	4413      	add	r3, r2
 800346c:	781b      	ldrb	r3, [r3, #0]
 800346e:	b29a      	uxth	r2, r3
 8003470:	7fbb      	ldrb	r3, [r7, #30]
 8003472:	3301      	adds	r3, #1
 8003474:	68b9      	ldr	r1, [r7, #8]
 8003476:	440b      	add	r3, r1
 8003478:	781b      	ldrb	r3, [r3, #0]
 800347a:	b29b      	uxth	r3, r3
 800347c:	021b      	lsls	r3, r3, #8
 800347e:	b29b      	uxth	r3, r3
 8003480:	4413      	add	r3, r2
 8003482:	82bb      	strh	r3, [r7, #20]
 8003484:	7f7a      	ldrb	r2, [r7, #29]
 8003486:	7bbb      	ldrb	r3, [r7, #14]
 8003488:	3b01      	subs	r3, #1
 800348a:	7ef9      	ldrb	r1, [r7, #27]
 800348c:	fb01 f303 	mul.w	r3, r1, r3
 8003490:	4413      	add	r3, r2
 8003492:	005b      	lsls	r3, r3, #1
 8003494:	687a      	ldr	r2, [r7, #4]
 8003496:	4413      	add	r3, r2
 8003498:	8aba      	ldrh	r2, [r7, #20]
 800349a:	801a      	strh	r2, [r3, #0]
 800349c:	7fbb      	ldrb	r3, [r7, #30]
 800349e:	3302      	adds	r3, #2
 80034a0:	77bb      	strb	r3, [r7, #30]
 80034a2:	7f7b      	ldrb	r3, [r7, #29]
 80034a4:	3301      	adds	r3, #1
 80034a6:	777b      	strb	r3, [r7, #29]
 80034a8:	7f7a      	ldrb	r2, [r7, #29]
 80034aa:	7efb      	ldrb	r3, [r7, #27]
 80034ac:	429a      	cmp	r2, r3
 80034ae:	d3da      	bcc.n	8003466 <parse_cells+0x2a>
 80034b0:	7fbb      	ldrb	r3, [r7, #30]
 80034b2:	68ba      	ldr	r2, [r7, #8]
 80034b4:	4413      	add	r3, r2
 80034b6:	781b      	ldrb	r3, [r3, #0]
 80034b8:	021b      	lsls	r3, r3, #8
 80034ba:	b21a      	sxth	r2, r3
 80034bc:	7fbb      	ldrb	r3, [r7, #30]
 80034be:	3301      	adds	r3, #1
 80034c0:	68b9      	ldr	r1, [r7, #8]
 80034c2:	440b      	add	r3, r1
 80034c4:	781b      	ldrb	r3, [r3, #0]
 80034c6:	b21b      	sxth	r3, r3
 80034c8:	4313      	orrs	r3, r2
 80034ca:	b21b      	sxth	r3, r3
 80034cc:	833b      	strh	r3, [r7, #24]
 80034ce:	7bfb      	ldrb	r3, [r7, #15]
 80034d0:	00db      	lsls	r3, r3, #3
 80034d2:	461a      	mov	r2, r3
 80034d4:	68bb      	ldr	r3, [r7, #8]
 80034d6:	441a      	add	r2, r3
 80034d8:	7f3b      	ldrb	r3, [r7, #28]
 80034da:	4611      	mov	r1, r2
 80034dc:	4618      	mov	r0, r3
 80034de:	f7ff fc9d 	bl	8002e1c <pec15_calc>
 80034e2:	4603      	mov	r3, r0
 80034e4:	82fb      	strh	r3, [r7, #22]
 80034e6:	8b3a      	ldrh	r2, [r7, #24]
 80034e8:	8afb      	ldrh	r3, [r7, #22]
 80034ea:	429a      	cmp	r2, r3
 80034ec:	d008      	beq.n	8003500 <parse_cells+0xc4>
 80034ee:	2301      	movs	r3, #1
 80034f0:	77fb      	strb	r3, [r7, #31]
 80034f2:	7bbb      	ldrb	r3, [r7, #14]
 80034f4:	3b01      	subs	r3, #1
 80034f6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80034f8:	4413      	add	r3, r2
 80034fa:	2201      	movs	r2, #1
 80034fc:	701a      	strb	r2, [r3, #0]
 80034fe:	e005      	b.n	800350c <parse_cells+0xd0>
 8003500:	7bbb      	ldrb	r3, [r7, #14]
 8003502:	3b01      	subs	r3, #1
 8003504:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003506:	4413      	add	r3, r2
 8003508:	2200      	movs	r2, #0
 800350a:	701a      	strb	r2, [r3, #0]
 800350c:	7fbb      	ldrb	r3, [r7, #30]
 800350e:	3302      	adds	r3, #2
 8003510:	77bb      	strb	r3, [r7, #30]
 8003512:	f997 301f 	ldrsb.w	r3, [r7, #31]
 8003516:	4618      	mov	r0, r3
 8003518:	3720      	adds	r7, #32
 800351a:	46bd      	mov	sp, r7
 800351c:	bd80      	pop	{r7, pc}
	...

08003520 <LTC681x_pollAdc>:
 8003520:	b580      	push	{r7, lr}
 8003522:	b084      	sub	sp, #16
 8003524:	af00      	add	r7, sp, #0
 8003526:	2300      	movs	r3, #0
 8003528:	60fb      	str	r3, [r7, #12]
 800352a:	2300      	movs	r3, #0
 800352c:	72fb      	strb	r3, [r7, #11]
 800352e:	2300      	movs	r3, #0
 8003530:	72bb      	strb	r3, [r7, #10]
 8003532:	2307      	movs	r3, #7
 8003534:	713b      	strb	r3, [r7, #4]
 8003536:	2314      	movs	r3, #20
 8003538:	717b      	strb	r3, [r7, #5]
 800353a:	1d3b      	adds	r3, r7, #4
 800353c:	4619      	mov	r1, r3
 800353e:	2002      	movs	r0, #2
 8003540:	f7ff fc6c 	bl	8002e1c <pec15_calc>
 8003544:	4603      	mov	r3, r0
 8003546:	813b      	strh	r3, [r7, #8]
 8003548:	893b      	ldrh	r3, [r7, #8]
 800354a:	0a1b      	lsrs	r3, r3, #8
 800354c:	b29b      	uxth	r3, r3
 800354e:	b2db      	uxtb	r3, r3
 8003550:	71bb      	strb	r3, [r7, #6]
 8003552:	893b      	ldrh	r3, [r7, #8]
 8003554:	b2db      	uxtb	r3, r3
 8003556:	71fb      	strb	r3, [r7, #7]
 8003558:	200a      	movs	r0, #10
 800355a:	f000 fcbf 	bl	8003edc <cs_low>
 800355e:	1d3b      	adds	r3, r7, #4
 8003560:	4619      	mov	r1, r3
 8003562:	2004      	movs	r0, #4
 8003564:	f000 fcda 	bl	8003f1c <spi_write_array>
 8003568:	e00d      	b.n	8003586 <LTC681x_pollAdc+0x66>
 800356a:	20ff      	movs	r0, #255	; 0xff
 800356c:	f000 fd20 	bl	8003fb0 <spi_read_byte>
 8003570:	4603      	mov	r3, r0
 8003572:	72bb      	strb	r3, [r7, #10]
 8003574:	7abb      	ldrb	r3, [r7, #10]
 8003576:	2b00      	cmp	r3, #0
 8003578:	d002      	beq.n	8003580 <LTC681x_pollAdc+0x60>
 800357a:	2301      	movs	r3, #1
 800357c:	72fb      	strb	r3, [r7, #11]
 800357e:	e002      	b.n	8003586 <LTC681x_pollAdc+0x66>
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	330a      	adds	r3, #10
 8003584:	60fb      	str	r3, [r7, #12]
 8003586:	68fb      	ldr	r3, [r7, #12]
 8003588:	4a06      	ldr	r2, [pc, #24]	; (80035a4 <LTC681x_pollAdc+0x84>)
 800358a:	4293      	cmp	r3, r2
 800358c:	d802      	bhi.n	8003594 <LTC681x_pollAdc+0x74>
 800358e:	7afb      	ldrb	r3, [r7, #11]
 8003590:	2b00      	cmp	r3, #0
 8003592:	d0ea      	beq.n	800356a <LTC681x_pollAdc+0x4a>
 8003594:	200a      	movs	r0, #10
 8003596:	f000 fcb1 	bl	8003efc <cs_high>
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	4618      	mov	r0, r3
 800359e:	3710      	adds	r7, #16
 80035a0:	46bd      	mov	sp, r7
 80035a2:	bd80      	pop	{r7, pc}
 80035a4:	00030d3f 	.word	0x00030d3f

080035a8 <LTC681x_check_pec>:
 80035a8:	b480      	push	{r7}
 80035aa:	b08b      	sub	sp, #44	; 0x2c
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	4603      	mov	r3, r0
 80035b0:	603a      	str	r2, [r7, #0]
 80035b2:	71fb      	strb	r3, [r7, #7]
 80035b4:	460b      	mov	r3, r1
 80035b6:	71bb      	strb	r3, [r7, #6]
 80035b8:	79bb      	ldrb	r3, [r7, #6]
 80035ba:	2b04      	cmp	r3, #4
 80035bc:	f200 8191 	bhi.w	80038e2 <LTC681x_check_pec+0x33a>
 80035c0:	a201      	add	r2, pc, #4	; (adr r2, 80035c8 <LTC681x_check_pec+0x20>)
 80035c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80035c6:	bf00      	nop
 80035c8:	080035dd 	.word	0x080035dd
 80035cc:	080036d9 	.word	0x080036d9
 80035d0:	0800378b 	.word	0x0800378b
 80035d4:	08003837 	.word	0x08003837
 80035d8:	0800365b 	.word	0x0800365b
 80035dc:	2300      	movs	r3, #0
 80035de:	627b      	str	r3, [r7, #36]	; 0x24
 80035e0:	e036      	b.n	8003650 <LTC681x_check_pec+0xa8>
 80035e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035e4:	22e8      	movs	r2, #232	; 0xe8
 80035e6:	fb02 f303 	mul.w	r3, r2, r3
 80035ea:	683a      	ldr	r2, [r7, #0]
 80035ec:	4413      	add	r3, r2
 80035ee:	f8b3 10c0 	ldrh.w	r1, [r3, #192]	; 0xc0
 80035f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035f4:	22e8      	movs	r2, #232	; 0xe8
 80035f6:	fb02 f303 	mul.w	r3, r2, r3
 80035fa:	683a      	ldr	r2, [r7, #0]
 80035fc:	4413      	add	r3, r2
 80035fe:	7b9b      	ldrb	r3, [r3, #14]
 8003600:	b29a      	uxth	r2, r3
 8003602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003604:	20e8      	movs	r0, #232	; 0xe8
 8003606:	fb00 f303 	mul.w	r3, r0, r3
 800360a:	6838      	ldr	r0, [r7, #0]
 800360c:	4403      	add	r3, r0
 800360e:	440a      	add	r2, r1
 8003610:	b292      	uxth	r2, r2
 8003612:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8003616:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003618:	22e8      	movs	r2, #232	; 0xe8
 800361a:	fb02 f303 	mul.w	r3, r2, r3
 800361e:	683a      	ldr	r2, [r7, #0]
 8003620:	4413      	add	r3, r2
 8003622:	f8b3 10c2 	ldrh.w	r1, [r3, #194]	; 0xc2
 8003626:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003628:	22e8      	movs	r2, #232	; 0xe8
 800362a:	fb02 f303 	mul.w	r3, r2, r3
 800362e:	683a      	ldr	r2, [r7, #0]
 8003630:	4413      	add	r3, r2
 8003632:	7b9b      	ldrb	r3, [r3, #14]
 8003634:	b29a      	uxth	r2, r3
 8003636:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003638:	20e8      	movs	r0, #232	; 0xe8
 800363a:	fb00 f303 	mul.w	r3, r0, r3
 800363e:	6838      	ldr	r0, [r7, #0]
 8003640:	4403      	add	r3, r0
 8003642:	440a      	add	r2, r1
 8003644:	b292      	uxth	r2, r2
 8003646:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
 800364a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800364c:	3301      	adds	r3, #1
 800364e:	627b      	str	r3, [r7, #36]	; 0x24
 8003650:	79fb      	ldrb	r3, [r7, #7]
 8003652:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003654:	429a      	cmp	r2, r3
 8003656:	dbc4      	blt.n	80035e2 <LTC681x_check_pec+0x3a>
 8003658:	e144      	b.n	80038e4 <LTC681x_check_pec+0x33c>
 800365a:	2300      	movs	r3, #0
 800365c:	623b      	str	r3, [r7, #32]
 800365e:	e036      	b.n	80036ce <LTC681x_check_pec+0x126>
 8003660:	6a3b      	ldr	r3, [r7, #32]
 8003662:	22e8      	movs	r2, #232	; 0xe8
 8003664:	fb02 f303 	mul.w	r3, r2, r3
 8003668:	683a      	ldr	r2, [r7, #0]
 800366a:	4413      	add	r3, r2
 800366c:	f8b3 10c0 	ldrh.w	r1, [r3, #192]	; 0xc0
 8003670:	6a3b      	ldr	r3, [r7, #32]
 8003672:	22e8      	movs	r2, #232	; 0xe8
 8003674:	fb02 f303 	mul.w	r3, r2, r3
 8003678:	683a      	ldr	r2, [r7, #0]
 800367a:	4413      	add	r3, r2
 800367c:	7f5b      	ldrb	r3, [r3, #29]
 800367e:	b29a      	uxth	r2, r3
 8003680:	6a3b      	ldr	r3, [r7, #32]
 8003682:	20e8      	movs	r0, #232	; 0xe8
 8003684:	fb00 f303 	mul.w	r3, r0, r3
 8003688:	6838      	ldr	r0, [r7, #0]
 800368a:	4403      	add	r3, r0
 800368c:	440a      	add	r2, r1
 800368e:	b292      	uxth	r2, r2
 8003690:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8003694:	6a3b      	ldr	r3, [r7, #32]
 8003696:	22e8      	movs	r2, #232	; 0xe8
 8003698:	fb02 f303 	mul.w	r3, r2, r3
 800369c:	683a      	ldr	r2, [r7, #0]
 800369e:	4413      	add	r3, r2
 80036a0:	f8b3 10c2 	ldrh.w	r1, [r3, #194]	; 0xc2
 80036a4:	6a3b      	ldr	r3, [r7, #32]
 80036a6:	22e8      	movs	r2, #232	; 0xe8
 80036a8:	fb02 f303 	mul.w	r3, r2, r3
 80036ac:	683a      	ldr	r2, [r7, #0]
 80036ae:	4413      	add	r3, r2
 80036b0:	7f5b      	ldrb	r3, [r3, #29]
 80036b2:	b29a      	uxth	r2, r3
 80036b4:	6a3b      	ldr	r3, [r7, #32]
 80036b6:	20e8      	movs	r0, #232	; 0xe8
 80036b8:	fb00 f303 	mul.w	r3, r0, r3
 80036bc:	6838      	ldr	r0, [r7, #0]
 80036be:	4403      	add	r3, r0
 80036c0:	440a      	add	r2, r1
 80036c2:	b292      	uxth	r2, r2
 80036c4:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
 80036c8:	6a3b      	ldr	r3, [r7, #32]
 80036ca:	3301      	adds	r3, #1
 80036cc:	623b      	str	r3, [r7, #32]
 80036ce:	79fb      	ldrb	r3, [r7, #7]
 80036d0:	6a3a      	ldr	r2, [r7, #32]
 80036d2:	429a      	cmp	r2, r3
 80036d4:	dbc4      	blt.n	8003660 <LTC681x_check_pec+0xb8>
 80036d6:	e105      	b.n	80038e4 <LTC681x_check_pec+0x33c>
 80036d8:	2300      	movs	r3, #0
 80036da:	61fb      	str	r3, [r7, #28]
 80036dc:	e050      	b.n	8003780 <LTC681x_check_pec+0x1d8>
 80036de:	2300      	movs	r3, #0
 80036e0:	61bb      	str	r3, [r7, #24]
 80036e2:	e043      	b.n	800376c <LTC681x_check_pec+0x1c4>
 80036e4:	69fb      	ldr	r3, [r7, #28]
 80036e6:	22e8      	movs	r2, #232	; 0xe8
 80036e8:	fb02 f303 	mul.w	r3, r2, r3
 80036ec:	683a      	ldr	r2, [r7, #0]
 80036ee:	4413      	add	r3, r2
 80036f0:	f8b3 10c0 	ldrh.w	r1, [r3, #192]	; 0xc0
 80036f4:	69fb      	ldr	r3, [r7, #28]
 80036f6:	22e8      	movs	r2, #232	; 0xe8
 80036f8:	fb02 f303 	mul.w	r3, r2, r3
 80036fc:	683a      	ldr	r2, [r7, #0]
 80036fe:	441a      	add	r2, r3
 8003700:	69bb      	ldr	r3, [r7, #24]
 8003702:	4413      	add	r3, r2
 8003704:	3342      	adds	r3, #66	; 0x42
 8003706:	781b      	ldrb	r3, [r3, #0]
 8003708:	b29a      	uxth	r2, r3
 800370a:	69fb      	ldr	r3, [r7, #28]
 800370c:	20e8      	movs	r0, #232	; 0xe8
 800370e:	fb00 f303 	mul.w	r3, r0, r3
 8003712:	6838      	ldr	r0, [r7, #0]
 8003714:	4403      	add	r3, r0
 8003716:	440a      	add	r2, r1
 8003718:	b292      	uxth	r2, r2
 800371a:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 800371e:	69fb      	ldr	r3, [r7, #28]
 8003720:	22e8      	movs	r2, #232	; 0xe8
 8003722:	fb02 f303 	mul.w	r3, r2, r3
 8003726:	683a      	ldr	r2, [r7, #0]
 8003728:	441a      	add	r2, r3
 800372a:	69bb      	ldr	r3, [r7, #24]
 800372c:	3360      	adds	r3, #96	; 0x60
 800372e:	005b      	lsls	r3, r3, #1
 8003730:	4413      	add	r3, r2
 8003732:	8899      	ldrh	r1, [r3, #4]
 8003734:	69fb      	ldr	r3, [r7, #28]
 8003736:	22e8      	movs	r2, #232	; 0xe8
 8003738:	fb02 f303 	mul.w	r3, r2, r3
 800373c:	683a      	ldr	r2, [r7, #0]
 800373e:	441a      	add	r2, r3
 8003740:	69bb      	ldr	r3, [r7, #24]
 8003742:	4413      	add	r3, r2
 8003744:	3342      	adds	r3, #66	; 0x42
 8003746:	781b      	ldrb	r3, [r3, #0]
 8003748:	b29b      	uxth	r3, r3
 800374a:	69fa      	ldr	r2, [r7, #28]
 800374c:	20e8      	movs	r0, #232	; 0xe8
 800374e:	fb00 f202 	mul.w	r2, r0, r2
 8003752:	6838      	ldr	r0, [r7, #0]
 8003754:	4402      	add	r2, r0
 8003756:	440b      	add	r3, r1
 8003758:	b299      	uxth	r1, r3
 800375a:	69bb      	ldr	r3, [r7, #24]
 800375c:	3360      	adds	r3, #96	; 0x60
 800375e:	005b      	lsls	r3, r3, #1
 8003760:	4413      	add	r3, r2
 8003762:	460a      	mov	r2, r1
 8003764:	809a      	strh	r2, [r3, #4]
 8003766:	69bb      	ldr	r3, [r7, #24]
 8003768:	3301      	adds	r3, #1
 800376a:	61bb      	str	r3, [r7, #24]
 800376c:	683b      	ldr	r3, [r7, #0]
 800376e:	f893 30df 	ldrb.w	r3, [r3, #223]	; 0xdf
 8003772:	461a      	mov	r2, r3
 8003774:	69bb      	ldr	r3, [r7, #24]
 8003776:	4293      	cmp	r3, r2
 8003778:	dbb4      	blt.n	80036e4 <LTC681x_check_pec+0x13c>
 800377a:	69fb      	ldr	r3, [r7, #28]
 800377c:	3301      	adds	r3, #1
 800377e:	61fb      	str	r3, [r7, #28]
 8003780:	79fb      	ldrb	r3, [r7, #7]
 8003782:	69fa      	ldr	r2, [r7, #28]
 8003784:	429a      	cmp	r2, r3
 8003786:	dbaa      	blt.n	80036de <LTC681x_check_pec+0x136>
 8003788:	e0ac      	b.n	80038e4 <LTC681x_check_pec+0x33c>
 800378a:	2300      	movs	r3, #0
 800378c:	617b      	str	r3, [r7, #20]
 800378e:	e04d      	b.n	800382c <LTC681x_check_pec+0x284>
 8003790:	2300      	movs	r3, #0
 8003792:	613b      	str	r3, [r7, #16]
 8003794:	e040      	b.n	8003818 <LTC681x_check_pec+0x270>
 8003796:	697b      	ldr	r3, [r7, #20]
 8003798:	22e8      	movs	r2, #232	; 0xe8
 800379a:	fb02 f303 	mul.w	r3, r2, r3
 800379e:	683a      	ldr	r2, [r7, #0]
 80037a0:	4413      	add	r3, r2
 80037a2:	f8b3 10c0 	ldrh.w	r1, [r3, #192]	; 0xc0
 80037a6:	697b      	ldr	r3, [r7, #20]
 80037a8:	22e8      	movs	r2, #232	; 0xe8
 80037aa:	fb02 f303 	mul.w	r3, r2, r3
 80037ae:	683a      	ldr	r2, [r7, #0]
 80037b0:	441a      	add	r2, r3
 80037b2:	693b      	ldr	r3, [r7, #16]
 80037b4:	4413      	add	r3, r2
 80037b6:	335a      	adds	r3, #90	; 0x5a
 80037b8:	781b      	ldrb	r3, [r3, #0]
 80037ba:	b29a      	uxth	r2, r3
 80037bc:	697b      	ldr	r3, [r7, #20]
 80037be:	20e8      	movs	r0, #232	; 0xe8
 80037c0:	fb00 f303 	mul.w	r3, r0, r3
 80037c4:	6838      	ldr	r0, [r7, #0]
 80037c6:	4403      	add	r3, r0
 80037c8:	440a      	add	r2, r1
 80037ca:	b292      	uxth	r2, r2
 80037cc:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 80037d0:	697b      	ldr	r3, [r7, #20]
 80037d2:	22e8      	movs	r2, #232	; 0xe8
 80037d4:	fb02 f303 	mul.w	r3, r2, r3
 80037d8:	683a      	ldr	r2, [r7, #0]
 80037da:	4413      	add	r3, r2
 80037dc:	693a      	ldr	r2, [r7, #16]
 80037de:	3268      	adds	r2, #104	; 0x68
 80037e0:	f833 1012 	ldrh.w	r1, [r3, r2, lsl #1]
 80037e4:	697b      	ldr	r3, [r7, #20]
 80037e6:	22e8      	movs	r2, #232	; 0xe8
 80037e8:	fb02 f303 	mul.w	r3, r2, r3
 80037ec:	683a      	ldr	r2, [r7, #0]
 80037ee:	441a      	add	r2, r3
 80037f0:	693b      	ldr	r3, [r7, #16]
 80037f2:	4413      	add	r3, r2
 80037f4:	335a      	adds	r3, #90	; 0x5a
 80037f6:	781b      	ldrb	r3, [r3, #0]
 80037f8:	b29a      	uxth	r2, r3
 80037fa:	697b      	ldr	r3, [r7, #20]
 80037fc:	20e8      	movs	r0, #232	; 0xe8
 80037fe:	fb00 f303 	mul.w	r3, r0, r3
 8003802:	6838      	ldr	r0, [r7, #0]
 8003804:	4403      	add	r3, r0
 8003806:	440a      	add	r2, r1
 8003808:	b291      	uxth	r1, r2
 800380a:	693a      	ldr	r2, [r7, #16]
 800380c:	3268      	adds	r2, #104	; 0x68
 800380e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8003812:	693b      	ldr	r3, [r7, #16]
 8003814:	3301      	adds	r3, #1
 8003816:	613b      	str	r3, [r7, #16]
 8003818:	683b      	ldr	r3, [r7, #0]
 800381a:	f893 30e0 	ldrb.w	r3, [r3, #224]	; 0xe0
 800381e:	461a      	mov	r2, r3
 8003820:	693b      	ldr	r3, [r7, #16]
 8003822:	4293      	cmp	r3, r2
 8003824:	dbb7      	blt.n	8003796 <LTC681x_check_pec+0x1ee>
 8003826:	697b      	ldr	r3, [r7, #20]
 8003828:	3301      	adds	r3, #1
 800382a:	617b      	str	r3, [r7, #20]
 800382c:	79fb      	ldrb	r3, [r7, #7]
 800382e:	697a      	ldr	r2, [r7, #20]
 8003830:	429a      	cmp	r2, r3
 8003832:	dbad      	blt.n	8003790 <LTC681x_check_pec+0x1e8>
 8003834:	e056      	b.n	80038e4 <LTC681x_check_pec+0x33c>
 8003836:	2300      	movs	r3, #0
 8003838:	60fb      	str	r3, [r7, #12]
 800383a:	e04d      	b.n	80038d8 <LTC681x_check_pec+0x330>
 800383c:	2300      	movs	r3, #0
 800383e:	60bb      	str	r3, [r7, #8]
 8003840:	e040      	b.n	80038c4 <LTC681x_check_pec+0x31c>
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	22e8      	movs	r2, #232	; 0xe8
 8003846:	fb02 f303 	mul.w	r3, r2, r3
 800384a:	683a      	ldr	r2, [r7, #0]
 800384c:	4413      	add	r3, r2
 800384e:	f8b3 10c0 	ldrh.w	r1, [r3, #192]	; 0xc0
 8003852:	68fb      	ldr	r3, [r7, #12]
 8003854:	22e8      	movs	r2, #232	; 0xe8
 8003856:	fb02 f303 	mul.w	r3, r2, r3
 800385a:	683a      	ldr	r2, [r7, #0]
 800385c:	441a      	add	r2, r3
 800385e:	68bb      	ldr	r3, [r7, #8]
 8003860:	4413      	add	r3, r2
 8003862:	336b      	adds	r3, #107	; 0x6b
 8003864:	781b      	ldrb	r3, [r3, #0]
 8003866:	b29a      	uxth	r2, r3
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	20e8      	movs	r0, #232	; 0xe8
 800386c:	fb00 f303 	mul.w	r3, r0, r3
 8003870:	6838      	ldr	r0, [r7, #0]
 8003872:	4403      	add	r3, r0
 8003874:	440a      	add	r2, r1
 8003876:	b292      	uxth	r2, r2
 8003878:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	22e8      	movs	r2, #232	; 0xe8
 8003880:	fb02 f303 	mul.w	r3, r2, r3
 8003884:	683a      	ldr	r2, [r7, #0]
 8003886:	4413      	add	r3, r2
 8003888:	68ba      	ldr	r2, [r7, #8]
 800388a:	326c      	adds	r2, #108	; 0x6c
 800388c:	f833 1012 	ldrh.w	r1, [r3, r2, lsl #1]
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	22e8      	movs	r2, #232	; 0xe8
 8003894:	fb02 f303 	mul.w	r3, r2, r3
 8003898:	683a      	ldr	r2, [r7, #0]
 800389a:	441a      	add	r2, r3
 800389c:	68bb      	ldr	r3, [r7, #8]
 800389e:	4413      	add	r3, r2
 80038a0:	336b      	adds	r3, #107	; 0x6b
 80038a2:	781b      	ldrb	r3, [r3, #0]
 80038a4:	b29a      	uxth	r2, r3
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	20e8      	movs	r0, #232	; 0xe8
 80038aa:	fb00 f303 	mul.w	r3, r0, r3
 80038ae:	6838      	ldr	r0, [r7, #0]
 80038b0:	4403      	add	r3, r0
 80038b2:	440a      	add	r2, r1
 80038b4:	b291      	uxth	r1, r2
 80038b6:	68ba      	ldr	r2, [r7, #8]
 80038b8:	326c      	adds	r2, #108	; 0x6c
 80038ba:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80038be:	68bb      	ldr	r3, [r7, #8]
 80038c0:	3301      	adds	r3, #1
 80038c2:	60bb      	str	r3, [r7, #8]
 80038c4:	683b      	ldr	r3, [r7, #0]
 80038c6:	f893 30e1 	ldrb.w	r3, [r3, #225]	; 0xe1
 80038ca:	3b01      	subs	r3, #1
 80038cc:	68ba      	ldr	r2, [r7, #8]
 80038ce:	429a      	cmp	r2, r3
 80038d0:	dbb7      	blt.n	8003842 <LTC681x_check_pec+0x29a>
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	3301      	adds	r3, #1
 80038d6:	60fb      	str	r3, [r7, #12]
 80038d8:	79fb      	ldrb	r3, [r7, #7]
 80038da:	68fa      	ldr	r2, [r7, #12]
 80038dc:	429a      	cmp	r2, r3
 80038de:	dbad      	blt.n	800383c <LTC681x_check_pec+0x294>
 80038e0:	e000      	b.n	80038e4 <LTC681x_check_pec+0x33c>
 80038e2:	bf00      	nop
 80038e4:	bf00      	nop
 80038e6:	372c      	adds	r7, #44	; 0x2c
 80038e8:	46bd      	mov	sp, r7
 80038ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038ee:	4770      	bx	lr

080038f0 <LTC681x_reset_crc_count>:
 80038f0:	b480      	push	{r7}
 80038f2:	b087      	sub	sp, #28
 80038f4:	af00      	add	r7, sp, #0
 80038f6:	4603      	mov	r3, r0
 80038f8:	6039      	str	r1, [r7, #0]
 80038fa:	71fb      	strb	r3, [r7, #7]
 80038fc:	2300      	movs	r3, #0
 80038fe:	617b      	str	r3, [r7, #20]
 8003900:	e051      	b.n	80039a6 <LTC681x_reset_crc_count+0xb6>
 8003902:	697b      	ldr	r3, [r7, #20]
 8003904:	22e8      	movs	r2, #232	; 0xe8
 8003906:	fb02 f303 	mul.w	r3, r2, r3
 800390a:	683a      	ldr	r2, [r7, #0]
 800390c:	4413      	add	r3, r2
 800390e:	2200      	movs	r2, #0
 8003910:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8003914:	697b      	ldr	r3, [r7, #20]
 8003916:	22e8      	movs	r2, #232	; 0xe8
 8003918:	fb02 f303 	mul.w	r3, r2, r3
 800391c:	683a      	ldr	r2, [r7, #0]
 800391e:	4413      	add	r3, r2
 8003920:	2200      	movs	r2, #0
 8003922:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
 8003926:	2300      	movs	r3, #0
 8003928:	613b      	str	r3, [r7, #16]
 800392a:	e00e      	b.n	800394a <LTC681x_reset_crc_count+0x5a>
 800392c:	697b      	ldr	r3, [r7, #20]
 800392e:	22e8      	movs	r2, #232	; 0xe8
 8003930:	fb02 f303 	mul.w	r3, r2, r3
 8003934:	683a      	ldr	r2, [r7, #0]
 8003936:	441a      	add	r2, r3
 8003938:	693b      	ldr	r3, [r7, #16]
 800393a:	3360      	adds	r3, #96	; 0x60
 800393c:	005b      	lsls	r3, r3, #1
 800393e:	4413      	add	r3, r2
 8003940:	2200      	movs	r2, #0
 8003942:	809a      	strh	r2, [r3, #4]
 8003944:	693b      	ldr	r3, [r7, #16]
 8003946:	3301      	adds	r3, #1
 8003948:	613b      	str	r3, [r7, #16]
 800394a:	693b      	ldr	r3, [r7, #16]
 800394c:	2b05      	cmp	r3, #5
 800394e:	dded      	ble.n	800392c <LTC681x_reset_crc_count+0x3c>
 8003950:	2300      	movs	r3, #0
 8003952:	60fb      	str	r3, [r7, #12]
 8003954:	e00d      	b.n	8003972 <LTC681x_reset_crc_count+0x82>
 8003956:	697b      	ldr	r3, [r7, #20]
 8003958:	22e8      	movs	r2, #232	; 0xe8
 800395a:	fb02 f303 	mul.w	r3, r2, r3
 800395e:	683a      	ldr	r2, [r7, #0]
 8003960:	4413      	add	r3, r2
 8003962:	68fa      	ldr	r2, [r7, #12]
 8003964:	3268      	adds	r2, #104	; 0x68
 8003966:	2100      	movs	r1, #0
 8003968:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800396c:	68fb      	ldr	r3, [r7, #12]
 800396e:	3301      	adds	r3, #1
 8003970:	60fb      	str	r3, [r7, #12]
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	2b03      	cmp	r3, #3
 8003976:	ddee      	ble.n	8003956 <LTC681x_reset_crc_count+0x66>
 8003978:	2300      	movs	r3, #0
 800397a:	60bb      	str	r3, [r7, #8]
 800397c:	e00d      	b.n	800399a <LTC681x_reset_crc_count+0xaa>
 800397e:	697b      	ldr	r3, [r7, #20]
 8003980:	22e8      	movs	r2, #232	; 0xe8
 8003982:	fb02 f303 	mul.w	r3, r2, r3
 8003986:	683a      	ldr	r2, [r7, #0]
 8003988:	4413      	add	r3, r2
 800398a:	68ba      	ldr	r2, [r7, #8]
 800398c:	326c      	adds	r2, #108	; 0x6c
 800398e:	2100      	movs	r1, #0
 8003990:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8003994:	68bb      	ldr	r3, [r7, #8]
 8003996:	3301      	adds	r3, #1
 8003998:	60bb      	str	r3, [r7, #8]
 800399a:	68bb      	ldr	r3, [r7, #8]
 800399c:	2b01      	cmp	r3, #1
 800399e:	ddee      	ble.n	800397e <LTC681x_reset_crc_count+0x8e>
 80039a0:	697b      	ldr	r3, [r7, #20]
 80039a2:	3301      	adds	r3, #1
 80039a4:	617b      	str	r3, [r7, #20]
 80039a6:	79fb      	ldrb	r3, [r7, #7]
 80039a8:	697a      	ldr	r2, [r7, #20]
 80039aa:	429a      	cmp	r2, r3
 80039ac:	dba9      	blt.n	8003902 <LTC681x_reset_crc_count+0x12>
 80039ae:	bf00      	nop
 80039b0:	bf00      	nop
 80039b2:	371c      	adds	r7, #28
 80039b4:	46bd      	mov	sp, r7
 80039b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ba:	4770      	bx	lr

080039bc <LTC681x_init_cfg>:
 80039bc:	b480      	push	{r7}
 80039be:	b085      	sub	sp, #20
 80039c0:	af00      	add	r7, sp, #0
 80039c2:	4603      	mov	r3, r0
 80039c4:	6039      	str	r1, [r7, #0]
 80039c6:	71fb      	strb	r3, [r7, #7]
 80039c8:	2300      	movs	r3, #0
 80039ca:	73fb      	strb	r3, [r7, #15]
 80039cc:	e015      	b.n	80039fa <LTC681x_init_cfg+0x3e>
 80039ce:	2300      	movs	r3, #0
 80039d0:	60bb      	str	r3, [r7, #8]
 80039d2:	e00c      	b.n	80039ee <LTC681x_init_cfg+0x32>
 80039d4:	7bfb      	ldrb	r3, [r7, #15]
 80039d6:	22e8      	movs	r2, #232	; 0xe8
 80039d8:	fb02 f303 	mul.w	r3, r2, r3
 80039dc:	683a      	ldr	r2, [r7, #0]
 80039de:	441a      	add	r2, r3
 80039e0:	68bb      	ldr	r3, [r7, #8]
 80039e2:	4413      	add	r3, r2
 80039e4:	2200      	movs	r2, #0
 80039e6:	701a      	strb	r2, [r3, #0]
 80039e8:	68bb      	ldr	r3, [r7, #8]
 80039ea:	3301      	adds	r3, #1
 80039ec:	60bb      	str	r3, [r7, #8]
 80039ee:	68bb      	ldr	r3, [r7, #8]
 80039f0:	2b05      	cmp	r3, #5
 80039f2:	ddef      	ble.n	80039d4 <LTC681x_init_cfg+0x18>
 80039f4:	7bfb      	ldrb	r3, [r7, #15]
 80039f6:	3301      	adds	r3, #1
 80039f8:	73fb      	strb	r3, [r7, #15]
 80039fa:	7bfa      	ldrb	r2, [r7, #15]
 80039fc:	79fb      	ldrb	r3, [r7, #7]
 80039fe:	429a      	cmp	r2, r3
 8003a00:	d3e5      	bcc.n	80039ce <LTC681x_init_cfg+0x12>
 8003a02:	bf00      	nop
 8003a04:	bf00      	nop
 8003a06:	3714      	adds	r7, #20
 8003a08:	46bd      	mov	sp, r7
 8003a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a0e:	4770      	bx	lr

08003a10 <LTC681x_set_cfgr>:
 8003a10:	b580      	push	{r7, lr}
 8003a12:	b082      	sub	sp, #8
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6039      	str	r1, [r7, #0]
 8003a18:	4611      	mov	r1, r2
 8003a1a:	461a      	mov	r2, r3
 8003a1c:	4603      	mov	r3, r0
 8003a1e:	71fb      	strb	r3, [r7, #7]
 8003a20:	460b      	mov	r3, r1
 8003a22:	71bb      	strb	r3, [r7, #6]
 8003a24:	4613      	mov	r3, r2
 8003a26:	717b      	strb	r3, [r7, #5]
 8003a28:	79ba      	ldrb	r2, [r7, #6]
 8003a2a:	79fb      	ldrb	r3, [r7, #7]
 8003a2c:	6839      	ldr	r1, [r7, #0]
 8003a2e:	4618      	mov	r0, r3
 8003a30:	f000 f828 	bl	8003a84 <LTC681x_set_cfgr_refon>
 8003a34:	797a      	ldrb	r2, [r7, #5]
 8003a36:	79fb      	ldrb	r3, [r7, #7]
 8003a38:	6839      	ldr	r1, [r7, #0]
 8003a3a:	4618      	mov	r0, r3
 8003a3c:	f000 f856 	bl	8003aec <LTC681x_set_cfgr_adcopt>
 8003a40:	79fb      	ldrb	r3, [r7, #7]
 8003a42:	693a      	ldr	r2, [r7, #16]
 8003a44:	6839      	ldr	r1, [r7, #0]
 8003a46:	4618      	mov	r0, r3
 8003a48:	f000 f884 	bl	8003b54 <LTC681x_set_cfgr_gpio>
 8003a4c:	79fb      	ldrb	r3, [r7, #7]
 8003a4e:	697a      	ldr	r2, [r7, #20]
 8003a50:	6839      	ldr	r1, [r7, #0]
 8003a52:	4618      	mov	r0, r3
 8003a54:	f000 f8ce 	bl	8003bf4 <LTC681x_set_cfgr_dis>
 8003a58:	79fb      	ldrb	r3, [r7, #7]
 8003a5a:	69ba      	ldr	r2, [r7, #24]
 8003a5c:	6839      	ldr	r1, [r7, #0]
 8003a5e:	4618      	mov	r0, r3
 8003a60:	f000 f957 	bl	8003d12 <LTC681x_set_cfgr_dcto>
 8003a64:	8bba      	ldrh	r2, [r7, #28]
 8003a66:	79fb      	ldrb	r3, [r7, #7]
 8003a68:	6839      	ldr	r1, [r7, #0]
 8003a6a:	4618      	mov	r0, r3
 8003a6c:	f000 f9a1 	bl	8003db2 <LTC681x_set_cfgr_uv>
 8003a70:	8c3a      	ldrh	r2, [r7, #32]
 8003a72:	79fb      	ldrb	r3, [r7, #7]
 8003a74:	6839      	ldr	r1, [r7, #0]
 8003a76:	4618      	mov	r0, r3
 8003a78:	f000 f9e1 	bl	8003e3e <LTC681x_set_cfgr_ov>
 8003a7c:	bf00      	nop
 8003a7e:	3708      	adds	r7, #8
 8003a80:	46bd      	mov	sp, r7
 8003a82:	bd80      	pop	{r7, pc}

08003a84 <LTC681x_set_cfgr_refon>:
 8003a84:	b480      	push	{r7}
 8003a86:	b083      	sub	sp, #12
 8003a88:	af00      	add	r7, sp, #0
 8003a8a:	4603      	mov	r3, r0
 8003a8c:	6039      	str	r1, [r7, #0]
 8003a8e:	71fb      	strb	r3, [r7, #7]
 8003a90:	4613      	mov	r3, r2
 8003a92:	71bb      	strb	r3, [r7, #6]
 8003a94:	79bb      	ldrb	r3, [r7, #6]
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d011      	beq.n	8003abe <LTC681x_set_cfgr_refon+0x3a>
 8003a9a:	79fb      	ldrb	r3, [r7, #7]
 8003a9c:	22e8      	movs	r2, #232	; 0xe8
 8003a9e:	fb02 f303 	mul.w	r3, r2, r3
 8003aa2:	683a      	ldr	r2, [r7, #0]
 8003aa4:	4413      	add	r3, r2
 8003aa6:	781a      	ldrb	r2, [r3, #0]
 8003aa8:	79fb      	ldrb	r3, [r7, #7]
 8003aaa:	21e8      	movs	r1, #232	; 0xe8
 8003aac:	fb01 f303 	mul.w	r3, r1, r3
 8003ab0:	6839      	ldr	r1, [r7, #0]
 8003ab2:	440b      	add	r3, r1
 8003ab4:	f042 0204 	orr.w	r2, r2, #4
 8003ab8:	b2d2      	uxtb	r2, r2
 8003aba:	701a      	strb	r2, [r3, #0]
 8003abc:	e010      	b.n	8003ae0 <LTC681x_set_cfgr_refon+0x5c>
 8003abe:	79fb      	ldrb	r3, [r7, #7]
 8003ac0:	22e8      	movs	r2, #232	; 0xe8
 8003ac2:	fb02 f303 	mul.w	r3, r2, r3
 8003ac6:	683a      	ldr	r2, [r7, #0]
 8003ac8:	4413      	add	r3, r2
 8003aca:	781a      	ldrb	r2, [r3, #0]
 8003acc:	79fb      	ldrb	r3, [r7, #7]
 8003ace:	21e8      	movs	r1, #232	; 0xe8
 8003ad0:	fb01 f303 	mul.w	r3, r1, r3
 8003ad4:	6839      	ldr	r1, [r7, #0]
 8003ad6:	440b      	add	r3, r1
 8003ad8:	f022 0204 	bic.w	r2, r2, #4
 8003adc:	b2d2      	uxtb	r2, r2
 8003ade:	701a      	strb	r2, [r3, #0]
 8003ae0:	bf00      	nop
 8003ae2:	370c      	adds	r7, #12
 8003ae4:	46bd      	mov	sp, r7
 8003ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aea:	4770      	bx	lr

08003aec <LTC681x_set_cfgr_adcopt>:
 8003aec:	b480      	push	{r7}
 8003aee:	b083      	sub	sp, #12
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	4603      	mov	r3, r0
 8003af4:	6039      	str	r1, [r7, #0]
 8003af6:	71fb      	strb	r3, [r7, #7]
 8003af8:	4613      	mov	r3, r2
 8003afa:	71bb      	strb	r3, [r7, #6]
 8003afc:	79bb      	ldrb	r3, [r7, #6]
 8003afe:	2b00      	cmp	r3, #0
 8003b00:	d011      	beq.n	8003b26 <LTC681x_set_cfgr_adcopt+0x3a>
 8003b02:	79fb      	ldrb	r3, [r7, #7]
 8003b04:	22e8      	movs	r2, #232	; 0xe8
 8003b06:	fb02 f303 	mul.w	r3, r2, r3
 8003b0a:	683a      	ldr	r2, [r7, #0]
 8003b0c:	4413      	add	r3, r2
 8003b0e:	781a      	ldrb	r2, [r3, #0]
 8003b10:	79fb      	ldrb	r3, [r7, #7]
 8003b12:	21e8      	movs	r1, #232	; 0xe8
 8003b14:	fb01 f303 	mul.w	r3, r1, r3
 8003b18:	6839      	ldr	r1, [r7, #0]
 8003b1a:	440b      	add	r3, r1
 8003b1c:	f042 0201 	orr.w	r2, r2, #1
 8003b20:	b2d2      	uxtb	r2, r2
 8003b22:	701a      	strb	r2, [r3, #0]
 8003b24:	e010      	b.n	8003b48 <LTC681x_set_cfgr_adcopt+0x5c>
 8003b26:	79fb      	ldrb	r3, [r7, #7]
 8003b28:	22e8      	movs	r2, #232	; 0xe8
 8003b2a:	fb02 f303 	mul.w	r3, r2, r3
 8003b2e:	683a      	ldr	r2, [r7, #0]
 8003b30:	4413      	add	r3, r2
 8003b32:	781a      	ldrb	r2, [r3, #0]
 8003b34:	79fb      	ldrb	r3, [r7, #7]
 8003b36:	21e8      	movs	r1, #232	; 0xe8
 8003b38:	fb01 f303 	mul.w	r3, r1, r3
 8003b3c:	6839      	ldr	r1, [r7, #0]
 8003b3e:	440b      	add	r3, r1
 8003b40:	f022 0201 	bic.w	r2, r2, #1
 8003b44:	b2d2      	uxtb	r2, r2
 8003b46:	701a      	strb	r2, [r3, #0]
 8003b48:	bf00      	nop
 8003b4a:	370c      	adds	r7, #12
 8003b4c:	46bd      	mov	sp, r7
 8003b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b52:	4770      	bx	lr

08003b54 <LTC681x_set_cfgr_gpio>:
 8003b54:	b480      	push	{r7}
 8003b56:	b087      	sub	sp, #28
 8003b58:	af00      	add	r7, sp, #0
 8003b5a:	4603      	mov	r3, r0
 8003b5c:	60b9      	str	r1, [r7, #8]
 8003b5e:	607a      	str	r2, [r7, #4]
 8003b60:	73fb      	strb	r3, [r7, #15]
 8003b62:	2300      	movs	r3, #0
 8003b64:	617b      	str	r3, [r7, #20]
 8003b66:	e03b      	b.n	8003be0 <LTC681x_set_cfgr_gpio+0x8c>
 8003b68:	697b      	ldr	r3, [r7, #20]
 8003b6a:	687a      	ldr	r2, [r7, #4]
 8003b6c:	4413      	add	r3, r2
 8003b6e:	781b      	ldrb	r3, [r3, #0]
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d018      	beq.n	8003ba6 <LTC681x_set_cfgr_gpio+0x52>
 8003b74:	7bfb      	ldrb	r3, [r7, #15]
 8003b76:	22e8      	movs	r2, #232	; 0xe8
 8003b78:	fb02 f303 	mul.w	r3, r2, r3
 8003b7c:	68ba      	ldr	r2, [r7, #8]
 8003b7e:	4413      	add	r3, r2
 8003b80:	781b      	ldrb	r3, [r3, #0]
 8003b82:	b25a      	sxtb	r2, r3
 8003b84:	697b      	ldr	r3, [r7, #20]
 8003b86:	3303      	adds	r3, #3
 8003b88:	2101      	movs	r1, #1
 8003b8a:	fa01 f303 	lsl.w	r3, r1, r3
 8003b8e:	b25b      	sxtb	r3, r3
 8003b90:	4313      	orrs	r3, r2
 8003b92:	b259      	sxtb	r1, r3
 8003b94:	7bfb      	ldrb	r3, [r7, #15]
 8003b96:	22e8      	movs	r2, #232	; 0xe8
 8003b98:	fb02 f303 	mul.w	r3, r2, r3
 8003b9c:	68ba      	ldr	r2, [r7, #8]
 8003b9e:	4413      	add	r3, r2
 8003ba0:	b2ca      	uxtb	r2, r1
 8003ba2:	701a      	strb	r2, [r3, #0]
 8003ba4:	e019      	b.n	8003bda <LTC681x_set_cfgr_gpio+0x86>
 8003ba6:	7bfb      	ldrb	r3, [r7, #15]
 8003ba8:	22e8      	movs	r2, #232	; 0xe8
 8003baa:	fb02 f303 	mul.w	r3, r2, r3
 8003bae:	68ba      	ldr	r2, [r7, #8]
 8003bb0:	4413      	add	r3, r2
 8003bb2:	781b      	ldrb	r3, [r3, #0]
 8003bb4:	b25a      	sxtb	r2, r3
 8003bb6:	697b      	ldr	r3, [r7, #20]
 8003bb8:	3303      	adds	r3, #3
 8003bba:	2101      	movs	r1, #1
 8003bbc:	fa01 f303 	lsl.w	r3, r1, r3
 8003bc0:	b25b      	sxtb	r3, r3
 8003bc2:	43db      	mvns	r3, r3
 8003bc4:	b25b      	sxtb	r3, r3
 8003bc6:	4013      	ands	r3, r2
 8003bc8:	b259      	sxtb	r1, r3
 8003bca:	7bfb      	ldrb	r3, [r7, #15]
 8003bcc:	22e8      	movs	r2, #232	; 0xe8
 8003bce:	fb02 f303 	mul.w	r3, r2, r3
 8003bd2:	68ba      	ldr	r2, [r7, #8]
 8003bd4:	4413      	add	r3, r2
 8003bd6:	b2ca      	uxtb	r2, r1
 8003bd8:	701a      	strb	r2, [r3, #0]
 8003bda:	697b      	ldr	r3, [r7, #20]
 8003bdc:	3301      	adds	r3, #1
 8003bde:	617b      	str	r3, [r7, #20]
 8003be0:	697b      	ldr	r3, [r7, #20]
 8003be2:	2b04      	cmp	r3, #4
 8003be4:	ddc0      	ble.n	8003b68 <LTC681x_set_cfgr_gpio+0x14>
 8003be6:	bf00      	nop
 8003be8:	bf00      	nop
 8003bea:	371c      	adds	r7, #28
 8003bec:	46bd      	mov	sp, r7
 8003bee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf2:	4770      	bx	lr

08003bf4 <LTC681x_set_cfgr_dis>:
 8003bf4:	b480      	push	{r7}
 8003bf6:	b087      	sub	sp, #28
 8003bf8:	af00      	add	r7, sp, #0
 8003bfa:	4603      	mov	r3, r0
 8003bfc:	60b9      	str	r1, [r7, #8]
 8003bfe:	607a      	str	r2, [r7, #4]
 8003c00:	73fb      	strb	r3, [r7, #15]
 8003c02:	2300      	movs	r3, #0
 8003c04:	617b      	str	r3, [r7, #20]
 8003c06:	e039      	b.n	8003c7c <LTC681x_set_cfgr_dis+0x88>
 8003c08:	697b      	ldr	r3, [r7, #20]
 8003c0a:	687a      	ldr	r2, [r7, #4]
 8003c0c:	4413      	add	r3, r2
 8003c0e:	781b      	ldrb	r3, [r3, #0]
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d017      	beq.n	8003c44 <LTC681x_set_cfgr_dis+0x50>
 8003c14:	7bfb      	ldrb	r3, [r7, #15]
 8003c16:	22e8      	movs	r2, #232	; 0xe8
 8003c18:	fb02 f303 	mul.w	r3, r2, r3
 8003c1c:	68ba      	ldr	r2, [r7, #8]
 8003c1e:	4413      	add	r3, r2
 8003c20:	791b      	ldrb	r3, [r3, #4]
 8003c22:	b25a      	sxtb	r2, r3
 8003c24:	2101      	movs	r1, #1
 8003c26:	697b      	ldr	r3, [r7, #20]
 8003c28:	fa01 f303 	lsl.w	r3, r1, r3
 8003c2c:	b25b      	sxtb	r3, r3
 8003c2e:	4313      	orrs	r3, r2
 8003c30:	b259      	sxtb	r1, r3
 8003c32:	7bfb      	ldrb	r3, [r7, #15]
 8003c34:	22e8      	movs	r2, #232	; 0xe8
 8003c36:	fb02 f303 	mul.w	r3, r2, r3
 8003c3a:	68ba      	ldr	r2, [r7, #8]
 8003c3c:	4413      	add	r3, r2
 8003c3e:	b2ca      	uxtb	r2, r1
 8003c40:	711a      	strb	r2, [r3, #4]
 8003c42:	e018      	b.n	8003c76 <LTC681x_set_cfgr_dis+0x82>
 8003c44:	7bfb      	ldrb	r3, [r7, #15]
 8003c46:	22e8      	movs	r2, #232	; 0xe8
 8003c48:	fb02 f303 	mul.w	r3, r2, r3
 8003c4c:	68ba      	ldr	r2, [r7, #8]
 8003c4e:	4413      	add	r3, r2
 8003c50:	791b      	ldrb	r3, [r3, #4]
 8003c52:	b25a      	sxtb	r2, r3
 8003c54:	2101      	movs	r1, #1
 8003c56:	697b      	ldr	r3, [r7, #20]
 8003c58:	fa01 f303 	lsl.w	r3, r1, r3
 8003c5c:	b25b      	sxtb	r3, r3
 8003c5e:	43db      	mvns	r3, r3
 8003c60:	b25b      	sxtb	r3, r3
 8003c62:	4013      	ands	r3, r2
 8003c64:	b259      	sxtb	r1, r3
 8003c66:	7bfb      	ldrb	r3, [r7, #15]
 8003c68:	22e8      	movs	r2, #232	; 0xe8
 8003c6a:	fb02 f303 	mul.w	r3, r2, r3
 8003c6e:	68ba      	ldr	r2, [r7, #8]
 8003c70:	4413      	add	r3, r2
 8003c72:	b2ca      	uxtb	r2, r1
 8003c74:	711a      	strb	r2, [r3, #4]
 8003c76:	697b      	ldr	r3, [r7, #20]
 8003c78:	3301      	adds	r3, #1
 8003c7a:	617b      	str	r3, [r7, #20]
 8003c7c:	697b      	ldr	r3, [r7, #20]
 8003c7e:	2b07      	cmp	r3, #7
 8003c80:	ddc2      	ble.n	8003c08 <LTC681x_set_cfgr_dis+0x14>
 8003c82:	2300      	movs	r3, #0
 8003c84:	613b      	str	r3, [r7, #16]
 8003c86:	e03a      	b.n	8003cfe <LTC681x_set_cfgr_dis+0x10a>
 8003c88:	693b      	ldr	r3, [r7, #16]
 8003c8a:	3308      	adds	r3, #8
 8003c8c:	687a      	ldr	r2, [r7, #4]
 8003c8e:	4413      	add	r3, r2
 8003c90:	781b      	ldrb	r3, [r3, #0]
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d017      	beq.n	8003cc6 <LTC681x_set_cfgr_dis+0xd2>
 8003c96:	7bfb      	ldrb	r3, [r7, #15]
 8003c98:	22e8      	movs	r2, #232	; 0xe8
 8003c9a:	fb02 f303 	mul.w	r3, r2, r3
 8003c9e:	68ba      	ldr	r2, [r7, #8]
 8003ca0:	4413      	add	r3, r2
 8003ca2:	795b      	ldrb	r3, [r3, #5]
 8003ca4:	b25a      	sxtb	r2, r3
 8003ca6:	2101      	movs	r1, #1
 8003ca8:	693b      	ldr	r3, [r7, #16]
 8003caa:	fa01 f303 	lsl.w	r3, r1, r3
 8003cae:	b25b      	sxtb	r3, r3
 8003cb0:	4313      	orrs	r3, r2
 8003cb2:	b259      	sxtb	r1, r3
 8003cb4:	7bfb      	ldrb	r3, [r7, #15]
 8003cb6:	22e8      	movs	r2, #232	; 0xe8
 8003cb8:	fb02 f303 	mul.w	r3, r2, r3
 8003cbc:	68ba      	ldr	r2, [r7, #8]
 8003cbe:	4413      	add	r3, r2
 8003cc0:	b2ca      	uxtb	r2, r1
 8003cc2:	715a      	strb	r2, [r3, #5]
 8003cc4:	e018      	b.n	8003cf8 <LTC681x_set_cfgr_dis+0x104>
 8003cc6:	7bfb      	ldrb	r3, [r7, #15]
 8003cc8:	22e8      	movs	r2, #232	; 0xe8
 8003cca:	fb02 f303 	mul.w	r3, r2, r3
 8003cce:	68ba      	ldr	r2, [r7, #8]
 8003cd0:	4413      	add	r3, r2
 8003cd2:	795b      	ldrb	r3, [r3, #5]
 8003cd4:	b25a      	sxtb	r2, r3
 8003cd6:	2101      	movs	r1, #1
 8003cd8:	693b      	ldr	r3, [r7, #16]
 8003cda:	fa01 f303 	lsl.w	r3, r1, r3
 8003cde:	b25b      	sxtb	r3, r3
 8003ce0:	43db      	mvns	r3, r3
 8003ce2:	b25b      	sxtb	r3, r3
 8003ce4:	4013      	ands	r3, r2
 8003ce6:	b259      	sxtb	r1, r3
 8003ce8:	7bfb      	ldrb	r3, [r7, #15]
 8003cea:	22e8      	movs	r2, #232	; 0xe8
 8003cec:	fb02 f303 	mul.w	r3, r2, r3
 8003cf0:	68ba      	ldr	r2, [r7, #8]
 8003cf2:	4413      	add	r3, r2
 8003cf4:	b2ca      	uxtb	r2, r1
 8003cf6:	715a      	strb	r2, [r3, #5]
 8003cf8:	693b      	ldr	r3, [r7, #16]
 8003cfa:	3301      	adds	r3, #1
 8003cfc:	613b      	str	r3, [r7, #16]
 8003cfe:	693b      	ldr	r3, [r7, #16]
 8003d00:	2b03      	cmp	r3, #3
 8003d02:	ddc1      	ble.n	8003c88 <LTC681x_set_cfgr_dis+0x94>
 8003d04:	bf00      	nop
 8003d06:	bf00      	nop
 8003d08:	371c      	adds	r7, #28
 8003d0a:	46bd      	mov	sp, r7
 8003d0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d10:	4770      	bx	lr

08003d12 <LTC681x_set_cfgr_dcto>:
 8003d12:	b480      	push	{r7}
 8003d14:	b087      	sub	sp, #28
 8003d16:	af00      	add	r7, sp, #0
 8003d18:	4603      	mov	r3, r0
 8003d1a:	60b9      	str	r1, [r7, #8]
 8003d1c:	607a      	str	r2, [r7, #4]
 8003d1e:	73fb      	strb	r3, [r7, #15]
 8003d20:	2300      	movs	r3, #0
 8003d22:	617b      	str	r3, [r7, #20]
 8003d24:	e03b      	b.n	8003d9e <LTC681x_set_cfgr_dcto+0x8c>
 8003d26:	697b      	ldr	r3, [r7, #20]
 8003d28:	687a      	ldr	r2, [r7, #4]
 8003d2a:	4413      	add	r3, r2
 8003d2c:	781b      	ldrb	r3, [r3, #0]
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d018      	beq.n	8003d64 <LTC681x_set_cfgr_dcto+0x52>
 8003d32:	7bfb      	ldrb	r3, [r7, #15]
 8003d34:	22e8      	movs	r2, #232	; 0xe8
 8003d36:	fb02 f303 	mul.w	r3, r2, r3
 8003d3a:	68ba      	ldr	r2, [r7, #8]
 8003d3c:	4413      	add	r3, r2
 8003d3e:	795b      	ldrb	r3, [r3, #5]
 8003d40:	b25a      	sxtb	r2, r3
 8003d42:	697b      	ldr	r3, [r7, #20]
 8003d44:	3304      	adds	r3, #4
 8003d46:	2101      	movs	r1, #1
 8003d48:	fa01 f303 	lsl.w	r3, r1, r3
 8003d4c:	b25b      	sxtb	r3, r3
 8003d4e:	4313      	orrs	r3, r2
 8003d50:	b259      	sxtb	r1, r3
 8003d52:	7bfb      	ldrb	r3, [r7, #15]
 8003d54:	22e8      	movs	r2, #232	; 0xe8
 8003d56:	fb02 f303 	mul.w	r3, r2, r3
 8003d5a:	68ba      	ldr	r2, [r7, #8]
 8003d5c:	4413      	add	r3, r2
 8003d5e:	b2ca      	uxtb	r2, r1
 8003d60:	715a      	strb	r2, [r3, #5]
 8003d62:	e019      	b.n	8003d98 <LTC681x_set_cfgr_dcto+0x86>
 8003d64:	7bfb      	ldrb	r3, [r7, #15]
 8003d66:	22e8      	movs	r2, #232	; 0xe8
 8003d68:	fb02 f303 	mul.w	r3, r2, r3
 8003d6c:	68ba      	ldr	r2, [r7, #8]
 8003d6e:	4413      	add	r3, r2
 8003d70:	795b      	ldrb	r3, [r3, #5]
 8003d72:	b25a      	sxtb	r2, r3
 8003d74:	697b      	ldr	r3, [r7, #20]
 8003d76:	3304      	adds	r3, #4
 8003d78:	2101      	movs	r1, #1
 8003d7a:	fa01 f303 	lsl.w	r3, r1, r3
 8003d7e:	b25b      	sxtb	r3, r3
 8003d80:	43db      	mvns	r3, r3
 8003d82:	b25b      	sxtb	r3, r3
 8003d84:	4013      	ands	r3, r2
 8003d86:	b259      	sxtb	r1, r3
 8003d88:	7bfb      	ldrb	r3, [r7, #15]
 8003d8a:	22e8      	movs	r2, #232	; 0xe8
 8003d8c:	fb02 f303 	mul.w	r3, r2, r3
 8003d90:	68ba      	ldr	r2, [r7, #8]
 8003d92:	4413      	add	r3, r2
 8003d94:	b2ca      	uxtb	r2, r1
 8003d96:	715a      	strb	r2, [r3, #5]
 8003d98:	697b      	ldr	r3, [r7, #20]
 8003d9a:	3301      	adds	r3, #1
 8003d9c:	617b      	str	r3, [r7, #20]
 8003d9e:	697b      	ldr	r3, [r7, #20]
 8003da0:	2b03      	cmp	r3, #3
 8003da2:	ddc0      	ble.n	8003d26 <LTC681x_set_cfgr_dcto+0x14>
 8003da4:	bf00      	nop
 8003da6:	bf00      	nop
 8003da8:	371c      	adds	r7, #28
 8003daa:	46bd      	mov	sp, r7
 8003dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003db0:	4770      	bx	lr

08003db2 <LTC681x_set_cfgr_uv>:
 8003db2:	b480      	push	{r7}
 8003db4:	b085      	sub	sp, #20
 8003db6:	af00      	add	r7, sp, #0
 8003db8:	4603      	mov	r3, r0
 8003dba:	6039      	str	r1, [r7, #0]
 8003dbc:	71fb      	strb	r3, [r7, #7]
 8003dbe:	4613      	mov	r3, r2
 8003dc0:	80bb      	strh	r3, [r7, #4]
 8003dc2:	88bb      	ldrh	r3, [r7, #4]
 8003dc4:	091b      	lsrs	r3, r3, #4
 8003dc6:	b29b      	uxth	r3, r3
 8003dc8:	3b01      	subs	r3, #1
 8003dca:	81fb      	strh	r3, [r7, #14]
 8003dcc:	79fb      	ldrb	r3, [r7, #7]
 8003dce:	22e8      	movs	r2, #232	; 0xe8
 8003dd0:	fb02 f303 	mul.w	r3, r2, r3
 8003dd4:	683a      	ldr	r2, [r7, #0]
 8003dd6:	4413      	add	r3, r2
 8003dd8:	89fa      	ldrh	r2, [r7, #14]
 8003dda:	b2d2      	uxtb	r2, r2
 8003ddc:	705a      	strb	r2, [r3, #1]
 8003dde:	79fb      	ldrb	r3, [r7, #7]
 8003de0:	22e8      	movs	r2, #232	; 0xe8
 8003de2:	fb02 f303 	mul.w	r3, r2, r3
 8003de6:	683a      	ldr	r2, [r7, #0]
 8003de8:	4413      	add	r3, r2
 8003dea:	789a      	ldrb	r2, [r3, #2]
 8003dec:	79fb      	ldrb	r3, [r7, #7]
 8003dee:	21e8      	movs	r1, #232	; 0xe8
 8003df0:	fb01 f303 	mul.w	r3, r1, r3
 8003df4:	6839      	ldr	r1, [r7, #0]
 8003df6:	440b      	add	r3, r1
 8003df8:	f022 020f 	bic.w	r2, r2, #15
 8003dfc:	b2d2      	uxtb	r2, r2
 8003dfe:	709a      	strb	r2, [r3, #2]
 8003e00:	79fb      	ldrb	r3, [r7, #7]
 8003e02:	22e8      	movs	r2, #232	; 0xe8
 8003e04:	fb02 f303 	mul.w	r3, r2, r3
 8003e08:	683a      	ldr	r2, [r7, #0]
 8003e0a:	4413      	add	r3, r2
 8003e0c:	789b      	ldrb	r3, [r3, #2]
 8003e0e:	b25a      	sxtb	r2, r3
 8003e10:	89fb      	ldrh	r3, [r7, #14]
 8003e12:	0a1b      	lsrs	r3, r3, #8
 8003e14:	b29b      	uxth	r3, r3
 8003e16:	b25b      	sxtb	r3, r3
 8003e18:	f003 030f 	and.w	r3, r3, #15
 8003e1c:	b25b      	sxtb	r3, r3
 8003e1e:	4313      	orrs	r3, r2
 8003e20:	b259      	sxtb	r1, r3
 8003e22:	79fb      	ldrb	r3, [r7, #7]
 8003e24:	22e8      	movs	r2, #232	; 0xe8
 8003e26:	fb02 f303 	mul.w	r3, r2, r3
 8003e2a:	683a      	ldr	r2, [r7, #0]
 8003e2c:	4413      	add	r3, r2
 8003e2e:	b2ca      	uxtb	r2, r1
 8003e30:	709a      	strb	r2, [r3, #2]
 8003e32:	bf00      	nop
 8003e34:	3714      	adds	r7, #20
 8003e36:	46bd      	mov	sp, r7
 8003e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e3c:	4770      	bx	lr

08003e3e <LTC681x_set_cfgr_ov>:
 8003e3e:	b480      	push	{r7}
 8003e40:	b085      	sub	sp, #20
 8003e42:	af00      	add	r7, sp, #0
 8003e44:	4603      	mov	r3, r0
 8003e46:	6039      	str	r1, [r7, #0]
 8003e48:	71fb      	strb	r3, [r7, #7]
 8003e4a:	4613      	mov	r3, r2
 8003e4c:	80bb      	strh	r3, [r7, #4]
 8003e4e:	88bb      	ldrh	r3, [r7, #4]
 8003e50:	091b      	lsrs	r3, r3, #4
 8003e52:	81fb      	strh	r3, [r7, #14]
 8003e54:	89fb      	ldrh	r3, [r7, #14]
 8003e56:	091b      	lsrs	r3, r3, #4
 8003e58:	b299      	uxth	r1, r3
 8003e5a:	79fb      	ldrb	r3, [r7, #7]
 8003e5c:	22e8      	movs	r2, #232	; 0xe8
 8003e5e:	fb02 f303 	mul.w	r3, r2, r3
 8003e62:	683a      	ldr	r2, [r7, #0]
 8003e64:	4413      	add	r3, r2
 8003e66:	b2ca      	uxtb	r2, r1
 8003e68:	70da      	strb	r2, [r3, #3]
 8003e6a:	79fb      	ldrb	r3, [r7, #7]
 8003e6c:	22e8      	movs	r2, #232	; 0xe8
 8003e6e:	fb02 f303 	mul.w	r3, r2, r3
 8003e72:	683a      	ldr	r2, [r7, #0]
 8003e74:	4413      	add	r3, r2
 8003e76:	789a      	ldrb	r2, [r3, #2]
 8003e78:	79fb      	ldrb	r3, [r7, #7]
 8003e7a:	21e8      	movs	r1, #232	; 0xe8
 8003e7c:	fb01 f303 	mul.w	r3, r1, r3
 8003e80:	6839      	ldr	r1, [r7, #0]
 8003e82:	440b      	add	r3, r1
 8003e84:	f002 020f 	and.w	r2, r2, #15
 8003e88:	b2d2      	uxtb	r2, r2
 8003e8a:	709a      	strb	r2, [r3, #2]
 8003e8c:	79fb      	ldrb	r3, [r7, #7]
 8003e8e:	22e8      	movs	r2, #232	; 0xe8
 8003e90:	fb02 f303 	mul.w	r3, r2, r3
 8003e94:	683a      	ldr	r2, [r7, #0]
 8003e96:	4413      	add	r3, r2
 8003e98:	789b      	ldrb	r3, [r3, #2]
 8003e9a:	b25a      	sxtb	r2, r3
 8003e9c:	89fb      	ldrh	r3, [r7, #14]
 8003e9e:	011b      	lsls	r3, r3, #4
 8003ea0:	b25b      	sxtb	r3, r3
 8003ea2:	4313      	orrs	r3, r2
 8003ea4:	b259      	sxtb	r1, r3
 8003ea6:	79fb      	ldrb	r3, [r7, #7]
 8003ea8:	22e8      	movs	r2, #232	; 0xe8
 8003eaa:	fb02 f303 	mul.w	r3, r2, r3
 8003eae:	683a      	ldr	r2, [r7, #0]
 8003eb0:	4413      	add	r3, r2
 8003eb2:	b2ca      	uxtb	r2, r1
 8003eb4:	709a      	strb	r2, [r3, #2]
 8003eb6:	bf00      	nop
 8003eb8:	3714      	adds	r7, #20
 8003eba:	46bd      	mov	sp, r7
 8003ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec0:	4770      	bx	lr

08003ec2 <delay_u>:
 8003ec2:	b580      	push	{r7, lr}
 8003ec4:	b082      	sub	sp, #8
 8003ec6:	af00      	add	r7, sp, #0
 8003ec8:	4603      	mov	r3, r0
 8003eca:	80fb      	strh	r3, [r7, #6]
 8003ecc:	88fb      	ldrh	r3, [r7, #6]
 8003ece:	4618      	mov	r0, r3
 8003ed0:	f7fe fda2 	bl	8002a18 <FEB_Timer_Delay_Micro>
 8003ed4:	bf00      	nop
 8003ed6:	3708      	adds	r7, #8
 8003ed8:	46bd      	mov	sp, r7
 8003eda:	bd80      	pop	{r7, pc}

08003edc <cs_low>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b082      	sub	sp, #8
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	4603      	mov	r3, r0
 8003ee4:	71fb      	strb	r3, [r7, #7]
 8003ee6:	2200      	movs	r2, #0
 8003ee8:	2108      	movs	r1, #8
 8003eea:	4803      	ldr	r0, [pc, #12]	; (8003ef8 <cs_low+0x1c>)
 8003eec:	f002 fd18 	bl	8006920 <HAL_GPIO_WritePin>
 8003ef0:	bf00      	nop
 8003ef2:	3708      	adds	r7, #8
 8003ef4:	46bd      	mov	sp, r7
 8003ef6:	bd80      	pop	{r7, pc}
 8003ef8:	40020800 	.word	0x40020800

08003efc <cs_high>:
 8003efc:	b580      	push	{r7, lr}
 8003efe:	b082      	sub	sp, #8
 8003f00:	af00      	add	r7, sp, #0
 8003f02:	4603      	mov	r3, r0
 8003f04:	71fb      	strb	r3, [r7, #7]
 8003f06:	2201      	movs	r2, #1
 8003f08:	2108      	movs	r1, #8
 8003f0a:	4803      	ldr	r0, [pc, #12]	; (8003f18 <cs_high+0x1c>)
 8003f0c:	f002 fd08 	bl	8006920 <HAL_GPIO_WritePin>
 8003f10:	bf00      	nop
 8003f12:	3708      	adds	r7, #8
 8003f14:	46bd      	mov	sp, r7
 8003f16:	bd80      	pop	{r7, pc}
 8003f18:	40020800 	.word	0x40020800

08003f1c <spi_write_array>:
 8003f1c:	b580      	push	{r7, lr}
 8003f1e:	b082      	sub	sp, #8
 8003f20:	af00      	add	r7, sp, #0
 8003f22:	4603      	mov	r3, r0
 8003f24:	6039      	str	r1, [r7, #0]
 8003f26:	71fb      	strb	r3, [r7, #7]
 8003f28:	79fb      	ldrb	r3, [r7, #7]
 8003f2a:	b29a      	uxth	r2, r3
 8003f2c:	2364      	movs	r3, #100	; 0x64
 8003f2e:	6839      	ldr	r1, [r7, #0]
 8003f30:	4803      	ldr	r0, [pc, #12]	; (8003f40 <spi_write_array+0x24>)
 8003f32:	f003 fb80 	bl	8007636 <HAL_SPI_Transmit>
 8003f36:	bf00      	nop
 8003f38:	3708      	adds	r7, #8
 8003f3a:	46bd      	mov	sp, r7
 8003f3c:	bd80      	pop	{r7, pc}
 8003f3e:	bf00      	nop
 8003f40:	200030f0 	.word	0x200030f0

08003f44 <spi_write_read>:
 8003f44:	b580      	push	{r7, lr}
 8003f46:	b086      	sub	sp, #24
 8003f48:	af00      	add	r7, sp, #0
 8003f4a:	60f8      	str	r0, [r7, #12]
 8003f4c:	607a      	str	r2, [r7, #4]
 8003f4e:	461a      	mov	r2, r3
 8003f50:	460b      	mov	r3, r1
 8003f52:	72fb      	strb	r3, [r7, #11]
 8003f54:	4613      	mov	r3, r2
 8003f56:	72bb      	strb	r3, [r7, #10]
 8003f58:	2300      	movs	r3, #0
 8003f5a:	75fb      	strb	r3, [r7, #23]
 8003f5c:	e00a      	b.n	8003f74 <spi_write_read+0x30>
 8003f5e:	7dfb      	ldrb	r3, [r7, #23]
 8003f60:	68fa      	ldr	r2, [r7, #12]
 8003f62:	18d1      	adds	r1, r2, r3
 8003f64:	2364      	movs	r3, #100	; 0x64
 8003f66:	2201      	movs	r2, #1
 8003f68:	4810      	ldr	r0, [pc, #64]	; (8003fac <spi_write_read+0x68>)
 8003f6a:	f003 fb64 	bl	8007636 <HAL_SPI_Transmit>
 8003f6e:	7dfb      	ldrb	r3, [r7, #23]
 8003f70:	3301      	adds	r3, #1
 8003f72:	75fb      	strb	r3, [r7, #23]
 8003f74:	7dfa      	ldrb	r2, [r7, #23]
 8003f76:	7afb      	ldrb	r3, [r7, #11]
 8003f78:	429a      	cmp	r2, r3
 8003f7a:	d3f0      	bcc.n	8003f5e <spi_write_read+0x1a>
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	75bb      	strb	r3, [r7, #22]
 8003f80:	e00a      	b.n	8003f98 <spi_write_read+0x54>
 8003f82:	7dbb      	ldrb	r3, [r7, #22]
 8003f84:	687a      	ldr	r2, [r7, #4]
 8003f86:	18d1      	adds	r1, r2, r3
 8003f88:	2364      	movs	r3, #100	; 0x64
 8003f8a:	2201      	movs	r2, #1
 8003f8c:	4807      	ldr	r0, [pc, #28]	; (8003fac <spi_write_read+0x68>)
 8003f8e:	f003 fc8e 	bl	80078ae <HAL_SPI_Receive>
 8003f92:	7dbb      	ldrb	r3, [r7, #22]
 8003f94:	3301      	adds	r3, #1
 8003f96:	75bb      	strb	r3, [r7, #22]
 8003f98:	7dba      	ldrb	r2, [r7, #22]
 8003f9a:	7abb      	ldrb	r3, [r7, #10]
 8003f9c:	429a      	cmp	r2, r3
 8003f9e:	d3f0      	bcc.n	8003f82 <spi_write_read+0x3e>
 8003fa0:	bf00      	nop
 8003fa2:	bf00      	nop
 8003fa4:	3718      	adds	r7, #24
 8003fa6:	46bd      	mov	sp, r7
 8003fa8:	bd80      	pop	{r7, pc}
 8003faa:	bf00      	nop
 8003fac:	200030f0 	.word	0x200030f0

08003fb0 <spi_read_byte>:
 8003fb0:	b580      	push	{r7, lr}
 8003fb2:	b084      	sub	sp, #16
 8003fb4:	af00      	add	r7, sp, #0
 8003fb6:	4603      	mov	r3, r0
 8003fb8:	71fb      	strb	r3, [r7, #7]
 8003fba:	f107 010f 	add.w	r1, r7, #15
 8003fbe:	2364      	movs	r3, #100	; 0x64
 8003fc0:	2201      	movs	r2, #1
 8003fc2:	4804      	ldr	r0, [pc, #16]	; (8003fd4 <spi_read_byte+0x24>)
 8003fc4:	f003 fc73 	bl	80078ae <HAL_SPI_Receive>
 8003fc8:	7bfb      	ldrb	r3, [r7, #15]
 8003fca:	4618      	mov	r0, r3
 8003fcc:	3710      	adds	r7, #16
 8003fce:	46bd      	mov	sp, r7
 8003fd0:	bd80      	pop	{r7, pc}
 8003fd2:	bf00      	nop
 8003fd4:	200030f0 	.word	0x200030f0

08003fd8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003fd8:	b580      	push	{r7, lr}
 8003fda:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003fdc:	f001 f800 	bl	8004fe0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003fe0:	f000 f84a 	bl	8004078 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003fe4:	f000 fba0 	bl	8004728 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8003fe8:	f000 fb74 	bl	80046d4 <MX_USART2_UART_Init>
  MX_CAN1_Init();
 8003fec:	f000 f956 	bl	800429c <MX_CAN1_Init>
  MX_SPI1_Init();
 8003ff0:	f000 f9c0 	bl	8004374 <MX_SPI1_Init>
  MX_CAN2_Init();
 8003ff4:	f000 f988 	bl	8004308 <MX_CAN2_Init>
  MX_TIM1_Init();
 8003ff8:	f000 f9f2 	bl	80043e0 <MX_TIM1_Init>
  MX_TIM2_Init();
 8003ffc:	f000 fa9c 	bl	8004538 <MX_TIM2_Init>
  MX_TIM4_Init();
 8004000:	f000 fb1a 	bl	8004638 <MX_TIM4_Init>
  MX_ADC1_Init();
 8004004:	f000 f8a6 	bl	8004154 <MX_ADC1_Init>
  MX_ADC2_Init();
 8004008:	f000 f8f6 	bl	80041f8 <MX_ADC2_Init>
  /* USER CODE BEGIN 2 */

  FEB_BMS_AIR_Open();
 800400c:	f7fc ffde 	bl	8000fcc <FEB_BMS_AIR_Open>
  FEB_BMS_Shutdown_Startup();
 8004010:	f7fc fff4 	bl	8000ffc <FEB_BMS_Shutdown_Startup>
  FEB_BMS_State_Validate();
 8004014:	f7fd f848 	bl	80010a8 <FEB_BMS_State_Validate>

  FEB_LTC6811_Init();
 8004018:	f7fd fda2 	bl	8001b60 <FEB_LTC6811_Init>
  FEB_CAN_Init();
 800401c:	f7fd f84c 	bl	80010b8 <FEB_CAN_Init>
  FEB_CAN_Charger_Init();
 8004020:	f7fd f8b4 	bl	800118c <FEB_CAN_Charger_Init>
  FEB_Timer_Init();
 8004024:	f7fe fcee 	bl	8002a04 <FEB_Timer_Init>
  FEB_Fan_Init();
 8004028:	f7fd fbe0 	bl	80017ec <FEB_Fan_Init>

  HAL_Delay(1000);
 800402c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004030:	f001 f848 	bl	80050c4 <HAL_Delay>

    /* USER CODE BEGIN 3 */

    // *********************** Reset State ***********************
    //FEB_LTC6811_Clear_Voltage();
    FEB_LTC6811_Clear_Temperature();
 8004034:	f7fe fc34 	bl	80028a0 <FEB_LTC6811_Clear_Temperature>

    // *********************** Cell Voltage ***********************
    FEB_LTC6811_Poll_Voltage();
 8004038:	f7fd fe00 	bl	8001c3c <FEB_LTC6811_Poll_Voltage>
    FEB_LTC6811_Validate_Voltage();
 800403c:	f7fd ff78 	bl	8001f30 <FEB_LTC6811_Validate_Voltage>
    FEB_LTC6811_UART_Transmit_Voltage();
 8004040:	f7fd ffca 	bl	8001fd8 <FEB_LTC6811_UART_Transmit_Voltage>

    // *********************** Cell Temperature ***********************
    FEB_LTC6811_Poll_Temperature();
 8004044:	f7fe f87c 	bl	8002140 <FEB_LTC6811_Poll_Temperature>
    FEB_LTC6811_Validate_Temperature();
 8004048:	f7fe fb34 	bl	80026b4 <FEB_LTC6811_Validate_Temperature>
    FEB_LTC6811_UART_Transmit_Temperature();
 800404c:	f7fe fbac 	bl	80027a8 <FEB_LTC6811_UART_Transmit_Temperature>

    // *********************** IVT ***********************
    FEB_CAN_IVT_Process();
 8004050:	f7fd fa46 	bl	80014e0 <FEB_CAN_IVT_Process>

    // *********************** Cell Balance ***********************
    FEB_LTC6811_Balance_Cells();
 8004054:	f7fd feb4 	bl	8001dc0 <FEB_LTC6811_Balance_Cells>
    FEB_LTC6811_UART_Transmit_Discharge();
 8004058:	f7fd fee6 	bl	8001e28 <FEB_LTC6811_UART_Transmit_Discharge>

    // *********************** Charger ***********************
    FEB_CAN_Charger_Process(&hcan1);
 800405c:	4805      	ldr	r0, [pc, #20]	; (8004074 <main+0x9c>)
 800405e:	f7fd f959 	bl	8001314 <FEB_CAN_Charger_Process>
    //FEB_BMS_AIR_Close(); // Enable this only for charging FIX LATER

    // *********************** Fan ***********************
    FEB_Fan_Process();
 8004062:	f7fd fcd1 	bl	8001a08 <FEB_Fan_Process>

    // *********************** Inverter ***********************
    FEB_CAN_Inverter_Process();
 8004066:	f7fd fb7f 	bl	8001768 <FEB_CAN_Inverter_Process>

    if (FEB_CAN_CHARGER_STATE == 1) {
      HAL_Delay(1000);	// 1Hz
    } else {
      HAL_Delay(200);		// 5Hz
 800406a:	20c8      	movs	r0, #200	; 0xc8
 800406c:	f001 f82a 	bl	80050c4 <HAL_Delay>
    FEB_LTC6811_Clear_Temperature();
 8004070:	e7e0      	b.n	8004034 <main+0x5c>
 8004072:	bf00      	nop
 8004074:	200030a0 	.word	0x200030a0

08004078 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004078:	b580      	push	{r7, lr}
 800407a:	b094      	sub	sp, #80	; 0x50
 800407c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800407e:	f107 031c 	add.w	r3, r7, #28
 8004082:	2234      	movs	r2, #52	; 0x34
 8004084:	2100      	movs	r1, #0
 8004086:	4618      	mov	r0, r3
 8004088:	f005 fb32 	bl	80096f0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800408c:	f107 0308 	add.w	r3, r7, #8
 8004090:	2200      	movs	r2, #0
 8004092:	601a      	str	r2, [r3, #0]
 8004094:	605a      	str	r2, [r3, #4]
 8004096:	609a      	str	r2, [r3, #8]
 8004098:	60da      	str	r2, [r3, #12]
 800409a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800409c:	2300      	movs	r3, #0
 800409e:	607b      	str	r3, [r7, #4]
 80040a0:	4b2a      	ldr	r3, [pc, #168]	; (800414c <SystemClock_Config+0xd4>)
 80040a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040a4:	4a29      	ldr	r2, [pc, #164]	; (800414c <SystemClock_Config+0xd4>)
 80040a6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80040aa:	6413      	str	r3, [r2, #64]	; 0x40
 80040ac:	4b27      	ldr	r3, [pc, #156]	; (800414c <SystemClock_Config+0xd4>)
 80040ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040b0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80040b4:	607b      	str	r3, [r7, #4]
 80040b6:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 80040b8:	2300      	movs	r3, #0
 80040ba:	603b      	str	r3, [r7, #0]
 80040bc:	4b24      	ldr	r3, [pc, #144]	; (8004150 <SystemClock_Config+0xd8>)
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80040c4:	4a22      	ldr	r2, [pc, #136]	; (8004150 <SystemClock_Config+0xd8>)
 80040c6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80040ca:	6013      	str	r3, [r2, #0]
 80040cc:	4b20      	ldr	r3, [pc, #128]	; (8004150 <SystemClock_Config+0xd8>)
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80040d4:	603b      	str	r3, [r7, #0]
 80040d6:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80040d8:	2302      	movs	r3, #2
 80040da:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80040dc:	2301      	movs	r3, #1
 80040de:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80040e0:	2310      	movs	r3, #16
 80040e2:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80040e4:	2302      	movs	r3, #2
 80040e6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80040e8:	2300      	movs	r3, #0
 80040ea:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 80040ec:	2308      	movs	r3, #8
 80040ee:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 128;
 80040f0:	2380      	movs	r3, #128	; 0x80
 80040f2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80040f4:	2302      	movs	r3, #2
 80040f6:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80040f8:	2302      	movs	r3, #2
 80040fa:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 80040fc:	2302      	movs	r3, #2
 80040fe:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8004100:	f107 031c 	add.w	r3, r7, #28
 8004104:	4618      	mov	r0, r3
 8004106:	f002 ff6f 	bl	8006fe8 <HAL_RCC_OscConfig>
 800410a:	4603      	mov	r3, r0
 800410c:	2b00      	cmp	r3, #0
 800410e:	d001      	beq.n	8004114 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8004110:	f000 fb74 	bl	80047fc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8004114:	230f      	movs	r3, #15
 8004116:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8004118:	2302      	movs	r3, #2
 800411a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800411c:	2300      	movs	r3, #0
 800411e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8004120:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8004124:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8004126:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800412a:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800412c:	f107 0308 	add.w	r3, r7, #8
 8004130:	2104      	movs	r1, #4
 8004132:	4618      	mov	r0, r3
 8004134:	f002 fc0e 	bl	8006954 <HAL_RCC_ClockConfig>
 8004138:	4603      	mov	r3, r0
 800413a:	2b00      	cmp	r3, #0
 800413c:	d001      	beq.n	8004142 <SystemClock_Config+0xca>
  {
    Error_Handler();
 800413e:	f000 fb5d 	bl	80047fc <Error_Handler>
  }
}
 8004142:	bf00      	nop
 8004144:	3750      	adds	r7, #80	; 0x50
 8004146:	46bd      	mov	sp, r7
 8004148:	bd80      	pop	{r7, pc}
 800414a:	bf00      	nop
 800414c:	40023800 	.word	0x40023800
 8004150:	40007000 	.word	0x40007000

08004154 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8004154:	b580      	push	{r7, lr}
 8004156:	b084      	sub	sp, #16
 8004158:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800415a:	463b      	mov	r3, r7
 800415c:	2200      	movs	r2, #0
 800415e:	601a      	str	r2, [r3, #0]
 8004160:	605a      	str	r2, [r3, #4]
 8004162:	609a      	str	r2, [r3, #8]
 8004164:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8004166:	4b21      	ldr	r3, [pc, #132]	; (80041ec <MX_ADC1_Init+0x98>)
 8004168:	4a21      	ldr	r2, [pc, #132]	; (80041f0 <MX_ADC1_Init+0x9c>)
 800416a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 800416c:	4b1f      	ldr	r3, [pc, #124]	; (80041ec <MX_ADC1_Init+0x98>)
 800416e:	2200      	movs	r2, #0
 8004170:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8004172:	4b1e      	ldr	r3, [pc, #120]	; (80041ec <MX_ADC1_Init+0x98>)
 8004174:	2200      	movs	r2, #0
 8004176:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8004178:	4b1c      	ldr	r3, [pc, #112]	; (80041ec <MX_ADC1_Init+0x98>)
 800417a:	2200      	movs	r2, #0
 800417c:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800417e:	4b1b      	ldr	r3, [pc, #108]	; (80041ec <MX_ADC1_Init+0x98>)
 8004180:	2200      	movs	r2, #0
 8004182:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8004184:	4b19      	ldr	r3, [pc, #100]	; (80041ec <MX_ADC1_Init+0x98>)
 8004186:	2200      	movs	r2, #0
 8004188:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800418c:	4b17      	ldr	r3, [pc, #92]	; (80041ec <MX_ADC1_Init+0x98>)
 800418e:	2200      	movs	r2, #0
 8004190:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8004192:	4b16      	ldr	r3, [pc, #88]	; (80041ec <MX_ADC1_Init+0x98>)
 8004194:	4a17      	ldr	r2, [pc, #92]	; (80041f4 <MX_ADC1_Init+0xa0>)
 8004196:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8004198:	4b14      	ldr	r3, [pc, #80]	; (80041ec <MX_ADC1_Init+0x98>)
 800419a:	2200      	movs	r2, #0
 800419c:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800419e:	4b13      	ldr	r3, [pc, #76]	; (80041ec <MX_ADC1_Init+0x98>)
 80041a0:	2201      	movs	r2, #1
 80041a2:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80041a4:	4b11      	ldr	r3, [pc, #68]	; (80041ec <MX_ADC1_Init+0x98>)
 80041a6:	2200      	movs	r2, #0
 80041a8:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80041ac:	4b0f      	ldr	r3, [pc, #60]	; (80041ec <MX_ADC1_Init+0x98>)
 80041ae:	2201      	movs	r2, #1
 80041b0:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80041b2:	480e      	ldr	r0, [pc, #56]	; (80041ec <MX_ADC1_Init+0x98>)
 80041b4:	f000 ffaa 	bl	800510c <HAL_ADC_Init>
 80041b8:	4603      	mov	r3, r0
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d001      	beq.n	80041c2 <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 80041be:	f000 fb1d 	bl	80047fc <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 80041c2:	2308      	movs	r3, #8
 80041c4:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80041c6:	2301      	movs	r3, #1
 80041c8:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80041ca:	2300      	movs	r3, #0
 80041cc:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80041ce:	463b      	mov	r3, r7
 80041d0:	4619      	mov	r1, r3
 80041d2:	4806      	ldr	r0, [pc, #24]	; (80041ec <MX_ADC1_Init+0x98>)
 80041d4:	f001 f948 	bl	8005468 <HAL_ADC_ConfigChannel>
 80041d8:	4603      	mov	r3, r0
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d001      	beq.n	80041e2 <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 80041de:	f000 fb0d 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80041e2:	bf00      	nop
 80041e4:	3710      	adds	r7, #16
 80041e6:	46bd      	mov	sp, r7
 80041e8:	bd80      	pop	{r7, pc}
 80041ea:	bf00      	nop
 80041ec:	20003010 	.word	0x20003010
 80041f0:	40012000 	.word	0x40012000
 80041f4:	0f000001 	.word	0x0f000001

080041f8 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 80041f8:	b580      	push	{r7, lr}
 80041fa:	b084      	sub	sp, #16
 80041fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80041fe:	463b      	mov	r3, r7
 8004200:	2200      	movs	r2, #0
 8004202:	601a      	str	r2, [r3, #0]
 8004204:	605a      	str	r2, [r3, #4]
 8004206:	609a      	str	r2, [r3, #8]
 8004208:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 800420a:	4b21      	ldr	r3, [pc, #132]	; (8004290 <MX_ADC2_Init+0x98>)
 800420c:	4a21      	ldr	r2, [pc, #132]	; (8004294 <MX_ADC2_Init+0x9c>)
 800420e:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8004210:	4b1f      	ldr	r3, [pc, #124]	; (8004290 <MX_ADC2_Init+0x98>)
 8004212:	2200      	movs	r2, #0
 8004214:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8004216:	4b1e      	ldr	r3, [pc, #120]	; (8004290 <MX_ADC2_Init+0x98>)
 8004218:	2200      	movs	r2, #0
 800421a:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 800421c:	4b1c      	ldr	r3, [pc, #112]	; (8004290 <MX_ADC2_Init+0x98>)
 800421e:	2200      	movs	r2, #0
 8004220:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8004222:	4b1b      	ldr	r3, [pc, #108]	; (8004290 <MX_ADC2_Init+0x98>)
 8004224:	2200      	movs	r2, #0
 8004226:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8004228:	4b19      	ldr	r3, [pc, #100]	; (8004290 <MX_ADC2_Init+0x98>)
 800422a:	2200      	movs	r2, #0
 800422c:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8004230:	4b17      	ldr	r3, [pc, #92]	; (8004290 <MX_ADC2_Init+0x98>)
 8004232:	2200      	movs	r2, #0
 8004234:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8004236:	4b16      	ldr	r3, [pc, #88]	; (8004290 <MX_ADC2_Init+0x98>)
 8004238:	4a17      	ldr	r2, [pc, #92]	; (8004298 <MX_ADC2_Init+0xa0>)
 800423a:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800423c:	4b14      	ldr	r3, [pc, #80]	; (8004290 <MX_ADC2_Init+0x98>)
 800423e:	2200      	movs	r2, #0
 8004240:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 8004242:	4b13      	ldr	r3, [pc, #76]	; (8004290 <MX_ADC2_Init+0x98>)
 8004244:	2201      	movs	r2, #1
 8004246:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8004248:	4b11      	ldr	r3, [pc, #68]	; (8004290 <MX_ADC2_Init+0x98>)
 800424a:	2200      	movs	r2, #0
 800424c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8004250:	4b0f      	ldr	r3, [pc, #60]	; (8004290 <MX_ADC2_Init+0x98>)
 8004252:	2201      	movs	r2, #1
 8004254:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8004256:	480e      	ldr	r0, [pc, #56]	; (8004290 <MX_ADC2_Init+0x98>)
 8004258:	f000 ff58 	bl	800510c <HAL_ADC_Init>
 800425c:	4603      	mov	r3, r0
 800425e:	2b00      	cmp	r3, #0
 8004260:	d001      	beq.n	8004266 <MX_ADC2_Init+0x6e>
  {
    Error_Handler();
 8004262:	f000 facb 	bl	80047fc <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8004266:	2309      	movs	r3, #9
 8004268:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800426a:	2301      	movs	r3, #1
 800426c:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800426e:	2300      	movs	r3, #0
 8004270:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8004272:	463b      	mov	r3, r7
 8004274:	4619      	mov	r1, r3
 8004276:	4806      	ldr	r0, [pc, #24]	; (8004290 <MX_ADC2_Init+0x98>)
 8004278:	f001 f8f6 	bl	8005468 <HAL_ADC_ConfigChannel>
 800427c:	4603      	mov	r3, r0
 800427e:	2b00      	cmp	r3, #0
 8004280:	d001      	beq.n	8004286 <MX_ADC2_Init+0x8e>
  {
    Error_Handler();
 8004282:	f000 fabb 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8004286:	bf00      	nop
 8004288:	3710      	adds	r7, #16
 800428a:	46bd      	mov	sp, r7
 800428c:	bd80      	pop	{r7, pc}
 800428e:	bf00      	nop
 8004290:	20003058 	.word	0x20003058
 8004294:	40012100 	.word	0x40012100
 8004298:	0f000001 	.word	0x0f000001

0800429c <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 800429c:	b580      	push	{r7, lr}
 800429e:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 80042a0:	4b17      	ldr	r3, [pc, #92]	; (8004300 <MX_CAN1_Init+0x64>)
 80042a2:	4a18      	ldr	r2, [pc, #96]	; (8004304 <MX_CAN1_Init+0x68>)
 80042a4:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 16;
 80042a6:	4b16      	ldr	r3, [pc, #88]	; (8004300 <MX_CAN1_Init+0x64>)
 80042a8:	2210      	movs	r2, #16
 80042aa:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 80042ac:	4b14      	ldr	r3, [pc, #80]	; (8004300 <MX_CAN1_Init+0x64>)
 80042ae:	2200      	movs	r2, #0
 80042b0:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 80042b2:	4b13      	ldr	r3, [pc, #76]	; (8004300 <MX_CAN1_Init+0x64>)
 80042b4:	2200      	movs	r2, #0
 80042b6:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 80042b8:	4b11      	ldr	r3, [pc, #68]	; (8004300 <MX_CAN1_Init+0x64>)
 80042ba:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80042be:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 80042c0:	4b0f      	ldr	r3, [pc, #60]	; (8004300 <MX_CAN1_Init+0x64>)
 80042c2:	2200      	movs	r2, #0
 80042c4:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 80042c6:	4b0e      	ldr	r3, [pc, #56]	; (8004300 <MX_CAN1_Init+0x64>)
 80042c8:	2200      	movs	r2, #0
 80042ca:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 80042cc:	4b0c      	ldr	r3, [pc, #48]	; (8004300 <MX_CAN1_Init+0x64>)
 80042ce:	2200      	movs	r2, #0
 80042d0:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 80042d2:	4b0b      	ldr	r3, [pc, #44]	; (8004300 <MX_CAN1_Init+0x64>)
 80042d4:	2200      	movs	r2, #0
 80042d6:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 80042d8:	4b09      	ldr	r3, [pc, #36]	; (8004300 <MX_CAN1_Init+0x64>)
 80042da:	2200      	movs	r2, #0
 80042dc:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 80042de:	4b08      	ldr	r3, [pc, #32]	; (8004300 <MX_CAN1_Init+0x64>)
 80042e0:	2200      	movs	r2, #0
 80042e2:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 80042e4:	4b06      	ldr	r3, [pc, #24]	; (8004300 <MX_CAN1_Init+0x64>)
 80042e6:	2200      	movs	r2, #0
 80042e8:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 80042ea:	4805      	ldr	r0, [pc, #20]	; (8004300 <MX_CAN1_Init+0x64>)
 80042ec:	f001 faea 	bl	80058c4 <HAL_CAN_Init>
 80042f0:	4603      	mov	r3, r0
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d001      	beq.n	80042fa <MX_CAN1_Init+0x5e>
  {
    Error_Handler();
 80042f6:	f000 fa81 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 80042fa:	bf00      	nop
 80042fc:	bd80      	pop	{r7, pc}
 80042fe:	bf00      	nop
 8004300:	200030a0 	.word	0x200030a0
 8004304:	40006400 	.word	0x40006400

08004308 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 8004308:	b580      	push	{r7, lr}
 800430a:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 800430c:	4b17      	ldr	r3, [pc, #92]	; (800436c <MX_CAN2_Init+0x64>)
 800430e:	4a18      	ldr	r2, [pc, #96]	; (8004370 <MX_CAN2_Init+0x68>)
 8004310:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 16;
 8004312:	4b16      	ldr	r3, [pc, #88]	; (800436c <MX_CAN2_Init+0x64>)
 8004314:	2210      	movs	r2, #16
 8004316:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 8004318:	4b14      	ldr	r3, [pc, #80]	; (800436c <MX_CAN2_Init+0x64>)
 800431a:	2200      	movs	r2, #0
 800431c:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 800431e:	4b13      	ldr	r3, [pc, #76]	; (800436c <MX_CAN2_Init+0x64>)
 8004320:	2200      	movs	r2, #0
 8004322:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_2TQ;
 8004324:	4b11      	ldr	r3, [pc, #68]	; (800436c <MX_CAN2_Init+0x64>)
 8004326:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800432a:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_1TQ;
 800432c:	4b0f      	ldr	r3, [pc, #60]	; (800436c <MX_CAN2_Init+0x64>)
 800432e:	2200      	movs	r2, #0
 8004330:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8004332:	4b0e      	ldr	r3, [pc, #56]	; (800436c <MX_CAN2_Init+0x64>)
 8004334:	2200      	movs	r2, #0
 8004336:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = DISABLE;
 8004338:	4b0c      	ldr	r3, [pc, #48]	; (800436c <MX_CAN2_Init+0x64>)
 800433a:	2200      	movs	r2, #0
 800433c:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 800433e:	4b0b      	ldr	r3, [pc, #44]	; (800436c <MX_CAN2_Init+0x64>)
 8004340:	2200      	movs	r2, #0
 8004342:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 8004344:	4b09      	ldr	r3, [pc, #36]	; (800436c <MX_CAN2_Init+0x64>)
 8004346:	2200      	movs	r2, #0
 8004348:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 800434a:	4b08      	ldr	r3, [pc, #32]	; (800436c <MX_CAN2_Init+0x64>)
 800434c:	2200      	movs	r2, #0
 800434e:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 8004350:	4b06      	ldr	r3, [pc, #24]	; (800436c <MX_CAN2_Init+0x64>)
 8004352:	2200      	movs	r2, #0
 8004354:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 8004356:	4805      	ldr	r0, [pc, #20]	; (800436c <MX_CAN2_Init+0x64>)
 8004358:	f001 fab4 	bl	80058c4 <HAL_CAN_Init>
 800435c:	4603      	mov	r3, r0
 800435e:	2b00      	cmp	r3, #0
 8004360:	d001      	beq.n	8004366 <MX_CAN2_Init+0x5e>
  {
    Error_Handler();
 8004362:	f000 fa4b 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN CAN2_Init 2 */

  /* USER CODE END CAN2_Init 2 */

}
 8004366:	bf00      	nop
 8004368:	bd80      	pop	{r7, pc}
 800436a:	bf00      	nop
 800436c:	200030c8 	.word	0x200030c8
 8004370:	40006800 	.word	0x40006800

08004374 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8004374:	b580      	push	{r7, lr}
 8004376:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8004378:	4b17      	ldr	r3, [pc, #92]	; (80043d8 <MX_SPI1_Init+0x64>)
 800437a:	4a18      	ldr	r2, [pc, #96]	; (80043dc <MX_SPI1_Init+0x68>)
 800437c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800437e:	4b16      	ldr	r3, [pc, #88]	; (80043d8 <MX_SPI1_Init+0x64>)
 8004380:	f44f 7282 	mov.w	r2, #260	; 0x104
 8004384:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8004386:	4b14      	ldr	r3, [pc, #80]	; (80043d8 <MX_SPI1_Init+0x64>)
 8004388:	2200      	movs	r2, #0
 800438a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800438c:	4b12      	ldr	r3, [pc, #72]	; (80043d8 <MX_SPI1_Init+0x64>)
 800438e:	2200      	movs	r2, #0
 8004390:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8004392:	4b11      	ldr	r3, [pc, #68]	; (80043d8 <MX_SPI1_Init+0x64>)
 8004394:	2200      	movs	r2, #0
 8004396:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8004398:	4b0f      	ldr	r3, [pc, #60]	; (80043d8 <MX_SPI1_Init+0x64>)
 800439a:	2200      	movs	r2, #0
 800439c:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800439e:	4b0e      	ldr	r3, [pc, #56]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043a0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80043a4:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 80043a6:	4b0c      	ldr	r3, [pc, #48]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043a8:	2228      	movs	r2, #40	; 0x28
 80043aa:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80043ac:	4b0a      	ldr	r3, [pc, #40]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043ae:	2200      	movs	r2, #0
 80043b0:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80043b2:	4b09      	ldr	r3, [pc, #36]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043b4:	2200      	movs	r2, #0
 80043b6:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80043b8:	4b07      	ldr	r3, [pc, #28]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043ba:	2200      	movs	r2, #0
 80043bc:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 80043be:	4b06      	ldr	r3, [pc, #24]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043c0:	220a      	movs	r2, #10
 80043c2:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80043c4:	4804      	ldr	r0, [pc, #16]	; (80043d8 <MX_SPI1_Init+0x64>)
 80043c6:	f003 f8ad 	bl	8007524 <HAL_SPI_Init>
 80043ca:	4603      	mov	r3, r0
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d001      	beq.n	80043d4 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 80043d0:	f000 fa14 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80043d4:	bf00      	nop
 80043d6:	bd80      	pop	{r7, pc}
 80043d8:	200030f0 	.word	0x200030f0
 80043dc:	40013000 	.word	0x40013000

080043e0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80043e0:	b580      	push	{r7, lr}
 80043e2:	b096      	sub	sp, #88	; 0x58
 80043e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80043e6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80043ea:	2200      	movs	r2, #0
 80043ec:	601a      	str	r2, [r3, #0]
 80043ee:	605a      	str	r2, [r3, #4]
 80043f0:	609a      	str	r2, [r3, #8]
 80043f2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80043f4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80043f8:	2200      	movs	r2, #0
 80043fa:	601a      	str	r2, [r3, #0]
 80043fc:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80043fe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004402:	2200      	movs	r2, #0
 8004404:	601a      	str	r2, [r3, #0]
 8004406:	605a      	str	r2, [r3, #4]
 8004408:	609a      	str	r2, [r3, #8]
 800440a:	60da      	str	r2, [r3, #12]
 800440c:	611a      	str	r2, [r3, #16]
 800440e:	615a      	str	r2, [r3, #20]
 8004410:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8004412:	1d3b      	adds	r3, r7, #4
 8004414:	2220      	movs	r2, #32
 8004416:	2100      	movs	r1, #0
 8004418:	4618      	mov	r0, r3
 800441a:	f005 f969 	bl	80096f0 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800441e:	4b44      	ldr	r3, [pc, #272]	; (8004530 <MX_TIM1_Init+0x150>)
 8004420:	4a44      	ldr	r2, [pc, #272]	; (8004534 <MX_TIM1_Init+0x154>)
 8004422:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8004424:	4b42      	ldr	r3, [pc, #264]	; (8004530 <MX_TIM1_Init+0x150>)
 8004426:	2200      	movs	r2, #0
 8004428:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800442a:	4b41      	ldr	r3, [pc, #260]	; (8004530 <MX_TIM1_Init+0x150>)
 800442c:	2200      	movs	r2, #0
 800442e:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 255;
 8004430:	4b3f      	ldr	r3, [pc, #252]	; (8004530 <MX_TIM1_Init+0x150>)
 8004432:	22ff      	movs	r2, #255	; 0xff
 8004434:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004436:	4b3e      	ldr	r3, [pc, #248]	; (8004530 <MX_TIM1_Init+0x150>)
 8004438:	2200      	movs	r2, #0
 800443a:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800443c:	4b3c      	ldr	r3, [pc, #240]	; (8004530 <MX_TIM1_Init+0x150>)
 800443e:	2200      	movs	r2, #0
 8004440:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004442:	4b3b      	ldr	r3, [pc, #236]	; (8004530 <MX_TIM1_Init+0x150>)
 8004444:	2200      	movs	r2, #0
 8004446:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8004448:	4839      	ldr	r0, [pc, #228]	; (8004530 <MX_TIM1_Init+0x150>)
 800444a:	f003 fe13 	bl	8008074 <HAL_TIM_Base_Init>
 800444e:	4603      	mov	r3, r0
 8004450:	2b00      	cmp	r3, #0
 8004452:	d001      	beq.n	8004458 <MX_TIM1_Init+0x78>
  {
    Error_Handler();
 8004454:	f000 f9d2 	bl	80047fc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004458:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800445c:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800445e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8004462:	4619      	mov	r1, r3
 8004464:	4832      	ldr	r0, [pc, #200]	; (8004530 <MX_TIM1_Init+0x150>)
 8004466:	f004 f8a1 	bl	80085ac <HAL_TIM_ConfigClockSource>
 800446a:	4603      	mov	r3, r0
 800446c:	2b00      	cmp	r3, #0
 800446e:	d001      	beq.n	8004474 <MX_TIM1_Init+0x94>
  {
    Error_Handler();
 8004470:	f000 f9c4 	bl	80047fc <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8004474:	482e      	ldr	r0, [pc, #184]	; (8004530 <MX_TIM1_Init+0x150>)
 8004476:	f003 feb5 	bl	80081e4 <HAL_TIM_PWM_Init>
 800447a:	4603      	mov	r3, r0
 800447c:	2b00      	cmp	r3, #0
 800447e:	d001      	beq.n	8004484 <MX_TIM1_Init+0xa4>
  {
    Error_Handler();
 8004480:	f000 f9bc 	bl	80047fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004484:	2300      	movs	r3, #0
 8004486:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004488:	2300      	movs	r3, #0
 800448a:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800448c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8004490:	4619      	mov	r1, r3
 8004492:	4827      	ldr	r0, [pc, #156]	; (8004530 <MX_TIM1_Init+0x150>)
 8004494:	f004 fc62 	bl	8008d5c <HAL_TIMEx_MasterConfigSynchronization>
 8004498:	4603      	mov	r3, r0
 800449a:	2b00      	cmp	r3, #0
 800449c:	d001      	beq.n	80044a2 <MX_TIM1_Init+0xc2>
  {
    Error_Handler();
 800449e:	f000 f9ad 	bl	80047fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80044a2:	2360      	movs	r3, #96	; 0x60
 80044a4:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 80044a6:	2300      	movs	r3, #0
 80044a8:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80044aa:	2300      	movs	r3, #0
 80044ac:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80044ae:	2300      	movs	r3, #0
 80044b0:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80044b2:	2300      	movs	r3, #0
 80044b4:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80044b6:	2300      	movs	r3, #0
 80044b8:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80044ba:	2300      	movs	r3, #0
 80044bc:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80044be:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80044c2:	2200      	movs	r2, #0
 80044c4:	4619      	mov	r1, r3
 80044c6:	481a      	ldr	r0, [pc, #104]	; (8004530 <MX_TIM1_Init+0x150>)
 80044c8:	f003 ffae 	bl	8008428 <HAL_TIM_PWM_ConfigChannel>
 80044cc:	4603      	mov	r3, r0
 80044ce:	2b00      	cmp	r3, #0
 80044d0:	d001      	beq.n	80044d6 <MX_TIM1_Init+0xf6>
  {
    Error_Handler();
 80044d2:	f000 f993 	bl	80047fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80044d6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80044da:	2204      	movs	r2, #4
 80044dc:	4619      	mov	r1, r3
 80044de:	4814      	ldr	r0, [pc, #80]	; (8004530 <MX_TIM1_Init+0x150>)
 80044e0:	f003 ffa2 	bl	8008428 <HAL_TIM_PWM_ConfigChannel>
 80044e4:	4603      	mov	r3, r0
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d001      	beq.n	80044ee <MX_TIM1_Init+0x10e>
  {
    Error_Handler();
 80044ea:	f000 f987 	bl	80047fc <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80044ee:	2300      	movs	r3, #0
 80044f0:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80044f2:	2300      	movs	r3, #0
 80044f4:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80044f6:	2300      	movs	r3, #0
 80044f8:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80044fa:	2300      	movs	r3, #0
 80044fc:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80044fe:	2300      	movs	r3, #0
 8004500:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8004502:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004506:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8004508:	2300      	movs	r3, #0
 800450a:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800450c:	1d3b      	adds	r3, r7, #4
 800450e:	4619      	mov	r1, r3
 8004510:	4807      	ldr	r0, [pc, #28]	; (8004530 <MX_TIM1_Init+0x150>)
 8004512:	f004 fc9f 	bl	8008e54 <HAL_TIMEx_ConfigBreakDeadTime>
 8004516:	4603      	mov	r3, r0
 8004518:	2b00      	cmp	r3, #0
 800451a:	d001      	beq.n	8004520 <MX_TIM1_Init+0x140>
  {
    Error_Handler();
 800451c:	f000 f96e 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8004520:	4803      	ldr	r0, [pc, #12]	; (8004530 <MX_TIM1_Init+0x150>)
 8004522:	f000 fb63 	bl	8004bec <HAL_TIM_MspPostInit>

}
 8004526:	bf00      	nop
 8004528:	3758      	adds	r7, #88	; 0x58
 800452a:	46bd      	mov	sp, r7
 800452c:	bd80      	pop	{r7, pc}
 800452e:	bf00      	nop
 8004530:	20003148 	.word	0x20003148
 8004534:	40010000 	.word	0x40010000

08004538 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8004538:	b580      	push	{r7, lr}
 800453a:	b08e      	sub	sp, #56	; 0x38
 800453c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800453e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8004542:	2200      	movs	r2, #0
 8004544:	601a      	str	r2, [r3, #0]
 8004546:	605a      	str	r2, [r3, #4]
 8004548:	609a      	str	r2, [r3, #8]
 800454a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800454c:	f107 0320 	add.w	r3, r7, #32
 8004550:	2200      	movs	r2, #0
 8004552:	601a      	str	r2, [r3, #0]
 8004554:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8004556:	1d3b      	adds	r3, r7, #4
 8004558:	2200      	movs	r2, #0
 800455a:	601a      	str	r2, [r3, #0]
 800455c:	605a      	str	r2, [r3, #4]
 800455e:	609a      	str	r2, [r3, #8]
 8004560:	60da      	str	r2, [r3, #12]
 8004562:	611a      	str	r2, [r3, #16]
 8004564:	615a      	str	r2, [r3, #20]
 8004566:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004568:	4b32      	ldr	r3, [pc, #200]	; (8004634 <MX_TIM2_Init+0xfc>)
 800456a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800456e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8004570:	4b30      	ldr	r3, [pc, #192]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004572:	2200      	movs	r2, #0
 8004574:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004576:	4b2f      	ldr	r3, [pc, #188]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004578:	2200      	movs	r2, #0
 800457a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 255;
 800457c:	4b2d      	ldr	r3, [pc, #180]	; (8004634 <MX_TIM2_Init+0xfc>)
 800457e:	22ff      	movs	r2, #255	; 0xff
 8004580:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004582:	4b2c      	ldr	r3, [pc, #176]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004584:	2200      	movs	r2, #0
 8004586:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004588:	4b2a      	ldr	r3, [pc, #168]	; (8004634 <MX_TIM2_Init+0xfc>)
 800458a:	2200      	movs	r2, #0
 800458c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800458e:	4829      	ldr	r0, [pc, #164]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004590:	f003 fd70 	bl	8008074 <HAL_TIM_Base_Init>
 8004594:	4603      	mov	r3, r0
 8004596:	2b00      	cmp	r3, #0
 8004598:	d001      	beq.n	800459e <MX_TIM2_Init+0x66>
  {
    Error_Handler();
 800459a:	f000 f92f 	bl	80047fc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800459e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80045a2:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80045a4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80045a8:	4619      	mov	r1, r3
 80045aa:	4822      	ldr	r0, [pc, #136]	; (8004634 <MX_TIM2_Init+0xfc>)
 80045ac:	f003 fffe 	bl	80085ac <HAL_TIM_ConfigClockSource>
 80045b0:	4603      	mov	r3, r0
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	d001      	beq.n	80045ba <MX_TIM2_Init+0x82>
  {
    Error_Handler();
 80045b6:	f000 f921 	bl	80047fc <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80045ba:	481e      	ldr	r0, [pc, #120]	; (8004634 <MX_TIM2_Init+0xfc>)
 80045bc:	f003 fe12 	bl	80081e4 <HAL_TIM_PWM_Init>
 80045c0:	4603      	mov	r3, r0
 80045c2:	2b00      	cmp	r3, #0
 80045c4:	d001      	beq.n	80045ca <MX_TIM2_Init+0x92>
  {
    Error_Handler();
 80045c6:	f000 f919 	bl	80047fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80045ca:	2300      	movs	r3, #0
 80045cc:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80045ce:	2300      	movs	r3, #0
 80045d0:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80045d2:	f107 0320 	add.w	r3, r7, #32
 80045d6:	4619      	mov	r1, r3
 80045d8:	4816      	ldr	r0, [pc, #88]	; (8004634 <MX_TIM2_Init+0xfc>)
 80045da:	f004 fbbf 	bl	8008d5c <HAL_TIMEx_MasterConfigSynchronization>
 80045de:	4603      	mov	r3, r0
 80045e0:	2b00      	cmp	r3, #0
 80045e2:	d001      	beq.n	80045e8 <MX_TIM2_Init+0xb0>
  {
    Error_Handler();
 80045e4:	f000 f90a 	bl	80047fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80045e8:	2360      	movs	r3, #96	; 0x60
 80045ea:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80045ec:	2300      	movs	r3, #0
 80045ee:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80045f0:	2300      	movs	r3, #0
 80045f2:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80045f4:	2300      	movs	r3, #0
 80045f6:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80045f8:	1d3b      	adds	r3, r7, #4
 80045fa:	2200      	movs	r2, #0
 80045fc:	4619      	mov	r1, r3
 80045fe:	480d      	ldr	r0, [pc, #52]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004600:	f003 ff12 	bl	8008428 <HAL_TIM_PWM_ConfigChannel>
 8004604:	4603      	mov	r3, r0
 8004606:	2b00      	cmp	r3, #0
 8004608:	d001      	beq.n	800460e <MX_TIM2_Init+0xd6>
  {
    Error_Handler();
 800460a:	f000 f8f7 	bl	80047fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800460e:	1d3b      	adds	r3, r7, #4
 8004610:	2204      	movs	r2, #4
 8004612:	4619      	mov	r1, r3
 8004614:	4807      	ldr	r0, [pc, #28]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004616:	f003 ff07 	bl	8008428 <HAL_TIM_PWM_ConfigChannel>
 800461a:	4603      	mov	r3, r0
 800461c:	2b00      	cmp	r3, #0
 800461e:	d001      	beq.n	8004624 <MX_TIM2_Init+0xec>
  {
    Error_Handler();
 8004620:	f000 f8ec 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8004624:	4803      	ldr	r0, [pc, #12]	; (8004634 <MX_TIM2_Init+0xfc>)
 8004626:	f000 fae1 	bl	8004bec <HAL_TIM_MspPostInit>

}
 800462a:	bf00      	nop
 800462c:	3738      	adds	r7, #56	; 0x38
 800462e:	46bd      	mov	sp, r7
 8004630:	bd80      	pop	{r7, pc}
 8004632:	bf00      	nop
 8004634:	20003190 	.word	0x20003190

08004638 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8004638:	b580      	push	{r7, lr}
 800463a:	b086      	sub	sp, #24
 800463c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800463e:	f107 0308 	add.w	r3, r7, #8
 8004642:	2200      	movs	r2, #0
 8004644:	601a      	str	r2, [r3, #0]
 8004646:	605a      	str	r2, [r3, #4]
 8004648:	609a      	str	r2, [r3, #8]
 800464a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800464c:	463b      	mov	r3, r7
 800464e:	2200      	movs	r2, #0
 8004650:	601a      	str	r2, [r3, #0]
 8004652:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8004654:	4b1d      	ldr	r3, [pc, #116]	; (80046cc <MX_TIM4_Init+0x94>)
 8004656:	4a1e      	ldr	r2, [pc, #120]	; (80046d0 <MX_TIM4_Init+0x98>)
 8004658:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 63;
 800465a:	4b1c      	ldr	r3, [pc, #112]	; (80046cc <MX_TIM4_Init+0x94>)
 800465c:	223f      	movs	r2, #63	; 0x3f
 800465e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004660:	4b1a      	ldr	r3, [pc, #104]	; (80046cc <MX_TIM4_Init+0x94>)
 8004662:	2200      	movs	r2, #0
 8004664:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8004666:	4b19      	ldr	r3, [pc, #100]	; (80046cc <MX_TIM4_Init+0x94>)
 8004668:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800466c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800466e:	4b17      	ldr	r3, [pc, #92]	; (80046cc <MX_TIM4_Init+0x94>)
 8004670:	2200      	movs	r2, #0
 8004672:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004674:	4b15      	ldr	r3, [pc, #84]	; (80046cc <MX_TIM4_Init+0x94>)
 8004676:	2200      	movs	r2, #0
 8004678:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800467a:	4814      	ldr	r0, [pc, #80]	; (80046cc <MX_TIM4_Init+0x94>)
 800467c:	f003 fcfa 	bl	8008074 <HAL_TIM_Base_Init>
 8004680:	4603      	mov	r3, r0
 8004682:	2b00      	cmp	r3, #0
 8004684:	d001      	beq.n	800468a <MX_TIM4_Init+0x52>
  {
    Error_Handler();
 8004686:	f000 f8b9 	bl	80047fc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800468a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800468e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8004690:	f107 0308 	add.w	r3, r7, #8
 8004694:	4619      	mov	r1, r3
 8004696:	480d      	ldr	r0, [pc, #52]	; (80046cc <MX_TIM4_Init+0x94>)
 8004698:	f003 ff88 	bl	80085ac <HAL_TIM_ConfigClockSource>
 800469c:	4603      	mov	r3, r0
 800469e:	2b00      	cmp	r3, #0
 80046a0:	d001      	beq.n	80046a6 <MX_TIM4_Init+0x6e>
  {
    Error_Handler();
 80046a2:	f000 f8ab 	bl	80047fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80046a6:	2300      	movs	r3, #0
 80046a8:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80046aa:	2300      	movs	r3, #0
 80046ac:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80046ae:	463b      	mov	r3, r7
 80046b0:	4619      	mov	r1, r3
 80046b2:	4806      	ldr	r0, [pc, #24]	; (80046cc <MX_TIM4_Init+0x94>)
 80046b4:	f004 fb52 	bl	8008d5c <HAL_TIMEx_MasterConfigSynchronization>
 80046b8:	4603      	mov	r3, r0
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	d001      	beq.n	80046c2 <MX_TIM4_Init+0x8a>
  {
    Error_Handler();
 80046be:	f000 f89d 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80046c2:	bf00      	nop
 80046c4:	3718      	adds	r7, #24
 80046c6:	46bd      	mov	sp, r7
 80046c8:	bd80      	pop	{r7, pc}
 80046ca:	bf00      	nop
 80046cc:	200031d8 	.word	0x200031d8
 80046d0:	40000800 	.word	0x40000800

080046d4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80046d4:	b580      	push	{r7, lr}
 80046d6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80046d8:	4b11      	ldr	r3, [pc, #68]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 80046da:	4a12      	ldr	r2, [pc, #72]	; (8004724 <MX_USART2_UART_Init+0x50>)
 80046dc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80046de:	4b10      	ldr	r3, [pc, #64]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 80046e0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80046e4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80046e6:	4b0e      	ldr	r3, [pc, #56]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 80046e8:	2200      	movs	r2, #0
 80046ea:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80046ec:	4b0c      	ldr	r3, [pc, #48]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 80046ee:	2200      	movs	r2, #0
 80046f0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 80046f2:	4b0b      	ldr	r3, [pc, #44]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 80046f4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80046f8:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX;
 80046fa:	4b09      	ldr	r3, [pc, #36]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 80046fc:	2208      	movs	r2, #8
 80046fe:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004700:	4b07      	ldr	r3, [pc, #28]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 8004702:	2200      	movs	r2, #0
 8004704:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8004706:	4b06      	ldr	r3, [pc, #24]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 8004708:	2200      	movs	r2, #0
 800470a:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800470c:	4804      	ldr	r0, [pc, #16]	; (8004720 <MX_USART2_UART_Init+0x4c>)
 800470e:	f004 fbf3 	bl	8008ef8 <HAL_UART_Init>
 8004712:	4603      	mov	r3, r0
 8004714:	2b00      	cmp	r3, #0
 8004716:	d001      	beq.n	800471c <MX_USART2_UART_Init+0x48>
  {
    Error_Handler();
 8004718:	f000 f870 	bl	80047fc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800471c:	bf00      	nop
 800471e:	bd80      	pop	{r7, pc}
 8004720:	20003220 	.word	0x20003220
 8004724:	40004400 	.word	0x40004400

08004728 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8004728:	b580      	push	{r7, lr}
 800472a:	b088      	sub	sp, #32
 800472c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800472e:	f107 030c 	add.w	r3, r7, #12
 8004732:	2200      	movs	r2, #0
 8004734:	601a      	str	r2, [r3, #0]
 8004736:	605a      	str	r2, [r3, #4]
 8004738:	609a      	str	r2, [r3, #8]
 800473a:	60da      	str	r2, [r3, #12]
 800473c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800473e:	2300      	movs	r3, #0
 8004740:	60bb      	str	r3, [r7, #8]
 8004742:	4b2b      	ldr	r3, [pc, #172]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004744:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004746:	4a2a      	ldr	r2, [pc, #168]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004748:	f043 0304 	orr.w	r3, r3, #4
 800474c:	6313      	str	r3, [r2, #48]	; 0x30
 800474e:	4b28      	ldr	r3, [pc, #160]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004750:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004752:	f003 0304 	and.w	r3, r3, #4
 8004756:	60bb      	str	r3, [r7, #8]
 8004758:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800475a:	2300      	movs	r3, #0
 800475c:	607b      	str	r3, [r7, #4]
 800475e:	4b24      	ldr	r3, [pc, #144]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004760:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004762:	4a23      	ldr	r2, [pc, #140]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004764:	f043 0301 	orr.w	r3, r3, #1
 8004768:	6313      	str	r3, [r2, #48]	; 0x30
 800476a:	4b21      	ldr	r3, [pc, #132]	; (80047f0 <MX_GPIO_Init+0xc8>)
 800476c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800476e:	f003 0301 	and.w	r3, r3, #1
 8004772:	607b      	str	r3, [r7, #4]
 8004774:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8004776:	2300      	movs	r3, #0
 8004778:	603b      	str	r3, [r7, #0]
 800477a:	4b1d      	ldr	r3, [pc, #116]	; (80047f0 <MX_GPIO_Init+0xc8>)
 800477c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800477e:	4a1c      	ldr	r2, [pc, #112]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004780:	f043 0302 	orr.w	r3, r3, #2
 8004784:	6313      	str	r3, [r2, #48]	; 0x30
 8004786:	4b1a      	ldr	r3, [pc, #104]	; (80047f0 <MX_GPIO_Init+0xc8>)
 8004788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800478a:	f003 0302 	and.w	r3, r3, #2
 800478e:	603b      	str	r3, [r7, #0]
 8004790:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_9, GPIO_PIN_RESET);
 8004792:	2200      	movs	r2, #0
 8004794:	f240 210e 	movw	r1, #526	; 0x20e
 8004798:	4816      	ldr	r0, [pc, #88]	; (80047f4 <MX_GPIO_Init+0xcc>)
 800479a:	f002 f8c1 	bl	8006920 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2|GPIO_PIN_10, GPIO_PIN_RESET);
 800479e:	2200      	movs	r2, #0
 80047a0:	f240 4104 	movw	r1, #1028	; 0x404
 80047a4:	4814      	ldr	r0, [pc, #80]	; (80047f8 <MX_GPIO_Init+0xd0>)
 80047a6:	f002 f8bb 	bl	8006920 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PC1 PC2 PC3 PC9 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_9;
 80047aa:	f240 230e 	movw	r3, #526	; 0x20e
 80047ae:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80047b0:	2301      	movs	r3, #1
 80047b2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80047b4:	2300      	movs	r3, #0
 80047b6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80047b8:	2300      	movs	r3, #0
 80047ba:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80047bc:	f107 030c 	add.w	r3, r7, #12
 80047c0:	4619      	mov	r1, r3
 80047c2:	480c      	ldr	r0, [pc, #48]	; (80047f4 <MX_GPIO_Init+0xcc>)
 80047c4:	f001 ff18 	bl	80065f8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB2 PB10 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_10;
 80047c8:	f240 4304 	movw	r3, #1028	; 0x404
 80047cc:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80047ce:	2301      	movs	r3, #1
 80047d0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80047d2:	2300      	movs	r3, #0
 80047d4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80047d6:	2300      	movs	r3, #0
 80047d8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80047da:	f107 030c 	add.w	r3, r7, #12
 80047de:	4619      	mov	r1, r3
 80047e0:	4805      	ldr	r0, [pc, #20]	; (80047f8 <MX_GPIO_Init+0xd0>)
 80047e2:	f001 ff09 	bl	80065f8 <HAL_GPIO_Init>

}
 80047e6:	bf00      	nop
 80047e8:	3720      	adds	r7, #32
 80047ea:	46bd      	mov	sp, r7
 80047ec:	bd80      	pop	{r7, pc}
 80047ee:	bf00      	nop
 80047f0:	40023800 	.word	0x40023800
 80047f4:	40020800 	.word	0x40020800
 80047f8:	40020400 	.word	0x40020400

080047fc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80047fc:	b480      	push	{r7}
 80047fe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004800:	b672      	cpsid	i
}
 8004802:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8004804:	e7fe      	b.n	8004804 <Error_Handler+0x8>
	...

08004808 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004808:	b580      	push	{r7, lr}
 800480a:	b082      	sub	sp, #8
 800480c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800480e:	2300      	movs	r3, #0
 8004810:	607b      	str	r3, [r7, #4]
 8004812:	4b10      	ldr	r3, [pc, #64]	; (8004854 <HAL_MspInit+0x4c>)
 8004814:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004816:	4a0f      	ldr	r2, [pc, #60]	; (8004854 <HAL_MspInit+0x4c>)
 8004818:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800481c:	6453      	str	r3, [r2, #68]	; 0x44
 800481e:	4b0d      	ldr	r3, [pc, #52]	; (8004854 <HAL_MspInit+0x4c>)
 8004820:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004822:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004826:	607b      	str	r3, [r7, #4]
 8004828:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800482a:	2300      	movs	r3, #0
 800482c:	603b      	str	r3, [r7, #0]
 800482e:	4b09      	ldr	r3, [pc, #36]	; (8004854 <HAL_MspInit+0x4c>)
 8004830:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004832:	4a08      	ldr	r2, [pc, #32]	; (8004854 <HAL_MspInit+0x4c>)
 8004834:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004838:	6413      	str	r3, [r2, #64]	; 0x40
 800483a:	4b06      	ldr	r3, [pc, #24]	; (8004854 <HAL_MspInit+0x4c>)
 800483c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800483e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004842:	603b      	str	r3, [r7, #0]
 8004844:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8004846:	2007      	movs	r0, #7
 8004848:	f001 fe94 	bl	8006574 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800484c:	bf00      	nop
 800484e:	3708      	adds	r7, #8
 8004850:	46bd      	mov	sp, r7
 8004852:	bd80      	pop	{r7, pc}
 8004854:	40023800 	.word	0x40023800

08004858 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8004858:	b580      	push	{r7, lr}
 800485a:	b08c      	sub	sp, #48	; 0x30
 800485c:	af00      	add	r7, sp, #0
 800485e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004860:	f107 031c 	add.w	r3, r7, #28
 8004864:	2200      	movs	r2, #0
 8004866:	601a      	str	r2, [r3, #0]
 8004868:	605a      	str	r2, [r3, #4]
 800486a:	609a      	str	r2, [r3, #8]
 800486c:	60da      	str	r2, [r3, #12]
 800486e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	4a2e      	ldr	r2, [pc, #184]	; (8004930 <HAL_ADC_MspInit+0xd8>)
 8004876:	4293      	cmp	r3, r2
 8004878:	d128      	bne.n	80048cc <HAL_ADC_MspInit+0x74>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800487a:	2300      	movs	r3, #0
 800487c:	61bb      	str	r3, [r7, #24]
 800487e:	4b2d      	ldr	r3, [pc, #180]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 8004880:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004882:	4a2c      	ldr	r2, [pc, #176]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 8004884:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004888:	6453      	str	r3, [r2, #68]	; 0x44
 800488a:	4b2a      	ldr	r3, [pc, #168]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 800488c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800488e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004892:	61bb      	str	r3, [r7, #24]
 8004894:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004896:	2300      	movs	r3, #0
 8004898:	617b      	str	r3, [r7, #20]
 800489a:	4b26      	ldr	r3, [pc, #152]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 800489c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800489e:	4a25      	ldr	r2, [pc, #148]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048a0:	f043 0302 	orr.w	r3, r3, #2
 80048a4:	6313      	str	r3, [r2, #48]	; 0x30
 80048a6:	4b23      	ldr	r3, [pc, #140]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80048aa:	f003 0302 	and.w	r3, r3, #2
 80048ae:	617b      	str	r3, [r7, #20]
 80048b0:	697b      	ldr	r3, [r7, #20]
    /**ADC1 GPIO Configuration
    PB0     ------> ADC1_IN8
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80048b2:	2301      	movs	r3, #1
 80048b4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80048b6:	2303      	movs	r3, #3
 80048b8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80048ba:	2300      	movs	r3, #0
 80048bc:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80048be:	f107 031c 	add.w	r3, r7, #28
 80048c2:	4619      	mov	r1, r3
 80048c4:	481c      	ldr	r0, [pc, #112]	; (8004938 <HAL_ADC_MspInit+0xe0>)
 80048c6:	f001 fe97 	bl	80065f8 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 80048ca:	e02c      	b.n	8004926 <HAL_ADC_MspInit+0xce>
  else if(hadc->Instance==ADC2)
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	4a1a      	ldr	r2, [pc, #104]	; (800493c <HAL_ADC_MspInit+0xe4>)
 80048d2:	4293      	cmp	r3, r2
 80048d4:	d127      	bne.n	8004926 <HAL_ADC_MspInit+0xce>
    __HAL_RCC_ADC2_CLK_ENABLE();
 80048d6:	2300      	movs	r3, #0
 80048d8:	613b      	str	r3, [r7, #16]
 80048da:	4b16      	ldr	r3, [pc, #88]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80048de:	4a15      	ldr	r2, [pc, #84]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048e0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80048e4:	6453      	str	r3, [r2, #68]	; 0x44
 80048e6:	4b13      	ldr	r3, [pc, #76]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80048ea:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80048ee:	613b      	str	r3, [r7, #16]
 80048f0:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80048f2:	2300      	movs	r3, #0
 80048f4:	60fb      	str	r3, [r7, #12]
 80048f6:	4b0f      	ldr	r3, [pc, #60]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80048fa:	4a0e      	ldr	r2, [pc, #56]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 80048fc:	f043 0302 	orr.w	r3, r3, #2
 8004900:	6313      	str	r3, [r2, #48]	; 0x30
 8004902:	4b0c      	ldr	r3, [pc, #48]	; (8004934 <HAL_ADC_MspInit+0xdc>)
 8004904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004906:	f003 0302 	and.w	r3, r3, #2
 800490a:	60fb      	str	r3, [r7, #12]
 800490c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 800490e:	2302      	movs	r3, #2
 8004910:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8004912:	2303      	movs	r3, #3
 8004914:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004916:	2300      	movs	r3, #0
 8004918:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800491a:	f107 031c 	add.w	r3, r7, #28
 800491e:	4619      	mov	r1, r3
 8004920:	4805      	ldr	r0, [pc, #20]	; (8004938 <HAL_ADC_MspInit+0xe0>)
 8004922:	f001 fe69 	bl	80065f8 <HAL_GPIO_Init>
}
 8004926:	bf00      	nop
 8004928:	3730      	adds	r7, #48	; 0x30
 800492a:	46bd      	mov	sp, r7
 800492c:	bd80      	pop	{r7, pc}
 800492e:	bf00      	nop
 8004930:	40012000 	.word	0x40012000
 8004934:	40023800 	.word	0x40023800
 8004938:	40020400 	.word	0x40020400
 800493c:	40012100 	.word	0x40012100

08004940 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8004940:	b580      	push	{r7, lr}
 8004942:	b08c      	sub	sp, #48	; 0x30
 8004944:	af00      	add	r7, sp, #0
 8004946:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004948:	f107 031c 	add.w	r3, r7, #28
 800494c:	2200      	movs	r2, #0
 800494e:	601a      	str	r2, [r3, #0]
 8004950:	605a      	str	r2, [r3, #4]
 8004952:	609a      	str	r2, [r3, #8]
 8004954:	60da      	str	r2, [r3, #12]
 8004956:	611a      	str	r2, [r3, #16]
  if(hcan->Instance==CAN1)
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	4a53      	ldr	r2, [pc, #332]	; (8004aac <HAL_CAN_MspInit+0x16c>)
 800495e:	4293      	cmp	r3, r2
 8004960:	d146      	bne.n	80049f0 <HAL_CAN_MspInit+0xb0>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_CAN1_CLK_ENABLED++;
 8004962:	4b53      	ldr	r3, [pc, #332]	; (8004ab0 <HAL_CAN_MspInit+0x170>)
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	3301      	adds	r3, #1
 8004968:	4a51      	ldr	r2, [pc, #324]	; (8004ab0 <HAL_CAN_MspInit+0x170>)
 800496a:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_CAN1_CLK_ENABLED==1){
 800496c:	4b50      	ldr	r3, [pc, #320]	; (8004ab0 <HAL_CAN_MspInit+0x170>)
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	2b01      	cmp	r3, #1
 8004972:	d10d      	bne.n	8004990 <HAL_CAN_MspInit+0x50>
      __HAL_RCC_CAN1_CLK_ENABLE();
 8004974:	2300      	movs	r3, #0
 8004976:	61bb      	str	r3, [r7, #24]
 8004978:	4b4e      	ldr	r3, [pc, #312]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 800497a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800497c:	4a4d      	ldr	r2, [pc, #308]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 800497e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8004982:	6413      	str	r3, [r2, #64]	; 0x40
 8004984:	4b4b      	ldr	r3, [pc, #300]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004986:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004988:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800498c:	61bb      	str	r3, [r7, #24]
 800498e:	69bb      	ldr	r3, [r7, #24]
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004990:	2300      	movs	r3, #0
 8004992:	617b      	str	r3, [r7, #20]
 8004994:	4b47      	ldr	r3, [pc, #284]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004998:	4a46      	ldr	r2, [pc, #280]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 800499a:	f043 0301 	orr.w	r3, r3, #1
 800499e:	6313      	str	r3, [r2, #48]	; 0x30
 80049a0:	4b44      	ldr	r3, [pc, #272]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 80049a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049a4:	f003 0301 	and.w	r3, r3, #1
 80049a8:	617b      	str	r3, [r7, #20]
 80049aa:	697b      	ldr	r3, [r7, #20]
    /**CAN1 GPIO Configuration
    PA11     ------> CAN1_RX
    PA12     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 80049ac:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80049b0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80049b2:	2302      	movs	r3, #2
 80049b4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80049b6:	2300      	movs	r3, #0
 80049b8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80049ba:	2303      	movs	r3, #3
 80049bc:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 80049be:	2309      	movs	r3, #9
 80049c0:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80049c2:	f107 031c 	add.w	r3, r7, #28
 80049c6:	4619      	mov	r1, r3
 80049c8:	483b      	ldr	r0, [pc, #236]	; (8004ab8 <HAL_CAN_MspInit+0x178>)
 80049ca:	f001 fe15 	bl	80065f8 <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 80049ce:	2200      	movs	r2, #0
 80049d0:	2100      	movs	r1, #0
 80049d2:	2014      	movs	r0, #20
 80049d4:	f001 fdd9 	bl	800658a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 80049d8:	2014      	movs	r0, #20
 80049da:	f001 fdf2 	bl	80065c2 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 80049de:	2200      	movs	r2, #0
 80049e0:	2100      	movs	r1, #0
 80049e2:	2015      	movs	r0, #21
 80049e4:	f001 fdd1 	bl	800658a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 80049e8:	2015      	movs	r0, #21
 80049ea:	f001 fdea 	bl	80065c2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN2_MspInit 1 */

  /* USER CODE END CAN2_MspInit 1 */
  }

}
 80049ee:	e058      	b.n	8004aa2 <HAL_CAN_MspInit+0x162>
  else if(hcan->Instance==CAN2)
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	4a31      	ldr	r2, [pc, #196]	; (8004abc <HAL_CAN_MspInit+0x17c>)
 80049f6:	4293      	cmp	r3, r2
 80049f8:	d153      	bne.n	8004aa2 <HAL_CAN_MspInit+0x162>
    __HAL_RCC_CAN2_CLK_ENABLE();
 80049fa:	2300      	movs	r3, #0
 80049fc:	613b      	str	r3, [r7, #16]
 80049fe:	4b2d      	ldr	r3, [pc, #180]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a02:	4a2c      	ldr	r2, [pc, #176]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a04:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8004a08:	6413      	str	r3, [r2, #64]	; 0x40
 8004a0a:	4b2a      	ldr	r3, [pc, #168]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a0e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004a12:	613b      	str	r3, [r7, #16]
 8004a14:	693b      	ldr	r3, [r7, #16]
    HAL_RCC_CAN1_CLK_ENABLED++;
 8004a16:	4b26      	ldr	r3, [pc, #152]	; (8004ab0 <HAL_CAN_MspInit+0x170>)
 8004a18:	681b      	ldr	r3, [r3, #0]
 8004a1a:	3301      	adds	r3, #1
 8004a1c:	4a24      	ldr	r2, [pc, #144]	; (8004ab0 <HAL_CAN_MspInit+0x170>)
 8004a1e:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_CAN1_CLK_ENABLED==1){
 8004a20:	4b23      	ldr	r3, [pc, #140]	; (8004ab0 <HAL_CAN_MspInit+0x170>)
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	2b01      	cmp	r3, #1
 8004a26:	d10d      	bne.n	8004a44 <HAL_CAN_MspInit+0x104>
      __HAL_RCC_CAN1_CLK_ENABLE();
 8004a28:	2300      	movs	r3, #0
 8004a2a:	60fb      	str	r3, [r7, #12]
 8004a2c:	4b21      	ldr	r3, [pc, #132]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a30:	4a20      	ldr	r2, [pc, #128]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a32:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8004a36:	6413      	str	r3, [r2, #64]	; 0x40
 8004a38:	4b1e      	ldr	r3, [pc, #120]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a3c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004a40:	60fb      	str	r3, [r7, #12]
 8004a42:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004a44:	2300      	movs	r3, #0
 8004a46:	60bb      	str	r3, [r7, #8]
 8004a48:	4b1a      	ldr	r3, [pc, #104]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a4c:	4a19      	ldr	r2, [pc, #100]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a4e:	f043 0302 	orr.w	r3, r3, #2
 8004a52:	6313      	str	r3, [r2, #48]	; 0x30
 8004a54:	4b17      	ldr	r3, [pc, #92]	; (8004ab4 <HAL_CAN_MspInit+0x174>)
 8004a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a58:	f003 0302 	and.w	r3, r3, #2
 8004a5c:	60bb      	str	r3, [r7, #8]
 8004a5e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8004a60:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8004a64:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004a66:	2302      	movs	r3, #2
 8004a68:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004a6a:	2300      	movs	r3, #0
 8004a6c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004a6e:	2303      	movs	r3, #3
 8004a70:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN2;
 8004a72:	2309      	movs	r3, #9
 8004a74:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004a76:	f107 031c 	add.w	r3, r7, #28
 8004a7a:	4619      	mov	r1, r3
 8004a7c:	4810      	ldr	r0, [pc, #64]	; (8004ac0 <HAL_CAN_MspInit+0x180>)
 8004a7e:	f001 fdbb 	bl	80065f8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(CAN2_RX0_IRQn, 0, 0);
 8004a82:	2200      	movs	r2, #0
 8004a84:	2100      	movs	r1, #0
 8004a86:	2040      	movs	r0, #64	; 0x40
 8004a88:	f001 fd7f 	bl	800658a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX0_IRQn);
 8004a8c:	2040      	movs	r0, #64	; 0x40
 8004a8e:	f001 fd98 	bl	80065c2 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN2_RX1_IRQn, 0, 0);
 8004a92:	2200      	movs	r2, #0
 8004a94:	2100      	movs	r1, #0
 8004a96:	2041      	movs	r0, #65	; 0x41
 8004a98:	f001 fd77 	bl	800658a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN2_RX1_IRQn);
 8004a9c:	2041      	movs	r0, #65	; 0x41
 8004a9e:	f001 fd90 	bl	80065c2 <HAL_NVIC_EnableIRQ>
}
 8004aa2:	bf00      	nop
 8004aa4:	3730      	adds	r7, #48	; 0x30
 8004aa6:	46bd      	mov	sp, r7
 8004aa8:	bd80      	pop	{r7, pc}
 8004aaa:	bf00      	nop
 8004aac:	40006400 	.word	0x40006400
 8004ab0:	20003264 	.word	0x20003264
 8004ab4:	40023800 	.word	0x40023800
 8004ab8:	40020000 	.word	0x40020000
 8004abc:	40006800 	.word	0x40006800
 8004ac0:	40020400 	.word	0x40020400

08004ac4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8004ac4:	b580      	push	{r7, lr}
 8004ac6:	b08a      	sub	sp, #40	; 0x28
 8004ac8:	af00      	add	r7, sp, #0
 8004aca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004acc:	f107 0314 	add.w	r3, r7, #20
 8004ad0:	2200      	movs	r2, #0
 8004ad2:	601a      	str	r2, [r3, #0]
 8004ad4:	605a      	str	r2, [r3, #4]
 8004ad6:	609a      	str	r2, [r3, #8]
 8004ad8:	60da      	str	r2, [r3, #12]
 8004ada:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI1)
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	4a19      	ldr	r2, [pc, #100]	; (8004b48 <HAL_SPI_MspInit+0x84>)
 8004ae2:	4293      	cmp	r3, r2
 8004ae4:	d12b      	bne.n	8004b3e <HAL_SPI_MspInit+0x7a>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8004ae6:	2300      	movs	r3, #0
 8004ae8:	613b      	str	r3, [r7, #16]
 8004aea:	4b18      	ldr	r3, [pc, #96]	; (8004b4c <HAL_SPI_MspInit+0x88>)
 8004aec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004aee:	4a17      	ldr	r2, [pc, #92]	; (8004b4c <HAL_SPI_MspInit+0x88>)
 8004af0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004af4:	6453      	str	r3, [r2, #68]	; 0x44
 8004af6:	4b15      	ldr	r3, [pc, #84]	; (8004b4c <HAL_SPI_MspInit+0x88>)
 8004af8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004afa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004afe:	613b      	str	r3, [r7, #16]
 8004b00:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004b02:	2300      	movs	r3, #0
 8004b04:	60fb      	str	r3, [r7, #12]
 8004b06:	4b11      	ldr	r3, [pc, #68]	; (8004b4c <HAL_SPI_MspInit+0x88>)
 8004b08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b0a:	4a10      	ldr	r2, [pc, #64]	; (8004b4c <HAL_SPI_MspInit+0x88>)
 8004b0c:	f043 0301 	orr.w	r3, r3, #1
 8004b10:	6313      	str	r3, [r2, #48]	; 0x30
 8004b12:	4b0e      	ldr	r3, [pc, #56]	; (8004b4c <HAL_SPI_MspInit+0x88>)
 8004b14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b16:	f003 0301 	and.w	r3, r3, #1
 8004b1a:	60fb      	str	r3, [r7, #12]
 8004b1c:	68fb      	ldr	r3, [r7, #12]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8004b1e:	23e0      	movs	r3, #224	; 0xe0
 8004b20:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004b22:	2302      	movs	r3, #2
 8004b24:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004b26:	2300      	movs	r3, #0
 8004b28:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004b2a:	2303      	movs	r3, #3
 8004b2c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8004b2e:	2305      	movs	r3, #5
 8004b30:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004b32:	f107 0314 	add.w	r3, r7, #20
 8004b36:	4619      	mov	r1, r3
 8004b38:	4805      	ldr	r0, [pc, #20]	; (8004b50 <HAL_SPI_MspInit+0x8c>)
 8004b3a:	f001 fd5d 	bl	80065f8 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }

}
 8004b3e:	bf00      	nop
 8004b40:	3728      	adds	r7, #40	; 0x28
 8004b42:	46bd      	mov	sp, r7
 8004b44:	bd80      	pop	{r7, pc}
 8004b46:	bf00      	nop
 8004b48:	40013000 	.word	0x40013000
 8004b4c:	40023800 	.word	0x40023800
 8004b50:	40020000 	.word	0x40020000

08004b54 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8004b54:	b480      	push	{r7}
 8004b56:	b087      	sub	sp, #28
 8004b58:	af00      	add	r7, sp, #0
 8004b5a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	4a1f      	ldr	r2, [pc, #124]	; (8004be0 <HAL_TIM_Base_MspInit+0x8c>)
 8004b62:	4293      	cmp	r3, r2
 8004b64:	d10e      	bne.n	8004b84 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8004b66:	2300      	movs	r3, #0
 8004b68:	617b      	str	r3, [r7, #20]
 8004b6a:	4b1e      	ldr	r3, [pc, #120]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004b6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b6e:	4a1d      	ldr	r2, [pc, #116]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004b70:	f043 0301 	orr.w	r3, r3, #1
 8004b74:	6453      	str	r3, [r2, #68]	; 0x44
 8004b76:	4b1b      	ldr	r3, [pc, #108]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004b78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b7a:	f003 0301 	and.w	r3, r3, #1
 8004b7e:	617b      	str	r3, [r7, #20]
 8004b80:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8004b82:	e026      	b.n	8004bd2 <HAL_TIM_Base_MspInit+0x7e>
  else if(htim_base->Instance==TIM2)
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004b8c:	d10e      	bne.n	8004bac <HAL_TIM_Base_MspInit+0x58>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8004b8e:	2300      	movs	r3, #0
 8004b90:	613b      	str	r3, [r7, #16]
 8004b92:	4b14      	ldr	r3, [pc, #80]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b96:	4a13      	ldr	r2, [pc, #76]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004b98:	f043 0301 	orr.w	r3, r3, #1
 8004b9c:	6413      	str	r3, [r2, #64]	; 0x40
 8004b9e:	4b11      	ldr	r3, [pc, #68]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004ba0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ba2:	f003 0301 	and.w	r3, r3, #1
 8004ba6:	613b      	str	r3, [r7, #16]
 8004ba8:	693b      	ldr	r3, [r7, #16]
}
 8004baa:	e012      	b.n	8004bd2 <HAL_TIM_Base_MspInit+0x7e>
  else if(htim_base->Instance==TIM4)
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	4a0d      	ldr	r2, [pc, #52]	; (8004be8 <HAL_TIM_Base_MspInit+0x94>)
 8004bb2:	4293      	cmp	r3, r2
 8004bb4:	d10d      	bne.n	8004bd2 <HAL_TIM_Base_MspInit+0x7e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8004bb6:	2300      	movs	r3, #0
 8004bb8:	60fb      	str	r3, [r7, #12]
 8004bba:	4b0a      	ldr	r3, [pc, #40]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004bbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bbe:	4a09      	ldr	r2, [pc, #36]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004bc0:	f043 0304 	orr.w	r3, r3, #4
 8004bc4:	6413      	str	r3, [r2, #64]	; 0x40
 8004bc6:	4b07      	ldr	r3, [pc, #28]	; (8004be4 <HAL_TIM_Base_MspInit+0x90>)
 8004bc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bca:	f003 0304 	and.w	r3, r3, #4
 8004bce:	60fb      	str	r3, [r7, #12]
 8004bd0:	68fb      	ldr	r3, [r7, #12]
}
 8004bd2:	bf00      	nop
 8004bd4:	371c      	adds	r7, #28
 8004bd6:	46bd      	mov	sp, r7
 8004bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bdc:	4770      	bx	lr
 8004bde:	bf00      	nop
 8004be0:	40010000 	.word	0x40010000
 8004be4:	40023800 	.word	0x40023800
 8004be8:	40000800 	.word	0x40000800

08004bec <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8004bec:	b580      	push	{r7, lr}
 8004bee:	b08a      	sub	sp, #40	; 0x28
 8004bf0:	af00      	add	r7, sp, #0
 8004bf2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004bf4:	f107 0314 	add.w	r3, r7, #20
 8004bf8:	2200      	movs	r2, #0
 8004bfa:	601a      	str	r2, [r3, #0]
 8004bfc:	605a      	str	r2, [r3, #4]
 8004bfe:	609a      	str	r2, [r3, #8]
 8004c00:	60da      	str	r2, [r3, #12]
 8004c02:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	4a24      	ldr	r2, [pc, #144]	; (8004c9c <HAL_TIM_MspPostInit+0xb0>)
 8004c0a:	4293      	cmp	r3, r2
 8004c0c:	d11f      	bne.n	8004c4e <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004c0e:	2300      	movs	r3, #0
 8004c10:	613b      	str	r3, [r7, #16]
 8004c12:	4b23      	ldr	r3, [pc, #140]	; (8004ca0 <HAL_TIM_MspPostInit+0xb4>)
 8004c14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c16:	4a22      	ldr	r2, [pc, #136]	; (8004ca0 <HAL_TIM_MspPostInit+0xb4>)
 8004c18:	f043 0301 	orr.w	r3, r3, #1
 8004c1c:	6313      	str	r3, [r2, #48]	; 0x30
 8004c1e:	4b20      	ldr	r3, [pc, #128]	; (8004ca0 <HAL_TIM_MspPostInit+0xb4>)
 8004c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c22:	f003 0301 	and.w	r3, r3, #1
 8004c26:	613b      	str	r3, [r7, #16]
 8004c28:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8004c2a:	f44f 7340 	mov.w	r3, #768	; 0x300
 8004c2e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004c30:	2302      	movs	r3, #2
 8004c32:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004c34:	2300      	movs	r3, #0
 8004c36:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004c38:	2300      	movs	r3, #0
 8004c3a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8004c3c:	2301      	movs	r3, #1
 8004c3e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004c40:	f107 0314 	add.w	r3, r7, #20
 8004c44:	4619      	mov	r1, r3
 8004c46:	4817      	ldr	r0, [pc, #92]	; (8004ca4 <HAL_TIM_MspPostInit+0xb8>)
 8004c48:	f001 fcd6 	bl	80065f8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8004c4c:	e022      	b.n	8004c94 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM2)
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004c56:	d11d      	bne.n	8004c94 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004c58:	2300      	movs	r3, #0
 8004c5a:	60fb      	str	r3, [r7, #12]
 8004c5c:	4b10      	ldr	r3, [pc, #64]	; (8004ca0 <HAL_TIM_MspPostInit+0xb4>)
 8004c5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c60:	4a0f      	ldr	r2, [pc, #60]	; (8004ca0 <HAL_TIM_MspPostInit+0xb4>)
 8004c62:	f043 0301 	orr.w	r3, r3, #1
 8004c66:	6313      	str	r3, [r2, #48]	; 0x30
 8004c68:	4b0d      	ldr	r3, [pc, #52]	; (8004ca0 <HAL_TIM_MspPostInit+0xb4>)
 8004c6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c6c:	f003 0301 	and.w	r3, r3, #1
 8004c70:	60fb      	str	r3, [r7, #12]
 8004c72:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8004c74:	2303      	movs	r3, #3
 8004c76:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004c78:	2302      	movs	r3, #2
 8004c7a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004c7c:	2300      	movs	r3, #0
 8004c7e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004c80:	2300      	movs	r3, #0
 8004c82:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8004c84:	2301      	movs	r3, #1
 8004c86:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004c88:	f107 0314 	add.w	r3, r7, #20
 8004c8c:	4619      	mov	r1, r3
 8004c8e:	4805      	ldr	r0, [pc, #20]	; (8004ca4 <HAL_TIM_MspPostInit+0xb8>)
 8004c90:	f001 fcb2 	bl	80065f8 <HAL_GPIO_Init>
}
 8004c94:	bf00      	nop
 8004c96:	3728      	adds	r7, #40	; 0x28
 8004c98:	46bd      	mov	sp, r7
 8004c9a:	bd80      	pop	{r7, pc}
 8004c9c:	40010000 	.word	0x40010000
 8004ca0:	40023800 	.word	0x40023800
 8004ca4:	40020000 	.word	0x40020000

08004ca8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8004ca8:	b580      	push	{r7, lr}
 8004caa:	b08a      	sub	sp, #40	; 0x28
 8004cac:	af00      	add	r7, sp, #0
 8004cae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004cb0:	f107 0314 	add.w	r3, r7, #20
 8004cb4:	2200      	movs	r2, #0
 8004cb6:	601a      	str	r2, [r3, #0]
 8004cb8:	605a      	str	r2, [r3, #4]
 8004cba:	609a      	str	r2, [r3, #8]
 8004cbc:	60da      	str	r2, [r3, #12]
 8004cbe:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	4a19      	ldr	r2, [pc, #100]	; (8004d2c <HAL_UART_MspInit+0x84>)
 8004cc6:	4293      	cmp	r3, r2
 8004cc8:	d12b      	bne.n	8004d22 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8004cca:	2300      	movs	r3, #0
 8004ccc:	613b      	str	r3, [r7, #16]
 8004cce:	4b18      	ldr	r3, [pc, #96]	; (8004d30 <HAL_UART_MspInit+0x88>)
 8004cd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004cd2:	4a17      	ldr	r2, [pc, #92]	; (8004d30 <HAL_UART_MspInit+0x88>)
 8004cd4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004cd8:	6413      	str	r3, [r2, #64]	; 0x40
 8004cda:	4b15      	ldr	r3, [pc, #84]	; (8004d30 <HAL_UART_MspInit+0x88>)
 8004cdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004cde:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004ce2:	613b      	str	r3, [r7, #16]
 8004ce4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004ce6:	2300      	movs	r3, #0
 8004ce8:	60fb      	str	r3, [r7, #12]
 8004cea:	4b11      	ldr	r3, [pc, #68]	; (8004d30 <HAL_UART_MspInit+0x88>)
 8004cec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004cee:	4a10      	ldr	r2, [pc, #64]	; (8004d30 <HAL_UART_MspInit+0x88>)
 8004cf0:	f043 0301 	orr.w	r3, r3, #1
 8004cf4:	6313      	str	r3, [r2, #48]	; 0x30
 8004cf6:	4b0e      	ldr	r3, [pc, #56]	; (8004d30 <HAL_UART_MspInit+0x88>)
 8004cf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004cfa:	f003 0301 	and.w	r3, r3, #1
 8004cfe:	60fb      	str	r3, [r7, #12]
 8004d00:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8004d02:	230c      	movs	r3, #12
 8004d04:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004d06:	2302      	movs	r3, #2
 8004d08:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004d0a:	2300      	movs	r3, #0
 8004d0c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004d0e:	2303      	movs	r3, #3
 8004d10:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8004d12:	2307      	movs	r3, #7
 8004d14:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004d16:	f107 0314 	add.w	r3, r7, #20
 8004d1a:	4619      	mov	r1, r3
 8004d1c:	4805      	ldr	r0, [pc, #20]	; (8004d34 <HAL_UART_MspInit+0x8c>)
 8004d1e:	f001 fc6b 	bl	80065f8 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8004d22:	bf00      	nop
 8004d24:	3728      	adds	r7, #40	; 0x28
 8004d26:	46bd      	mov	sp, r7
 8004d28:	bd80      	pop	{r7, pc}
 8004d2a:	bf00      	nop
 8004d2c:	40004400 	.word	0x40004400
 8004d30:	40023800 	.word	0x40023800
 8004d34:	40020000 	.word	0x40020000

08004d38 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004d38:	b480      	push	{r7}
 8004d3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004d3c:	e7fe      	b.n	8004d3c <NMI_Handler+0x4>

08004d3e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004d3e:	b480      	push	{r7}
 8004d40:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004d42:	e7fe      	b.n	8004d42 <HardFault_Handler+0x4>

08004d44 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004d44:	b480      	push	{r7}
 8004d46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004d48:	e7fe      	b.n	8004d48 <MemManage_Handler+0x4>

08004d4a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004d4a:	b480      	push	{r7}
 8004d4c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004d4e:	e7fe      	b.n	8004d4e <BusFault_Handler+0x4>

08004d50 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004d50:	b480      	push	{r7}
 8004d52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004d54:	e7fe      	b.n	8004d54 <UsageFault_Handler+0x4>

08004d56 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004d56:	b480      	push	{r7}
 8004d58:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8004d5a:	bf00      	nop
 8004d5c:	46bd      	mov	sp, r7
 8004d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d62:	4770      	bx	lr

08004d64 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004d64:	b480      	push	{r7}
 8004d66:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004d68:	bf00      	nop
 8004d6a:	46bd      	mov	sp, r7
 8004d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d70:	4770      	bx	lr

08004d72 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004d72:	b480      	push	{r7}
 8004d74:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004d76:	bf00      	nop
 8004d78:	46bd      	mov	sp, r7
 8004d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d7e:	4770      	bx	lr

08004d80 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004d80:	b580      	push	{r7, lr}
 8004d82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004d84:	f000 f97e 	bl	8005084 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004d88:	bf00      	nop
 8004d8a:	bd80      	pop	{r7, pc}

08004d8c <CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles CAN1 RX0 interrupt.
  */
void CAN1_RX0_IRQHandler(void)
{
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX0_IRQn 0 */

  /* USER CODE END CAN1_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8004d90:	4802      	ldr	r0, [pc, #8]	; (8004d9c <CAN1_RX0_IRQHandler+0x10>)
 8004d92:	f001 f8ef 	bl	8005f74 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX0_IRQn 1 */

  /* USER CODE END CAN1_RX0_IRQn 1 */
}
 8004d96:	bf00      	nop
 8004d98:	bd80      	pop	{r7, pc}
 8004d9a:	bf00      	nop
 8004d9c:	200030a0 	.word	0x200030a0

08004da0 <CAN1_RX1_IRQHandler>:

/**
  * @brief This function handles CAN1 RX1 interrupt.
  */
void CAN1_RX1_IRQHandler(void)
{
 8004da0:	b580      	push	{r7, lr}
 8004da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX1_IRQn 0 */

  /* USER CODE END CAN1_RX1_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8004da4:	4802      	ldr	r0, [pc, #8]	; (8004db0 <CAN1_RX1_IRQHandler+0x10>)
 8004da6:	f001 f8e5 	bl	8005f74 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX1_IRQn 1 */

  /* USER CODE END CAN1_RX1_IRQn 1 */
}
 8004daa:	bf00      	nop
 8004dac:	bd80      	pop	{r7, pc}
 8004dae:	bf00      	nop
 8004db0:	200030a0 	.word	0x200030a0

08004db4 <CAN2_RX0_IRQHandler>:

/**
  * @brief This function handles CAN2 RX0 interrupt.
  */
void CAN2_RX0_IRQHandler(void)
{
 8004db4:	b580      	push	{r7, lr}
 8004db6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_RX0_IRQn 0 */

  /* USER CODE END CAN2_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8004db8:	4802      	ldr	r0, [pc, #8]	; (8004dc4 <CAN2_RX0_IRQHandler+0x10>)
 8004dba:	f001 f8db 	bl	8005f74 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_RX0_IRQn 1 */

  /* USER CODE END CAN2_RX0_IRQn 1 */
}
 8004dbe:	bf00      	nop
 8004dc0:	bd80      	pop	{r7, pc}
 8004dc2:	bf00      	nop
 8004dc4:	200030c8 	.word	0x200030c8

08004dc8 <CAN2_RX1_IRQHandler>:

/**
  * @brief This function handles CAN2 RX1 interrupt.
  */
void CAN2_RX1_IRQHandler(void)
{
 8004dc8:	b580      	push	{r7, lr}
 8004dca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN2_RX1_IRQn 0 */

  /* USER CODE END CAN2_RX1_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan2);
 8004dcc:	4802      	ldr	r0, [pc, #8]	; (8004dd8 <CAN2_RX1_IRQHandler+0x10>)
 8004dce:	f001 f8d1 	bl	8005f74 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN2_RX1_IRQn 1 */

  /* USER CODE END CAN2_RX1_IRQn 1 */
}
 8004dd2:	bf00      	nop
 8004dd4:	bd80      	pop	{r7, pc}
 8004dd6:	bf00      	nop
 8004dd8:	200030c8 	.word	0x200030c8

08004ddc <_getpid>:
 8004ddc:	b480      	push	{r7}
 8004dde:	af00      	add	r7, sp, #0
 8004de0:	2301      	movs	r3, #1
 8004de2:	4618      	mov	r0, r3
 8004de4:	46bd      	mov	sp, r7
 8004de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dea:	4770      	bx	lr

08004dec <_kill>:
 8004dec:	b580      	push	{r7, lr}
 8004dee:	b082      	sub	sp, #8
 8004df0:	af00      	add	r7, sp, #0
 8004df2:	6078      	str	r0, [r7, #4]
 8004df4:	6039      	str	r1, [r7, #0]
 8004df6:	f004 fc41 	bl	800967c <__errno>
 8004dfa:	4603      	mov	r3, r0
 8004dfc:	2216      	movs	r2, #22
 8004dfe:	601a      	str	r2, [r3, #0]
 8004e00:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004e04:	4618      	mov	r0, r3
 8004e06:	3708      	adds	r7, #8
 8004e08:	46bd      	mov	sp, r7
 8004e0a:	bd80      	pop	{r7, pc}

08004e0c <_exit>:
 8004e0c:	b580      	push	{r7, lr}
 8004e0e:	b082      	sub	sp, #8
 8004e10:	af00      	add	r7, sp, #0
 8004e12:	6078      	str	r0, [r7, #4]
 8004e14:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004e18:	6878      	ldr	r0, [r7, #4]
 8004e1a:	f7ff ffe7 	bl	8004dec <_kill>
 8004e1e:	e7fe      	b.n	8004e1e <_exit+0x12>

08004e20 <_read>:
 8004e20:	b580      	push	{r7, lr}
 8004e22:	b086      	sub	sp, #24
 8004e24:	af00      	add	r7, sp, #0
 8004e26:	60f8      	str	r0, [r7, #12]
 8004e28:	60b9      	str	r1, [r7, #8]
 8004e2a:	607a      	str	r2, [r7, #4]
 8004e2c:	2300      	movs	r3, #0
 8004e2e:	617b      	str	r3, [r7, #20]
 8004e30:	e00a      	b.n	8004e48 <_read+0x28>
 8004e32:	f3af 8000 	nop.w
 8004e36:	4601      	mov	r1, r0
 8004e38:	68bb      	ldr	r3, [r7, #8]
 8004e3a:	1c5a      	adds	r2, r3, #1
 8004e3c:	60ba      	str	r2, [r7, #8]
 8004e3e:	b2ca      	uxtb	r2, r1
 8004e40:	701a      	strb	r2, [r3, #0]
 8004e42:	697b      	ldr	r3, [r7, #20]
 8004e44:	3301      	adds	r3, #1
 8004e46:	617b      	str	r3, [r7, #20]
 8004e48:	697a      	ldr	r2, [r7, #20]
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	429a      	cmp	r2, r3
 8004e4e:	dbf0      	blt.n	8004e32 <_read+0x12>
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	4618      	mov	r0, r3
 8004e54:	3718      	adds	r7, #24
 8004e56:	46bd      	mov	sp, r7
 8004e58:	bd80      	pop	{r7, pc}

08004e5a <_write>:
 8004e5a:	b580      	push	{r7, lr}
 8004e5c:	b086      	sub	sp, #24
 8004e5e:	af00      	add	r7, sp, #0
 8004e60:	60f8      	str	r0, [r7, #12]
 8004e62:	60b9      	str	r1, [r7, #8]
 8004e64:	607a      	str	r2, [r7, #4]
 8004e66:	2300      	movs	r3, #0
 8004e68:	617b      	str	r3, [r7, #20]
 8004e6a:	e009      	b.n	8004e80 <_write+0x26>
 8004e6c:	68bb      	ldr	r3, [r7, #8]
 8004e6e:	1c5a      	adds	r2, r3, #1
 8004e70:	60ba      	str	r2, [r7, #8]
 8004e72:	781b      	ldrb	r3, [r3, #0]
 8004e74:	4618      	mov	r0, r3
 8004e76:	f3af 8000 	nop.w
 8004e7a:	697b      	ldr	r3, [r7, #20]
 8004e7c:	3301      	adds	r3, #1
 8004e7e:	617b      	str	r3, [r7, #20]
 8004e80:	697a      	ldr	r2, [r7, #20]
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	429a      	cmp	r2, r3
 8004e86:	dbf1      	blt.n	8004e6c <_write+0x12>
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	4618      	mov	r0, r3
 8004e8c:	3718      	adds	r7, #24
 8004e8e:	46bd      	mov	sp, r7
 8004e90:	bd80      	pop	{r7, pc}

08004e92 <_close>:
 8004e92:	b480      	push	{r7}
 8004e94:	b083      	sub	sp, #12
 8004e96:	af00      	add	r7, sp, #0
 8004e98:	6078      	str	r0, [r7, #4]
 8004e9a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004e9e:	4618      	mov	r0, r3
 8004ea0:	370c      	adds	r7, #12
 8004ea2:	46bd      	mov	sp, r7
 8004ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ea8:	4770      	bx	lr

08004eaa <_fstat>:
 8004eaa:	b480      	push	{r7}
 8004eac:	b083      	sub	sp, #12
 8004eae:	af00      	add	r7, sp, #0
 8004eb0:	6078      	str	r0, [r7, #4]
 8004eb2:	6039      	str	r1, [r7, #0]
 8004eb4:	683b      	ldr	r3, [r7, #0]
 8004eb6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004eba:	605a      	str	r2, [r3, #4]
 8004ebc:	2300      	movs	r3, #0
 8004ebe:	4618      	mov	r0, r3
 8004ec0:	370c      	adds	r7, #12
 8004ec2:	46bd      	mov	sp, r7
 8004ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ec8:	4770      	bx	lr

08004eca <_isatty>:
 8004eca:	b480      	push	{r7}
 8004ecc:	b083      	sub	sp, #12
 8004ece:	af00      	add	r7, sp, #0
 8004ed0:	6078      	str	r0, [r7, #4]
 8004ed2:	2301      	movs	r3, #1
 8004ed4:	4618      	mov	r0, r3
 8004ed6:	370c      	adds	r7, #12
 8004ed8:	46bd      	mov	sp, r7
 8004eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ede:	4770      	bx	lr

08004ee0 <_lseek>:
 8004ee0:	b480      	push	{r7}
 8004ee2:	b085      	sub	sp, #20
 8004ee4:	af00      	add	r7, sp, #0
 8004ee6:	60f8      	str	r0, [r7, #12]
 8004ee8:	60b9      	str	r1, [r7, #8]
 8004eea:	607a      	str	r2, [r7, #4]
 8004eec:	2300      	movs	r3, #0
 8004eee:	4618      	mov	r0, r3
 8004ef0:	3714      	adds	r7, #20
 8004ef2:	46bd      	mov	sp, r7
 8004ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ef8:	4770      	bx	lr
	...

08004efc <_sbrk>:
 8004efc:	b580      	push	{r7, lr}
 8004efe:	b086      	sub	sp, #24
 8004f00:	af00      	add	r7, sp, #0
 8004f02:	6078      	str	r0, [r7, #4]
 8004f04:	4a14      	ldr	r2, [pc, #80]	; (8004f58 <_sbrk+0x5c>)
 8004f06:	4b15      	ldr	r3, [pc, #84]	; (8004f5c <_sbrk+0x60>)
 8004f08:	1ad3      	subs	r3, r2, r3
 8004f0a:	617b      	str	r3, [r7, #20]
 8004f0c:	697b      	ldr	r3, [r7, #20]
 8004f0e:	613b      	str	r3, [r7, #16]
 8004f10:	4b13      	ldr	r3, [pc, #76]	; (8004f60 <_sbrk+0x64>)
 8004f12:	681b      	ldr	r3, [r3, #0]
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d102      	bne.n	8004f1e <_sbrk+0x22>
 8004f18:	4b11      	ldr	r3, [pc, #68]	; (8004f60 <_sbrk+0x64>)
 8004f1a:	4a12      	ldr	r2, [pc, #72]	; (8004f64 <_sbrk+0x68>)
 8004f1c:	601a      	str	r2, [r3, #0]
 8004f1e:	4b10      	ldr	r3, [pc, #64]	; (8004f60 <_sbrk+0x64>)
 8004f20:	681a      	ldr	r2, [r3, #0]
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	4413      	add	r3, r2
 8004f26:	693a      	ldr	r2, [r7, #16]
 8004f28:	429a      	cmp	r2, r3
 8004f2a:	d207      	bcs.n	8004f3c <_sbrk+0x40>
 8004f2c:	f004 fba6 	bl	800967c <__errno>
 8004f30:	4603      	mov	r3, r0
 8004f32:	220c      	movs	r2, #12
 8004f34:	601a      	str	r2, [r3, #0]
 8004f36:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004f3a:	e009      	b.n	8004f50 <_sbrk+0x54>
 8004f3c:	4b08      	ldr	r3, [pc, #32]	; (8004f60 <_sbrk+0x64>)
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	60fb      	str	r3, [r7, #12]
 8004f42:	4b07      	ldr	r3, [pc, #28]	; (8004f60 <_sbrk+0x64>)
 8004f44:	681a      	ldr	r2, [r3, #0]
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	4413      	add	r3, r2
 8004f4a:	4a05      	ldr	r2, [pc, #20]	; (8004f60 <_sbrk+0x64>)
 8004f4c:	6013      	str	r3, [r2, #0]
 8004f4e:	68fb      	ldr	r3, [r7, #12]
 8004f50:	4618      	mov	r0, r3
 8004f52:	3718      	adds	r7, #24
 8004f54:	46bd      	mov	sp, r7
 8004f56:	bd80      	pop	{r7, pc}
 8004f58:	20020000 	.word	0x20020000
 8004f5c:	00000400 	.word	0x00000400
 8004f60:	20003268 	.word	0x20003268
 8004f64:	20003280 	.word	0x20003280

08004f68 <SystemInit>:
 8004f68:	b480      	push	{r7}
 8004f6a:	af00      	add	r7, sp, #0
 8004f6c:	4b06      	ldr	r3, [pc, #24]	; (8004f88 <SystemInit+0x20>)
 8004f6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004f72:	4a05      	ldr	r2, [pc, #20]	; (8004f88 <SystemInit+0x20>)
 8004f74:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004f78:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004f7c:	bf00      	nop
 8004f7e:	46bd      	mov	sp, r7
 8004f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f84:	4770      	bx	lr
 8004f86:	bf00      	nop
 8004f88:	e000ed00 	.word	0xe000ed00

08004f8c <Reset_Handler>:
 8004f8c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004fc4 <LoopFillZerobss+0x12>
 8004f90:	480d      	ldr	r0, [pc, #52]	; (8004fc8 <LoopFillZerobss+0x16>)
 8004f92:	490e      	ldr	r1, [pc, #56]	; (8004fcc <LoopFillZerobss+0x1a>)
 8004f94:	4a0e      	ldr	r2, [pc, #56]	; (8004fd0 <LoopFillZerobss+0x1e>)
 8004f96:	2300      	movs	r3, #0
 8004f98:	e002      	b.n	8004fa0 <LoopCopyDataInit>

08004f9a <CopyDataInit>:
 8004f9a:	58d4      	ldr	r4, [r2, r3]
 8004f9c:	50c4      	str	r4, [r0, r3]
 8004f9e:	3304      	adds	r3, #4

08004fa0 <LoopCopyDataInit>:
 8004fa0:	18c4      	adds	r4, r0, r3
 8004fa2:	428c      	cmp	r4, r1
 8004fa4:	d3f9      	bcc.n	8004f9a <CopyDataInit>
 8004fa6:	4a0b      	ldr	r2, [pc, #44]	; (8004fd4 <LoopFillZerobss+0x22>)
 8004fa8:	4c0b      	ldr	r4, [pc, #44]	; (8004fd8 <LoopFillZerobss+0x26>)
 8004faa:	2300      	movs	r3, #0
 8004fac:	e001      	b.n	8004fb2 <LoopFillZerobss>

08004fae <FillZerobss>:
 8004fae:	6013      	str	r3, [r2, #0]
 8004fb0:	3204      	adds	r2, #4

08004fb2 <LoopFillZerobss>:
 8004fb2:	42a2      	cmp	r2, r4
 8004fb4:	d3fb      	bcc.n	8004fae <FillZerobss>
 8004fb6:	f7ff ffd7 	bl	8004f68 <SystemInit>
 8004fba:	f004 fb65 	bl	8009688 <__libc_init_array>
 8004fbe:	f7ff f80b 	bl	8003fd8 <main>
 8004fc2:	4770      	bx	lr
 8004fc4:	20020000 	.word	0x20020000
 8004fc8:	20000000 	.word	0x20000000
 8004fcc:	200025cc 	.word	0x200025cc
 8004fd0:	0800ce34 	.word	0x0800ce34
 8004fd4:	200025cc 	.word	0x200025cc
 8004fd8:	20003280 	.word	0x20003280

08004fdc <ADC_IRQHandler>:
 8004fdc:	e7fe      	b.n	8004fdc <ADC_IRQHandler>
	...

08004fe0 <HAL_Init>:
 8004fe0:	b580      	push	{r7, lr}
 8004fe2:	af00      	add	r7, sp, #0
 8004fe4:	4b0e      	ldr	r3, [pc, #56]	; (8005020 <HAL_Init+0x40>)
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	4a0d      	ldr	r2, [pc, #52]	; (8005020 <HAL_Init+0x40>)
 8004fea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004fee:	6013      	str	r3, [r2, #0]
 8004ff0:	4b0b      	ldr	r3, [pc, #44]	; (8005020 <HAL_Init+0x40>)
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	4a0a      	ldr	r2, [pc, #40]	; (8005020 <HAL_Init+0x40>)
 8004ff6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004ffa:	6013      	str	r3, [r2, #0]
 8004ffc:	4b08      	ldr	r3, [pc, #32]	; (8005020 <HAL_Init+0x40>)
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	4a07      	ldr	r2, [pc, #28]	; (8005020 <HAL_Init+0x40>)
 8005002:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005006:	6013      	str	r3, [r2, #0]
 8005008:	2003      	movs	r0, #3
 800500a:	f001 fab3 	bl	8006574 <HAL_NVIC_SetPriorityGrouping>
 800500e:	2000      	movs	r0, #0
 8005010:	f000 f808 	bl	8005024 <HAL_InitTick>
 8005014:	f7ff fbf8 	bl	8004808 <HAL_MspInit>
 8005018:	2300      	movs	r3, #0
 800501a:	4618      	mov	r0, r3
 800501c:	bd80      	pop	{r7, pc}
 800501e:	bf00      	nop
 8005020:	40023c00 	.word	0x40023c00

08005024 <HAL_InitTick>:
 8005024:	b580      	push	{r7, lr}
 8005026:	b082      	sub	sp, #8
 8005028:	af00      	add	r7, sp, #0
 800502a:	6078      	str	r0, [r7, #4]
 800502c:	4b12      	ldr	r3, [pc, #72]	; (8005078 <HAL_InitTick+0x54>)
 800502e:	681a      	ldr	r2, [r3, #0]
 8005030:	4b12      	ldr	r3, [pc, #72]	; (800507c <HAL_InitTick+0x58>)
 8005032:	781b      	ldrb	r3, [r3, #0]
 8005034:	4619      	mov	r1, r3
 8005036:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800503a:	fbb3 f3f1 	udiv	r3, r3, r1
 800503e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005042:	4618      	mov	r0, r3
 8005044:	f001 facb 	bl	80065de <HAL_SYSTICK_Config>
 8005048:	4603      	mov	r3, r0
 800504a:	2b00      	cmp	r3, #0
 800504c:	d001      	beq.n	8005052 <HAL_InitTick+0x2e>
 800504e:	2301      	movs	r3, #1
 8005050:	e00e      	b.n	8005070 <HAL_InitTick+0x4c>
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	2b0f      	cmp	r3, #15
 8005056:	d80a      	bhi.n	800506e <HAL_InitTick+0x4a>
 8005058:	2200      	movs	r2, #0
 800505a:	6879      	ldr	r1, [r7, #4]
 800505c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005060:	f001 fa93 	bl	800658a <HAL_NVIC_SetPriority>
 8005064:	4a06      	ldr	r2, [pc, #24]	; (8005080 <HAL_InitTick+0x5c>)
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	6013      	str	r3, [r2, #0]
 800506a:	2300      	movs	r3, #0
 800506c:	e000      	b.n	8005070 <HAL_InitTick+0x4c>
 800506e:	2301      	movs	r3, #1
 8005070:	4618      	mov	r0, r3
 8005072:	3708      	adds	r7, #8
 8005074:	46bd      	mov	sp, r7
 8005076:	bd80      	pop	{r7, pc}
 8005078:	200023f0 	.word	0x200023f0
 800507c:	200023f8 	.word	0x200023f8
 8005080:	200023f4 	.word	0x200023f4

08005084 <HAL_IncTick>:
 8005084:	b480      	push	{r7}
 8005086:	af00      	add	r7, sp, #0
 8005088:	4b06      	ldr	r3, [pc, #24]	; (80050a4 <HAL_IncTick+0x20>)
 800508a:	781b      	ldrb	r3, [r3, #0]
 800508c:	461a      	mov	r2, r3
 800508e:	4b06      	ldr	r3, [pc, #24]	; (80050a8 <HAL_IncTick+0x24>)
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	4413      	add	r3, r2
 8005094:	4a04      	ldr	r2, [pc, #16]	; (80050a8 <HAL_IncTick+0x24>)
 8005096:	6013      	str	r3, [r2, #0]
 8005098:	bf00      	nop
 800509a:	46bd      	mov	sp, r7
 800509c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050a0:	4770      	bx	lr
 80050a2:	bf00      	nop
 80050a4:	200023f8 	.word	0x200023f8
 80050a8:	2000326c 	.word	0x2000326c

080050ac <HAL_GetTick>:
 80050ac:	b480      	push	{r7}
 80050ae:	af00      	add	r7, sp, #0
 80050b0:	4b03      	ldr	r3, [pc, #12]	; (80050c0 <HAL_GetTick+0x14>)
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	4618      	mov	r0, r3
 80050b6:	46bd      	mov	sp, r7
 80050b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050bc:	4770      	bx	lr
 80050be:	bf00      	nop
 80050c0:	2000326c 	.word	0x2000326c

080050c4 <HAL_Delay>:
 80050c4:	b580      	push	{r7, lr}
 80050c6:	b084      	sub	sp, #16
 80050c8:	af00      	add	r7, sp, #0
 80050ca:	6078      	str	r0, [r7, #4]
 80050cc:	f7ff ffee 	bl	80050ac <HAL_GetTick>
 80050d0:	60b8      	str	r0, [r7, #8]
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	60fb      	str	r3, [r7, #12]
 80050d6:	68fb      	ldr	r3, [r7, #12]
 80050d8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80050dc:	d005      	beq.n	80050ea <HAL_Delay+0x26>
 80050de:	4b0a      	ldr	r3, [pc, #40]	; (8005108 <HAL_Delay+0x44>)
 80050e0:	781b      	ldrb	r3, [r3, #0]
 80050e2:	461a      	mov	r2, r3
 80050e4:	68fb      	ldr	r3, [r7, #12]
 80050e6:	4413      	add	r3, r2
 80050e8:	60fb      	str	r3, [r7, #12]
 80050ea:	bf00      	nop
 80050ec:	f7ff ffde 	bl	80050ac <HAL_GetTick>
 80050f0:	4602      	mov	r2, r0
 80050f2:	68bb      	ldr	r3, [r7, #8]
 80050f4:	1ad3      	subs	r3, r2, r3
 80050f6:	68fa      	ldr	r2, [r7, #12]
 80050f8:	429a      	cmp	r2, r3
 80050fa:	d8f7      	bhi.n	80050ec <HAL_Delay+0x28>
 80050fc:	bf00      	nop
 80050fe:	bf00      	nop
 8005100:	3710      	adds	r7, #16
 8005102:	46bd      	mov	sp, r7
 8005104:	bd80      	pop	{r7, pc}
 8005106:	bf00      	nop
 8005108:	200023f8 	.word	0x200023f8

0800510c <HAL_ADC_Init>:
 800510c:	b580      	push	{r7, lr}
 800510e:	b084      	sub	sp, #16
 8005110:	af00      	add	r7, sp, #0
 8005112:	6078      	str	r0, [r7, #4]
 8005114:	2300      	movs	r3, #0
 8005116:	73fb      	strb	r3, [r7, #15]
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	2b00      	cmp	r3, #0
 800511c:	d101      	bne.n	8005122 <HAL_ADC_Init+0x16>
 800511e:	2301      	movs	r3, #1
 8005120:	e033      	b.n	800518a <HAL_ADC_Init+0x7e>
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005126:	2b00      	cmp	r3, #0
 8005128:	d109      	bne.n	800513e <HAL_ADC_Init+0x32>
 800512a:	6878      	ldr	r0, [r7, #4]
 800512c:	f7ff fb94 	bl	8004858 <HAL_ADC_MspInit>
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	2200      	movs	r2, #0
 8005134:	645a      	str	r2, [r3, #68]	; 0x44
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	2200      	movs	r2, #0
 800513a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005142:	f003 0310 	and.w	r3, r3, #16
 8005146:	2b00      	cmp	r3, #0
 8005148:	d118      	bne.n	800517c <HAL_ADC_Init+0x70>
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800514e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005152:	f023 0302 	bic.w	r3, r3, #2
 8005156:	f043 0202 	orr.w	r2, r3, #2
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	641a      	str	r2, [r3, #64]	; 0x40
 800515e:	6878      	ldr	r0, [r7, #4]
 8005160:	f000 fab4 	bl	80056cc <ADC_Init>
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	2200      	movs	r2, #0
 8005168:	645a      	str	r2, [r3, #68]	; 0x44
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800516e:	f023 0303 	bic.w	r3, r3, #3
 8005172:	f043 0201 	orr.w	r2, r3, #1
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	641a      	str	r2, [r3, #64]	; 0x40
 800517a:	e001      	b.n	8005180 <HAL_ADC_Init+0x74>
 800517c:	2301      	movs	r3, #1
 800517e:	73fb      	strb	r3, [r7, #15]
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	2200      	movs	r2, #0
 8005184:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005188:	7bfb      	ldrb	r3, [r7, #15]
 800518a:	4618      	mov	r0, r3
 800518c:	3710      	adds	r7, #16
 800518e:	46bd      	mov	sp, r7
 8005190:	bd80      	pop	{r7, pc}
	...

08005194 <HAL_ADC_Start>:
 8005194:	b480      	push	{r7}
 8005196:	b085      	sub	sp, #20
 8005198:	af00      	add	r7, sp, #0
 800519a:	6078      	str	r0, [r7, #4]
 800519c:	2300      	movs	r3, #0
 800519e:	60bb      	str	r3, [r7, #8]
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80051a6:	2b01      	cmp	r3, #1
 80051a8:	d101      	bne.n	80051ae <HAL_ADC_Start+0x1a>
 80051aa:	2302      	movs	r3, #2
 80051ac:	e0b2      	b.n	8005314 <HAL_ADC_Start+0x180>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	2201      	movs	r2, #1
 80051b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	689b      	ldr	r3, [r3, #8]
 80051bc:	f003 0301 	and.w	r3, r3, #1
 80051c0:	2b01      	cmp	r3, #1
 80051c2:	d018      	beq.n	80051f6 <HAL_ADC_Start+0x62>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	689a      	ldr	r2, [r3, #8]
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	f042 0201 	orr.w	r2, r2, #1
 80051d2:	609a      	str	r2, [r3, #8]
 80051d4:	4b52      	ldr	r3, [pc, #328]	; (8005320 <HAL_ADC_Start+0x18c>)
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	4a52      	ldr	r2, [pc, #328]	; (8005324 <HAL_ADC_Start+0x190>)
 80051da:	fba2 2303 	umull	r2, r3, r2, r3
 80051de:	0c9a      	lsrs	r2, r3, #18
 80051e0:	4613      	mov	r3, r2
 80051e2:	005b      	lsls	r3, r3, #1
 80051e4:	4413      	add	r3, r2
 80051e6:	60bb      	str	r3, [r7, #8]
 80051e8:	e002      	b.n	80051f0 <HAL_ADC_Start+0x5c>
 80051ea:	68bb      	ldr	r3, [r7, #8]
 80051ec:	3b01      	subs	r3, #1
 80051ee:	60bb      	str	r3, [r7, #8]
 80051f0:	68bb      	ldr	r3, [r7, #8]
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d1f9      	bne.n	80051ea <HAL_ADC_Start+0x56>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	689b      	ldr	r3, [r3, #8]
 80051fc:	f003 0301 	and.w	r3, r3, #1
 8005200:	2b01      	cmp	r3, #1
 8005202:	d17a      	bne.n	80052fa <HAL_ADC_Start+0x166>
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005208:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800520c:	f023 0301 	bic.w	r3, r3, #1
 8005210:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	641a      	str	r2, [r3, #64]	; 0x40
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	685b      	ldr	r3, [r3, #4]
 800521e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005222:	2b00      	cmp	r3, #0
 8005224:	d007      	beq.n	8005236 <HAL_ADC_Start+0xa2>
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800522a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800522e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	641a      	str	r2, [r3, #64]	; 0x40
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800523a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800523e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005242:	d106      	bne.n	8005252 <HAL_ADC_Start+0xbe>
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005248:	f023 0206 	bic.w	r2, r3, #6
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	645a      	str	r2, [r3, #68]	; 0x44
 8005250:	e002      	b.n	8005258 <HAL_ADC_Start+0xc4>
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	2200      	movs	r2, #0
 8005256:	645a      	str	r2, [r3, #68]	; 0x44
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	2200      	movs	r2, #0
 800525c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005260:	4b31      	ldr	r3, [pc, #196]	; (8005328 <HAL_ADC_Start+0x194>)
 8005262:	60fb      	str	r3, [r7, #12]
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800526c:	601a      	str	r2, [r3, #0]
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	685b      	ldr	r3, [r3, #4]
 8005272:	f003 031f 	and.w	r3, r3, #31
 8005276:	2b00      	cmp	r3, #0
 8005278:	d12a      	bne.n	80052d0 <HAL_ADC_Start+0x13c>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	4a2b      	ldr	r2, [pc, #172]	; (800532c <HAL_ADC_Start+0x198>)
 8005280:	4293      	cmp	r3, r2
 8005282:	d015      	beq.n	80052b0 <HAL_ADC_Start+0x11c>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	4a29      	ldr	r2, [pc, #164]	; (8005330 <HAL_ADC_Start+0x19c>)
 800528a:	4293      	cmp	r3, r2
 800528c:	d105      	bne.n	800529a <HAL_ADC_Start+0x106>
 800528e:	4b26      	ldr	r3, [pc, #152]	; (8005328 <HAL_ADC_Start+0x194>)
 8005290:	685b      	ldr	r3, [r3, #4]
 8005292:	f003 031f 	and.w	r3, r3, #31
 8005296:	2b00      	cmp	r3, #0
 8005298:	d00a      	beq.n	80052b0 <HAL_ADC_Start+0x11c>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	4a25      	ldr	r2, [pc, #148]	; (8005334 <HAL_ADC_Start+0x1a0>)
 80052a0:	4293      	cmp	r3, r2
 80052a2:	d136      	bne.n	8005312 <HAL_ADC_Start+0x17e>
 80052a4:	4b20      	ldr	r3, [pc, #128]	; (8005328 <HAL_ADC_Start+0x194>)
 80052a6:	685b      	ldr	r3, [r3, #4]
 80052a8:	f003 0310 	and.w	r3, r3, #16
 80052ac:	2b00      	cmp	r3, #0
 80052ae:	d130      	bne.n	8005312 <HAL_ADC_Start+0x17e>
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	689b      	ldr	r3, [r3, #8]
 80052b6:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80052ba:	2b00      	cmp	r3, #0
 80052bc:	d129      	bne.n	8005312 <HAL_ADC_Start+0x17e>
 80052be:	687b      	ldr	r3, [r7, #4]
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	689a      	ldr	r2, [r3, #8]
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	681b      	ldr	r3, [r3, #0]
 80052c8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80052cc:	609a      	str	r2, [r3, #8]
 80052ce:	e020      	b.n	8005312 <HAL_ADC_Start+0x17e>
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	4a15      	ldr	r2, [pc, #84]	; (800532c <HAL_ADC_Start+0x198>)
 80052d6:	4293      	cmp	r3, r2
 80052d8:	d11b      	bne.n	8005312 <HAL_ADC_Start+0x17e>
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	681b      	ldr	r3, [r3, #0]
 80052de:	689b      	ldr	r3, [r3, #8]
 80052e0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80052e4:	2b00      	cmp	r3, #0
 80052e6:	d114      	bne.n	8005312 <HAL_ADC_Start+0x17e>
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	689a      	ldr	r2, [r3, #8]
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80052f6:	609a      	str	r2, [r3, #8]
 80052f8:	e00b      	b.n	8005312 <HAL_ADC_Start+0x17e>
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052fe:	f043 0210 	orr.w	r2, r3, #16
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	641a      	str	r2, [r3, #64]	; 0x40
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800530a:	f043 0201 	orr.w	r2, r3, #1
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	645a      	str	r2, [r3, #68]	; 0x44
 8005312:	2300      	movs	r3, #0
 8005314:	4618      	mov	r0, r3
 8005316:	3714      	adds	r7, #20
 8005318:	46bd      	mov	sp, r7
 800531a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800531e:	4770      	bx	lr
 8005320:	200023f0 	.word	0x200023f0
 8005324:	431bde83 	.word	0x431bde83
 8005328:	40012300 	.word	0x40012300
 800532c:	40012000 	.word	0x40012000
 8005330:	40012100 	.word	0x40012100
 8005334:	40012200 	.word	0x40012200

08005338 <HAL_ADC_PollForConversion>:
 8005338:	b580      	push	{r7, lr}
 800533a:	b084      	sub	sp, #16
 800533c:	af00      	add	r7, sp, #0
 800533e:	6078      	str	r0, [r7, #4]
 8005340:	6039      	str	r1, [r7, #0]
 8005342:	2300      	movs	r3, #0
 8005344:	60fb      	str	r3, [r7, #12]
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	689b      	ldr	r3, [r3, #8]
 800534c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005350:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005354:	d113      	bne.n	800537e <HAL_ADC_PollForConversion+0x46>
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	681b      	ldr	r3, [r3, #0]
 800535a:	689b      	ldr	r3, [r3, #8]
 800535c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005360:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005364:	d10b      	bne.n	800537e <HAL_ADC_PollForConversion+0x46>
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800536a:	f043 0220 	orr.w	r2, r3, #32
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	641a      	str	r2, [r3, #64]	; 0x40
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	2200      	movs	r2, #0
 8005376:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800537a:	2301      	movs	r3, #1
 800537c:	e063      	b.n	8005446 <HAL_ADC_PollForConversion+0x10e>
 800537e:	f7ff fe95 	bl	80050ac <HAL_GetTick>
 8005382:	60f8      	str	r0, [r7, #12]
 8005384:	e021      	b.n	80053ca <HAL_ADC_PollForConversion+0x92>
 8005386:	683b      	ldr	r3, [r7, #0]
 8005388:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800538c:	d01d      	beq.n	80053ca <HAL_ADC_PollForConversion+0x92>
 800538e:	683b      	ldr	r3, [r7, #0]
 8005390:	2b00      	cmp	r3, #0
 8005392:	d007      	beq.n	80053a4 <HAL_ADC_PollForConversion+0x6c>
 8005394:	f7ff fe8a 	bl	80050ac <HAL_GetTick>
 8005398:	4602      	mov	r2, r0
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	1ad3      	subs	r3, r2, r3
 800539e:	683a      	ldr	r2, [r7, #0]
 80053a0:	429a      	cmp	r2, r3
 80053a2:	d212      	bcs.n	80053ca <HAL_ADC_PollForConversion+0x92>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	f003 0302 	and.w	r3, r3, #2
 80053ae:	2b02      	cmp	r3, #2
 80053b0:	d00b      	beq.n	80053ca <HAL_ADC_PollForConversion+0x92>
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053b6:	f043 0204 	orr.w	r2, r3, #4
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	641a      	str	r2, [r3, #64]	; 0x40
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	2200      	movs	r2, #0
 80053c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80053c6:	2303      	movs	r3, #3
 80053c8:	e03d      	b.n	8005446 <HAL_ADC_PollForConversion+0x10e>
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	f003 0302 	and.w	r3, r3, #2
 80053d4:	2b02      	cmp	r3, #2
 80053d6:	d1d6      	bne.n	8005386 <HAL_ADC_PollForConversion+0x4e>
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	f06f 0212 	mvn.w	r2, #18
 80053e0:	601a      	str	r2, [r3, #0]
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053e6:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	641a      	str	r2, [r3, #64]	; 0x40
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	689b      	ldr	r3, [r3, #8]
 80053f4:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d123      	bne.n	8005444 <HAL_ADC_PollForConversion+0x10c>
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	7e1b      	ldrb	r3, [r3, #24]
 8005400:	2b00      	cmp	r3, #0
 8005402:	d11f      	bne.n	8005444 <HAL_ADC_PollForConversion+0x10c>
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	681b      	ldr	r3, [r3, #0]
 8005408:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800540a:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 800540e:	2b00      	cmp	r3, #0
 8005410:	d006      	beq.n	8005420 <HAL_ADC_PollForConversion+0xe8>
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	689b      	ldr	r3, [r3, #8]
 8005418:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800541c:	2b00      	cmp	r3, #0
 800541e:	d111      	bne.n	8005444 <HAL_ADC_PollForConversion+0x10c>
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005424:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	641a      	str	r2, [r3, #64]	; 0x40
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005430:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005434:	2b00      	cmp	r3, #0
 8005436:	d105      	bne.n	8005444 <HAL_ADC_PollForConversion+0x10c>
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800543c:	f043 0201 	orr.w	r2, r3, #1
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	641a      	str	r2, [r3, #64]	; 0x40
 8005444:	2300      	movs	r3, #0
 8005446:	4618      	mov	r0, r3
 8005448:	3710      	adds	r7, #16
 800544a:	46bd      	mov	sp, r7
 800544c:	bd80      	pop	{r7, pc}

0800544e <HAL_ADC_GetValue>:
 800544e:	b480      	push	{r7}
 8005450:	b083      	sub	sp, #12
 8005452:	af00      	add	r7, sp, #0
 8005454:	6078      	str	r0, [r7, #4]
 8005456:	687b      	ldr	r3, [r7, #4]
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800545c:	4618      	mov	r0, r3
 800545e:	370c      	adds	r7, #12
 8005460:	46bd      	mov	sp, r7
 8005462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005466:	4770      	bx	lr

08005468 <HAL_ADC_ConfigChannel>:
 8005468:	b480      	push	{r7}
 800546a:	b085      	sub	sp, #20
 800546c:	af00      	add	r7, sp, #0
 800546e:	6078      	str	r0, [r7, #4]
 8005470:	6039      	str	r1, [r7, #0]
 8005472:	2300      	movs	r3, #0
 8005474:	60bb      	str	r3, [r7, #8]
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800547c:	2b01      	cmp	r3, #1
 800547e:	d101      	bne.n	8005484 <HAL_ADC_ConfigChannel+0x1c>
 8005480:	2302      	movs	r3, #2
 8005482:	e113      	b.n	80056ac <HAL_ADC_ConfigChannel+0x244>
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	2201      	movs	r2, #1
 8005488:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800548c:	683b      	ldr	r3, [r7, #0]
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	2b09      	cmp	r3, #9
 8005492:	d925      	bls.n	80054e0 <HAL_ADC_ConfigChannel+0x78>
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	681b      	ldr	r3, [r3, #0]
 8005498:	68d9      	ldr	r1, [r3, #12]
 800549a:	683b      	ldr	r3, [r7, #0]
 800549c:	681b      	ldr	r3, [r3, #0]
 800549e:	b29b      	uxth	r3, r3
 80054a0:	461a      	mov	r2, r3
 80054a2:	4613      	mov	r3, r2
 80054a4:	005b      	lsls	r3, r3, #1
 80054a6:	4413      	add	r3, r2
 80054a8:	3b1e      	subs	r3, #30
 80054aa:	2207      	movs	r2, #7
 80054ac:	fa02 f303 	lsl.w	r3, r2, r3
 80054b0:	43da      	mvns	r2, r3
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	400a      	ands	r2, r1
 80054b8:	60da      	str	r2, [r3, #12]
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	681b      	ldr	r3, [r3, #0]
 80054be:	68d9      	ldr	r1, [r3, #12]
 80054c0:	683b      	ldr	r3, [r7, #0]
 80054c2:	689a      	ldr	r2, [r3, #8]
 80054c4:	683b      	ldr	r3, [r7, #0]
 80054c6:	681b      	ldr	r3, [r3, #0]
 80054c8:	b29b      	uxth	r3, r3
 80054ca:	4618      	mov	r0, r3
 80054cc:	4603      	mov	r3, r0
 80054ce:	005b      	lsls	r3, r3, #1
 80054d0:	4403      	add	r3, r0
 80054d2:	3b1e      	subs	r3, #30
 80054d4:	409a      	lsls	r2, r3
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	430a      	orrs	r2, r1
 80054dc:	60da      	str	r2, [r3, #12]
 80054de:	e022      	b.n	8005526 <HAL_ADC_ConfigChannel+0xbe>
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	6919      	ldr	r1, [r3, #16]
 80054e6:	683b      	ldr	r3, [r7, #0]
 80054e8:	681b      	ldr	r3, [r3, #0]
 80054ea:	b29b      	uxth	r3, r3
 80054ec:	461a      	mov	r2, r3
 80054ee:	4613      	mov	r3, r2
 80054f0:	005b      	lsls	r3, r3, #1
 80054f2:	4413      	add	r3, r2
 80054f4:	2207      	movs	r2, #7
 80054f6:	fa02 f303 	lsl.w	r3, r2, r3
 80054fa:	43da      	mvns	r2, r3
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	400a      	ands	r2, r1
 8005502:	611a      	str	r2, [r3, #16]
 8005504:	687b      	ldr	r3, [r7, #4]
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	6919      	ldr	r1, [r3, #16]
 800550a:	683b      	ldr	r3, [r7, #0]
 800550c:	689a      	ldr	r2, [r3, #8]
 800550e:	683b      	ldr	r3, [r7, #0]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	b29b      	uxth	r3, r3
 8005514:	4618      	mov	r0, r3
 8005516:	4603      	mov	r3, r0
 8005518:	005b      	lsls	r3, r3, #1
 800551a:	4403      	add	r3, r0
 800551c:	409a      	lsls	r2, r3
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	430a      	orrs	r2, r1
 8005524:	611a      	str	r2, [r3, #16]
 8005526:	683b      	ldr	r3, [r7, #0]
 8005528:	685b      	ldr	r3, [r3, #4]
 800552a:	2b06      	cmp	r3, #6
 800552c:	d824      	bhi.n	8005578 <HAL_ADC_ConfigChannel+0x110>
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	681b      	ldr	r3, [r3, #0]
 8005532:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005534:	683b      	ldr	r3, [r7, #0]
 8005536:	685a      	ldr	r2, [r3, #4]
 8005538:	4613      	mov	r3, r2
 800553a:	009b      	lsls	r3, r3, #2
 800553c:	4413      	add	r3, r2
 800553e:	3b05      	subs	r3, #5
 8005540:	221f      	movs	r2, #31
 8005542:	fa02 f303 	lsl.w	r3, r2, r3
 8005546:	43da      	mvns	r2, r3
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	400a      	ands	r2, r1
 800554e:	635a      	str	r2, [r3, #52]	; 0x34
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	681b      	ldr	r3, [r3, #0]
 8005554:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005556:	683b      	ldr	r3, [r7, #0]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	b29b      	uxth	r3, r3
 800555c:	4618      	mov	r0, r3
 800555e:	683b      	ldr	r3, [r7, #0]
 8005560:	685a      	ldr	r2, [r3, #4]
 8005562:	4613      	mov	r3, r2
 8005564:	009b      	lsls	r3, r3, #2
 8005566:	4413      	add	r3, r2
 8005568:	3b05      	subs	r3, #5
 800556a:	fa00 f203 	lsl.w	r2, r0, r3
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	430a      	orrs	r2, r1
 8005574:	635a      	str	r2, [r3, #52]	; 0x34
 8005576:	e04c      	b.n	8005612 <HAL_ADC_ConfigChannel+0x1aa>
 8005578:	683b      	ldr	r3, [r7, #0]
 800557a:	685b      	ldr	r3, [r3, #4]
 800557c:	2b0c      	cmp	r3, #12
 800557e:	d824      	bhi.n	80055ca <HAL_ADC_ConfigChannel+0x162>
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005586:	683b      	ldr	r3, [r7, #0]
 8005588:	685a      	ldr	r2, [r3, #4]
 800558a:	4613      	mov	r3, r2
 800558c:	009b      	lsls	r3, r3, #2
 800558e:	4413      	add	r3, r2
 8005590:	3b23      	subs	r3, #35	; 0x23
 8005592:	221f      	movs	r2, #31
 8005594:	fa02 f303 	lsl.w	r3, r2, r3
 8005598:	43da      	mvns	r2, r3
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	400a      	ands	r2, r1
 80055a0:	631a      	str	r2, [r3, #48]	; 0x30
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80055a8:	683b      	ldr	r3, [r7, #0]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	b29b      	uxth	r3, r3
 80055ae:	4618      	mov	r0, r3
 80055b0:	683b      	ldr	r3, [r7, #0]
 80055b2:	685a      	ldr	r2, [r3, #4]
 80055b4:	4613      	mov	r3, r2
 80055b6:	009b      	lsls	r3, r3, #2
 80055b8:	4413      	add	r3, r2
 80055ba:	3b23      	subs	r3, #35	; 0x23
 80055bc:	fa00 f203 	lsl.w	r2, r0, r3
 80055c0:	687b      	ldr	r3, [r7, #4]
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	430a      	orrs	r2, r1
 80055c6:	631a      	str	r2, [r3, #48]	; 0x30
 80055c8:	e023      	b.n	8005612 <HAL_ADC_ConfigChannel+0x1aa>
 80055ca:	687b      	ldr	r3, [r7, #4]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80055d0:	683b      	ldr	r3, [r7, #0]
 80055d2:	685a      	ldr	r2, [r3, #4]
 80055d4:	4613      	mov	r3, r2
 80055d6:	009b      	lsls	r3, r3, #2
 80055d8:	4413      	add	r3, r2
 80055da:	3b41      	subs	r3, #65	; 0x41
 80055dc:	221f      	movs	r2, #31
 80055de:	fa02 f303 	lsl.w	r3, r2, r3
 80055e2:	43da      	mvns	r2, r3
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	681b      	ldr	r3, [r3, #0]
 80055e8:	400a      	ands	r2, r1
 80055ea:	62da      	str	r2, [r3, #44]	; 0x2c
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80055f2:	683b      	ldr	r3, [r7, #0]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	b29b      	uxth	r3, r3
 80055f8:	4618      	mov	r0, r3
 80055fa:	683b      	ldr	r3, [r7, #0]
 80055fc:	685a      	ldr	r2, [r3, #4]
 80055fe:	4613      	mov	r3, r2
 8005600:	009b      	lsls	r3, r3, #2
 8005602:	4413      	add	r3, r2
 8005604:	3b41      	subs	r3, #65	; 0x41
 8005606:	fa00 f203 	lsl.w	r2, r0, r3
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	681b      	ldr	r3, [r3, #0]
 800560e:	430a      	orrs	r2, r1
 8005610:	62da      	str	r2, [r3, #44]	; 0x2c
 8005612:	4b29      	ldr	r3, [pc, #164]	; (80056b8 <HAL_ADC_ConfigChannel+0x250>)
 8005614:	60fb      	str	r3, [r7, #12]
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	4a28      	ldr	r2, [pc, #160]	; (80056bc <HAL_ADC_ConfigChannel+0x254>)
 800561c:	4293      	cmp	r3, r2
 800561e:	d10f      	bne.n	8005640 <HAL_ADC_ConfigChannel+0x1d8>
 8005620:	683b      	ldr	r3, [r7, #0]
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	2b12      	cmp	r3, #18
 8005626:	d10b      	bne.n	8005640 <HAL_ADC_ConfigChannel+0x1d8>
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	685b      	ldr	r3, [r3, #4]
 800562c:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	605a      	str	r2, [r3, #4]
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	685b      	ldr	r3, [r3, #4]
 8005638:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800563c:	68fb      	ldr	r3, [r7, #12]
 800563e:	605a      	str	r2, [r3, #4]
 8005640:	687b      	ldr	r3, [r7, #4]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	4a1d      	ldr	r2, [pc, #116]	; (80056bc <HAL_ADC_ConfigChannel+0x254>)
 8005646:	4293      	cmp	r3, r2
 8005648:	d12b      	bne.n	80056a2 <HAL_ADC_ConfigChannel+0x23a>
 800564a:	683b      	ldr	r3, [r7, #0]
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	4a1c      	ldr	r2, [pc, #112]	; (80056c0 <HAL_ADC_ConfigChannel+0x258>)
 8005650:	4293      	cmp	r3, r2
 8005652:	d003      	beq.n	800565c <HAL_ADC_ConfigChannel+0x1f4>
 8005654:	683b      	ldr	r3, [r7, #0]
 8005656:	681b      	ldr	r3, [r3, #0]
 8005658:	2b11      	cmp	r3, #17
 800565a:	d122      	bne.n	80056a2 <HAL_ADC_ConfigChannel+0x23a>
 800565c:	68fb      	ldr	r3, [r7, #12]
 800565e:	685b      	ldr	r3, [r3, #4]
 8005660:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	605a      	str	r2, [r3, #4]
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	685b      	ldr	r3, [r3, #4]
 800566c:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	605a      	str	r2, [r3, #4]
 8005674:	683b      	ldr	r3, [r7, #0]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	4a11      	ldr	r2, [pc, #68]	; (80056c0 <HAL_ADC_ConfigChannel+0x258>)
 800567a:	4293      	cmp	r3, r2
 800567c:	d111      	bne.n	80056a2 <HAL_ADC_ConfigChannel+0x23a>
 800567e:	4b11      	ldr	r3, [pc, #68]	; (80056c4 <HAL_ADC_ConfigChannel+0x25c>)
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	4a11      	ldr	r2, [pc, #68]	; (80056c8 <HAL_ADC_ConfigChannel+0x260>)
 8005684:	fba2 2303 	umull	r2, r3, r2, r3
 8005688:	0c9a      	lsrs	r2, r3, #18
 800568a:	4613      	mov	r3, r2
 800568c:	009b      	lsls	r3, r3, #2
 800568e:	4413      	add	r3, r2
 8005690:	005b      	lsls	r3, r3, #1
 8005692:	60bb      	str	r3, [r7, #8]
 8005694:	e002      	b.n	800569c <HAL_ADC_ConfigChannel+0x234>
 8005696:	68bb      	ldr	r3, [r7, #8]
 8005698:	3b01      	subs	r3, #1
 800569a:	60bb      	str	r3, [r7, #8]
 800569c:	68bb      	ldr	r3, [r7, #8]
 800569e:	2b00      	cmp	r3, #0
 80056a0:	d1f9      	bne.n	8005696 <HAL_ADC_ConfigChannel+0x22e>
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	2200      	movs	r2, #0
 80056a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80056aa:	2300      	movs	r3, #0
 80056ac:	4618      	mov	r0, r3
 80056ae:	3714      	adds	r7, #20
 80056b0:	46bd      	mov	sp, r7
 80056b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056b6:	4770      	bx	lr
 80056b8:	40012300 	.word	0x40012300
 80056bc:	40012000 	.word	0x40012000
 80056c0:	10000012 	.word	0x10000012
 80056c4:	200023f0 	.word	0x200023f0
 80056c8:	431bde83 	.word	0x431bde83

080056cc <ADC_Init>:
 80056cc:	b480      	push	{r7}
 80056ce:	b085      	sub	sp, #20
 80056d0:	af00      	add	r7, sp, #0
 80056d2:	6078      	str	r0, [r7, #4]
 80056d4:	4b79      	ldr	r3, [pc, #484]	; (80058bc <ADC_Init+0x1f0>)
 80056d6:	60fb      	str	r3, [r7, #12]
 80056d8:	68fb      	ldr	r3, [r7, #12]
 80056da:	685b      	ldr	r3, [r3, #4]
 80056dc:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80056e0:	68fb      	ldr	r3, [r7, #12]
 80056e2:	605a      	str	r2, [r3, #4]
 80056e4:	68fb      	ldr	r3, [r7, #12]
 80056e6:	685a      	ldr	r2, [r3, #4]
 80056e8:	687b      	ldr	r3, [r7, #4]
 80056ea:	685b      	ldr	r3, [r3, #4]
 80056ec:	431a      	orrs	r2, r3
 80056ee:	68fb      	ldr	r3, [r7, #12]
 80056f0:	605a      	str	r2, [r3, #4]
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	685a      	ldr	r2, [r3, #4]
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005700:	605a      	str	r2, [r3, #4]
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	6859      	ldr	r1, [r3, #4]
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	691b      	ldr	r3, [r3, #16]
 800570c:	021a      	lsls	r2, r3, #8
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	430a      	orrs	r2, r1
 8005714:	605a      	str	r2, [r3, #4]
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	681b      	ldr	r3, [r3, #0]
 800571a:	685a      	ldr	r2, [r3, #4]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005724:	605a      	str	r2, [r3, #4]
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	6859      	ldr	r1, [r3, #4]
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	689a      	ldr	r2, [r3, #8]
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	430a      	orrs	r2, r1
 8005736:	605a      	str	r2, [r3, #4]
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	681b      	ldr	r3, [r3, #0]
 800573c:	689a      	ldr	r2, [r3, #8]
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005746:	609a      	str	r2, [r3, #8]
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	6899      	ldr	r1, [r3, #8]
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	68da      	ldr	r2, [r3, #12]
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	430a      	orrs	r2, r1
 8005758:	609a      	str	r2, [r3, #8]
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800575e:	4a58      	ldr	r2, [pc, #352]	; (80058c0 <ADC_Init+0x1f4>)
 8005760:	4293      	cmp	r3, r2
 8005762:	d022      	beq.n	80057aa <ADC_Init+0xde>
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	689a      	ldr	r2, [r3, #8]
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005772:	609a      	str	r2, [r3, #8]
 8005774:	687b      	ldr	r3, [r7, #4]
 8005776:	681b      	ldr	r3, [r3, #0]
 8005778:	6899      	ldr	r1, [r3, #8]
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	681b      	ldr	r3, [r3, #0]
 8005782:	430a      	orrs	r2, r1
 8005784:	609a      	str	r2, [r3, #8]
 8005786:	687b      	ldr	r3, [r7, #4]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	689a      	ldr	r2, [r3, #8]
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005794:	609a      	str	r2, [r3, #8]
 8005796:	687b      	ldr	r3, [r7, #4]
 8005798:	681b      	ldr	r3, [r3, #0]
 800579a:	6899      	ldr	r1, [r3, #8]
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	430a      	orrs	r2, r1
 80057a6:	609a      	str	r2, [r3, #8]
 80057a8:	e00f      	b.n	80057ca <ADC_Init+0xfe>
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	689a      	ldr	r2, [r3, #8]
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80057b8:	609a      	str	r2, [r3, #8]
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	681b      	ldr	r3, [r3, #0]
 80057be:	689a      	ldr	r2, [r3, #8]
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80057c8:	609a      	str	r2, [r3, #8]
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	689a      	ldr	r2, [r3, #8]
 80057d0:	687b      	ldr	r3, [r7, #4]
 80057d2:	681b      	ldr	r3, [r3, #0]
 80057d4:	f022 0202 	bic.w	r2, r2, #2
 80057d8:	609a      	str	r2, [r3, #8]
 80057da:	687b      	ldr	r3, [r7, #4]
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	6899      	ldr	r1, [r3, #8]
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	7e1b      	ldrb	r3, [r3, #24]
 80057e4:	005a      	lsls	r2, r3, #1
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	430a      	orrs	r2, r1
 80057ec:	609a      	str	r2, [r3, #8]
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80057f4:	2b00      	cmp	r3, #0
 80057f6:	d01b      	beq.n	8005830 <ADC_Init+0x164>
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	685a      	ldr	r2, [r3, #4]
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005806:	605a      	str	r2, [r3, #4]
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	685a      	ldr	r2, [r3, #4]
 800580e:	687b      	ldr	r3, [r7, #4]
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005816:	605a      	str	r2, [r3, #4]
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	6859      	ldr	r1, [r3, #4]
 800581e:	687b      	ldr	r3, [r7, #4]
 8005820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005822:	3b01      	subs	r3, #1
 8005824:	035a      	lsls	r2, r3, #13
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	430a      	orrs	r2, r1
 800582c:	605a      	str	r2, [r3, #4]
 800582e:	e007      	b.n	8005840 <ADC_Init+0x174>
 8005830:	687b      	ldr	r3, [r7, #4]
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	685a      	ldr	r2, [r3, #4]
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800583e:	605a      	str	r2, [r3, #4]
 8005840:	687b      	ldr	r3, [r7, #4]
 8005842:	681b      	ldr	r3, [r3, #0]
 8005844:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800584e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	681b      	ldr	r3, [r3, #0]
 8005854:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	69db      	ldr	r3, [r3, #28]
 800585a:	3b01      	subs	r3, #1
 800585c:	051a      	lsls	r2, r3, #20
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	430a      	orrs	r2, r1
 8005864:	62da      	str	r2, [r3, #44]	; 0x2c
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	681b      	ldr	r3, [r3, #0]
 800586a:	689a      	ldr	r2, [r3, #8]
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005874:	609a      	str	r2, [r3, #8]
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	681b      	ldr	r3, [r3, #0]
 800587a:	6899      	ldr	r1, [r3, #8]
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8005882:	025a      	lsls	r2, r3, #9
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	681b      	ldr	r3, [r3, #0]
 8005888:	430a      	orrs	r2, r1
 800588a:	609a      	str	r2, [r3, #8]
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	689a      	ldr	r2, [r3, #8]
 8005892:	687b      	ldr	r3, [r7, #4]
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800589a:	609a      	str	r2, [r3, #8]
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	6899      	ldr	r1, [r3, #8]
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	695b      	ldr	r3, [r3, #20]
 80058a6:	029a      	lsls	r2, r3, #10
 80058a8:	687b      	ldr	r3, [r7, #4]
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	430a      	orrs	r2, r1
 80058ae:	609a      	str	r2, [r3, #8]
 80058b0:	bf00      	nop
 80058b2:	3714      	adds	r7, #20
 80058b4:	46bd      	mov	sp, r7
 80058b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058ba:	4770      	bx	lr
 80058bc:	40012300 	.word	0x40012300
 80058c0:	0f000001 	.word	0x0f000001

080058c4 <HAL_CAN_Init>:
 80058c4:	b580      	push	{r7, lr}
 80058c6:	b084      	sub	sp, #16
 80058c8:	af00      	add	r7, sp, #0
 80058ca:	6078      	str	r0, [r7, #4]
 80058cc:	687b      	ldr	r3, [r7, #4]
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	d101      	bne.n	80058d6 <HAL_CAN_Init+0x12>
 80058d2:	2301      	movs	r3, #1
 80058d4:	e0ed      	b.n	8005ab2 <HAL_CAN_Init+0x1ee>
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80058dc:	b2db      	uxtb	r3, r3
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d102      	bne.n	80058e8 <HAL_CAN_Init+0x24>
 80058e2:	6878      	ldr	r0, [r7, #4]
 80058e4:	f7ff f82c 	bl	8004940 <HAL_CAN_MspInit>
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	681a      	ldr	r2, [r3, #0]
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	f042 0201 	orr.w	r2, r2, #1
 80058f6:	601a      	str	r2, [r3, #0]
 80058f8:	f7ff fbd8 	bl	80050ac <HAL_GetTick>
 80058fc:	60f8      	str	r0, [r7, #12]
 80058fe:	e012      	b.n	8005926 <HAL_CAN_Init+0x62>
 8005900:	f7ff fbd4 	bl	80050ac <HAL_GetTick>
 8005904:	4602      	mov	r2, r0
 8005906:	68fb      	ldr	r3, [r7, #12]
 8005908:	1ad3      	subs	r3, r2, r3
 800590a:	2b0a      	cmp	r3, #10
 800590c:	d90b      	bls.n	8005926 <HAL_CAN_Init+0x62>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005912:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	625a      	str	r2, [r3, #36]	; 0x24
 800591a:	687b      	ldr	r3, [r7, #4]
 800591c:	2205      	movs	r2, #5
 800591e:	f883 2020 	strb.w	r2, [r3, #32]
 8005922:	2301      	movs	r3, #1
 8005924:	e0c5      	b.n	8005ab2 <HAL_CAN_Init+0x1ee>
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	685b      	ldr	r3, [r3, #4]
 800592c:	f003 0301 	and.w	r3, r3, #1
 8005930:	2b00      	cmp	r3, #0
 8005932:	d0e5      	beq.n	8005900 <HAL_CAN_Init+0x3c>
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	681a      	ldr	r2, [r3, #0]
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	f022 0202 	bic.w	r2, r2, #2
 8005942:	601a      	str	r2, [r3, #0]
 8005944:	f7ff fbb2 	bl	80050ac <HAL_GetTick>
 8005948:	60f8      	str	r0, [r7, #12]
 800594a:	e012      	b.n	8005972 <HAL_CAN_Init+0xae>
 800594c:	f7ff fbae 	bl	80050ac <HAL_GetTick>
 8005950:	4602      	mov	r2, r0
 8005952:	68fb      	ldr	r3, [r7, #12]
 8005954:	1ad3      	subs	r3, r2, r3
 8005956:	2b0a      	cmp	r3, #10
 8005958:	d90b      	bls.n	8005972 <HAL_CAN_Init+0xae>
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800595e:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	625a      	str	r2, [r3, #36]	; 0x24
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	2205      	movs	r2, #5
 800596a:	f883 2020 	strb.w	r2, [r3, #32]
 800596e:	2301      	movs	r3, #1
 8005970:	e09f      	b.n	8005ab2 <HAL_CAN_Init+0x1ee>
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	685b      	ldr	r3, [r3, #4]
 8005978:	f003 0302 	and.w	r3, r3, #2
 800597c:	2b00      	cmp	r3, #0
 800597e:	d1e5      	bne.n	800594c <HAL_CAN_Init+0x88>
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	7e1b      	ldrb	r3, [r3, #24]
 8005984:	2b01      	cmp	r3, #1
 8005986:	d108      	bne.n	800599a <HAL_CAN_Init+0xd6>
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	681b      	ldr	r3, [r3, #0]
 800598c:	681a      	ldr	r2, [r3, #0]
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	681b      	ldr	r3, [r3, #0]
 8005992:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005996:	601a      	str	r2, [r3, #0]
 8005998:	e007      	b.n	80059aa <HAL_CAN_Init+0xe6>
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	681a      	ldr	r2, [r3, #0]
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80059a8:	601a      	str	r2, [r3, #0]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	7e5b      	ldrb	r3, [r3, #25]
 80059ae:	2b01      	cmp	r3, #1
 80059b0:	d108      	bne.n	80059c4 <HAL_CAN_Init+0x100>
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	681a      	ldr	r2, [r3, #0]
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80059c0:	601a      	str	r2, [r3, #0]
 80059c2:	e007      	b.n	80059d4 <HAL_CAN_Init+0x110>
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	681a      	ldr	r2, [r3, #0]
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80059d2:	601a      	str	r2, [r3, #0]
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	7e9b      	ldrb	r3, [r3, #26]
 80059d8:	2b01      	cmp	r3, #1
 80059da:	d108      	bne.n	80059ee <HAL_CAN_Init+0x12a>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	681a      	ldr	r2, [r3, #0]
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	f042 0220 	orr.w	r2, r2, #32
 80059ea:	601a      	str	r2, [r3, #0]
 80059ec:	e007      	b.n	80059fe <HAL_CAN_Init+0x13a>
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	681a      	ldr	r2, [r3, #0]
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	f022 0220 	bic.w	r2, r2, #32
 80059fc:	601a      	str	r2, [r3, #0]
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	7edb      	ldrb	r3, [r3, #27]
 8005a02:	2b01      	cmp	r3, #1
 8005a04:	d108      	bne.n	8005a18 <HAL_CAN_Init+0x154>
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	681b      	ldr	r3, [r3, #0]
 8005a0a:	681a      	ldr	r2, [r3, #0]
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	681b      	ldr	r3, [r3, #0]
 8005a10:	f022 0210 	bic.w	r2, r2, #16
 8005a14:	601a      	str	r2, [r3, #0]
 8005a16:	e007      	b.n	8005a28 <HAL_CAN_Init+0x164>
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	681a      	ldr	r2, [r3, #0]
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	681b      	ldr	r3, [r3, #0]
 8005a22:	f042 0210 	orr.w	r2, r2, #16
 8005a26:	601a      	str	r2, [r3, #0]
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	7f1b      	ldrb	r3, [r3, #28]
 8005a2c:	2b01      	cmp	r3, #1
 8005a2e:	d108      	bne.n	8005a42 <HAL_CAN_Init+0x17e>
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	681a      	ldr	r2, [r3, #0]
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	681b      	ldr	r3, [r3, #0]
 8005a3a:	f042 0208 	orr.w	r2, r2, #8
 8005a3e:	601a      	str	r2, [r3, #0]
 8005a40:	e007      	b.n	8005a52 <HAL_CAN_Init+0x18e>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	681a      	ldr	r2, [r3, #0]
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	f022 0208 	bic.w	r2, r2, #8
 8005a50:	601a      	str	r2, [r3, #0]
 8005a52:	687b      	ldr	r3, [r7, #4]
 8005a54:	7f5b      	ldrb	r3, [r3, #29]
 8005a56:	2b01      	cmp	r3, #1
 8005a58:	d108      	bne.n	8005a6c <HAL_CAN_Init+0x1a8>
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	681a      	ldr	r2, [r3, #0]
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	681b      	ldr	r3, [r3, #0]
 8005a64:	f042 0204 	orr.w	r2, r2, #4
 8005a68:	601a      	str	r2, [r3, #0]
 8005a6a:	e007      	b.n	8005a7c <HAL_CAN_Init+0x1b8>
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	681a      	ldr	r2, [r3, #0]
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f022 0204 	bic.w	r2, r2, #4
 8005a7a:	601a      	str	r2, [r3, #0]
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	689a      	ldr	r2, [r3, #8]
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	68db      	ldr	r3, [r3, #12]
 8005a84:	431a      	orrs	r2, r3
 8005a86:	687b      	ldr	r3, [r7, #4]
 8005a88:	691b      	ldr	r3, [r3, #16]
 8005a8a:	431a      	orrs	r2, r3
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	695b      	ldr	r3, [r3, #20]
 8005a90:	ea42 0103 	orr.w	r1, r2, r3
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	685b      	ldr	r3, [r3, #4]
 8005a98:	1e5a      	subs	r2, r3, #1
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	430a      	orrs	r2, r1
 8005aa0:	61da      	str	r2, [r3, #28]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	2200      	movs	r2, #0
 8005aa6:	625a      	str	r2, [r3, #36]	; 0x24
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	2201      	movs	r2, #1
 8005aac:	f883 2020 	strb.w	r2, [r3, #32]
 8005ab0:	2300      	movs	r3, #0
 8005ab2:	4618      	mov	r0, r3
 8005ab4:	3710      	adds	r7, #16
 8005ab6:	46bd      	mov	sp, r7
 8005ab8:	bd80      	pop	{r7, pc}
	...

08005abc <HAL_CAN_ConfigFilter>:
 8005abc:	b480      	push	{r7}
 8005abe:	b087      	sub	sp, #28
 8005ac0:	af00      	add	r7, sp, #0
 8005ac2:	6078      	str	r0, [r7, #4]
 8005ac4:	6039      	str	r1, [r7, #0]
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	617b      	str	r3, [r7, #20]
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005ad2:	74fb      	strb	r3, [r7, #19]
 8005ad4:	7cfb      	ldrb	r3, [r7, #19]
 8005ad6:	2b01      	cmp	r3, #1
 8005ad8:	d003      	beq.n	8005ae2 <HAL_CAN_ConfigFilter+0x26>
 8005ada:	7cfb      	ldrb	r3, [r7, #19]
 8005adc:	2b02      	cmp	r3, #2
 8005ade:	f040 80be 	bne.w	8005c5e <HAL_CAN_ConfigFilter+0x1a2>
 8005ae2:	4b65      	ldr	r3, [pc, #404]	; (8005c78 <HAL_CAN_ConfigFilter+0x1bc>)
 8005ae4:	617b      	str	r3, [r7, #20]
 8005ae6:	697b      	ldr	r3, [r7, #20]
 8005ae8:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8005aec:	f043 0201 	orr.w	r2, r3, #1
 8005af0:	697b      	ldr	r3, [r7, #20]
 8005af2:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8005af6:	697b      	ldr	r3, [r7, #20]
 8005af8:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8005afc:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 8005b00:	697b      	ldr	r3, [r7, #20]
 8005b02:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8005b06:	697b      	ldr	r3, [r7, #20]
 8005b08:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8005b0c:	683b      	ldr	r3, [r7, #0]
 8005b0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b10:	021b      	lsls	r3, r3, #8
 8005b12:	431a      	orrs	r2, r3
 8005b14:	697b      	ldr	r3, [r7, #20]
 8005b16:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8005b1a:	683b      	ldr	r3, [r7, #0]
 8005b1c:	695b      	ldr	r3, [r3, #20]
 8005b1e:	f003 031f 	and.w	r3, r3, #31
 8005b22:	2201      	movs	r2, #1
 8005b24:	fa02 f303 	lsl.w	r3, r2, r3
 8005b28:	60fb      	str	r3, [r7, #12]
 8005b2a:	697b      	ldr	r3, [r7, #20]
 8005b2c:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 8005b30:	68fb      	ldr	r3, [r7, #12]
 8005b32:	43db      	mvns	r3, r3
 8005b34:	401a      	ands	r2, r3
 8005b36:	697b      	ldr	r3, [r7, #20]
 8005b38:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 8005b3c:	683b      	ldr	r3, [r7, #0]
 8005b3e:	69db      	ldr	r3, [r3, #28]
 8005b40:	2b00      	cmp	r3, #0
 8005b42:	d123      	bne.n	8005b8c <HAL_CAN_ConfigFilter+0xd0>
 8005b44:	697b      	ldr	r3, [r7, #20]
 8005b46:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8005b4a:	68fb      	ldr	r3, [r7, #12]
 8005b4c:	43db      	mvns	r3, r3
 8005b4e:	401a      	ands	r2, r3
 8005b50:	697b      	ldr	r3, [r7, #20]
 8005b52:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8005b56:	683b      	ldr	r3, [r7, #0]
 8005b58:	68db      	ldr	r3, [r3, #12]
 8005b5a:	0419      	lsls	r1, r3, #16
 8005b5c:	683b      	ldr	r3, [r7, #0]
 8005b5e:	685b      	ldr	r3, [r3, #4]
 8005b60:	b29b      	uxth	r3, r3
 8005b62:	683a      	ldr	r2, [r7, #0]
 8005b64:	6952      	ldr	r2, [r2, #20]
 8005b66:	4319      	orrs	r1, r3
 8005b68:	697b      	ldr	r3, [r7, #20]
 8005b6a:	3248      	adds	r2, #72	; 0x48
 8005b6c:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8005b70:	683b      	ldr	r3, [r7, #0]
 8005b72:	689b      	ldr	r3, [r3, #8]
 8005b74:	0419      	lsls	r1, r3, #16
 8005b76:	683b      	ldr	r3, [r7, #0]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	b29a      	uxth	r2, r3
 8005b7c:	683b      	ldr	r3, [r7, #0]
 8005b7e:	695b      	ldr	r3, [r3, #20]
 8005b80:	430a      	orrs	r2, r1
 8005b82:	6979      	ldr	r1, [r7, #20]
 8005b84:	3348      	adds	r3, #72	; 0x48
 8005b86:	00db      	lsls	r3, r3, #3
 8005b88:	440b      	add	r3, r1
 8005b8a:	605a      	str	r2, [r3, #4]
 8005b8c:	683b      	ldr	r3, [r7, #0]
 8005b8e:	69db      	ldr	r3, [r3, #28]
 8005b90:	2b01      	cmp	r3, #1
 8005b92:	d122      	bne.n	8005bda <HAL_CAN_ConfigFilter+0x11e>
 8005b94:	697b      	ldr	r3, [r7, #20]
 8005b96:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8005b9a:	68fb      	ldr	r3, [r7, #12]
 8005b9c:	431a      	orrs	r2, r3
 8005b9e:	697b      	ldr	r3, [r7, #20]
 8005ba0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8005ba4:	683b      	ldr	r3, [r7, #0]
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	0419      	lsls	r1, r3, #16
 8005baa:	683b      	ldr	r3, [r7, #0]
 8005bac:	685b      	ldr	r3, [r3, #4]
 8005bae:	b29b      	uxth	r3, r3
 8005bb0:	683a      	ldr	r2, [r7, #0]
 8005bb2:	6952      	ldr	r2, [r2, #20]
 8005bb4:	4319      	orrs	r1, r3
 8005bb6:	697b      	ldr	r3, [r7, #20]
 8005bb8:	3248      	adds	r2, #72	; 0x48
 8005bba:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8005bbe:	683b      	ldr	r3, [r7, #0]
 8005bc0:	689b      	ldr	r3, [r3, #8]
 8005bc2:	0419      	lsls	r1, r3, #16
 8005bc4:	683b      	ldr	r3, [r7, #0]
 8005bc6:	68db      	ldr	r3, [r3, #12]
 8005bc8:	b29a      	uxth	r2, r3
 8005bca:	683b      	ldr	r3, [r7, #0]
 8005bcc:	695b      	ldr	r3, [r3, #20]
 8005bce:	430a      	orrs	r2, r1
 8005bd0:	6979      	ldr	r1, [r7, #20]
 8005bd2:	3348      	adds	r3, #72	; 0x48
 8005bd4:	00db      	lsls	r3, r3, #3
 8005bd6:	440b      	add	r3, r1
 8005bd8:	605a      	str	r2, [r3, #4]
 8005bda:	683b      	ldr	r3, [r7, #0]
 8005bdc:	699b      	ldr	r3, [r3, #24]
 8005bde:	2b00      	cmp	r3, #0
 8005be0:	d109      	bne.n	8005bf6 <HAL_CAN_ConfigFilter+0x13a>
 8005be2:	697b      	ldr	r3, [r7, #20]
 8005be4:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	43db      	mvns	r3, r3
 8005bec:	401a      	ands	r2, r3
 8005bee:	697b      	ldr	r3, [r7, #20]
 8005bf0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8005bf4:	e007      	b.n	8005c06 <HAL_CAN_ConfigFilter+0x14a>
 8005bf6:	697b      	ldr	r3, [r7, #20]
 8005bf8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8005bfc:	68fb      	ldr	r3, [r7, #12]
 8005bfe:	431a      	orrs	r2, r3
 8005c00:	697b      	ldr	r3, [r7, #20]
 8005c02:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8005c06:	683b      	ldr	r3, [r7, #0]
 8005c08:	691b      	ldr	r3, [r3, #16]
 8005c0a:	2b00      	cmp	r3, #0
 8005c0c:	d109      	bne.n	8005c22 <HAL_CAN_ConfigFilter+0x166>
 8005c0e:	697b      	ldr	r3, [r7, #20]
 8005c10:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	43db      	mvns	r3, r3
 8005c18:	401a      	ands	r2, r3
 8005c1a:	697b      	ldr	r3, [r7, #20]
 8005c1c:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8005c20:	e007      	b.n	8005c32 <HAL_CAN_ConfigFilter+0x176>
 8005c22:	697b      	ldr	r3, [r7, #20]
 8005c24:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 8005c28:	68fb      	ldr	r3, [r7, #12]
 8005c2a:	431a      	orrs	r2, r3
 8005c2c:	697b      	ldr	r3, [r7, #20]
 8005c2e:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8005c32:	683b      	ldr	r3, [r7, #0]
 8005c34:	6a1b      	ldr	r3, [r3, #32]
 8005c36:	2b01      	cmp	r3, #1
 8005c38:	d107      	bne.n	8005c4a <HAL_CAN_ConfigFilter+0x18e>
 8005c3a:	697b      	ldr	r3, [r7, #20]
 8005c3c:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 8005c40:	68fb      	ldr	r3, [r7, #12]
 8005c42:	431a      	orrs	r2, r3
 8005c44:	697b      	ldr	r3, [r7, #20]
 8005c46:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 8005c4a:	697b      	ldr	r3, [r7, #20]
 8005c4c:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8005c50:	f023 0201 	bic.w	r2, r3, #1
 8005c54:	697b      	ldr	r3, [r7, #20]
 8005c56:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	e006      	b.n	8005c6c <HAL_CAN_ConfigFilter+0x1b0>
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c62:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	625a      	str	r2, [r3, #36]	; 0x24
 8005c6a:	2301      	movs	r3, #1
 8005c6c:	4618      	mov	r0, r3
 8005c6e:	371c      	adds	r7, #28
 8005c70:	46bd      	mov	sp, r7
 8005c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c76:	4770      	bx	lr
 8005c78:	40006400 	.word	0x40006400

08005c7c <HAL_CAN_Start>:
 8005c7c:	b580      	push	{r7, lr}
 8005c7e:	b084      	sub	sp, #16
 8005c80:	af00      	add	r7, sp, #0
 8005c82:	6078      	str	r0, [r7, #4]
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005c8a:	b2db      	uxtb	r3, r3
 8005c8c:	2b01      	cmp	r3, #1
 8005c8e:	d12e      	bne.n	8005cee <HAL_CAN_Start+0x72>
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	2202      	movs	r2, #2
 8005c94:	f883 2020 	strb.w	r2, [r3, #32]
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	681a      	ldr	r2, [r3, #0]
 8005c9e:	687b      	ldr	r3, [r7, #4]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	f022 0201 	bic.w	r2, r2, #1
 8005ca6:	601a      	str	r2, [r3, #0]
 8005ca8:	f7ff fa00 	bl	80050ac <HAL_GetTick>
 8005cac:	60f8      	str	r0, [r7, #12]
 8005cae:	e012      	b.n	8005cd6 <HAL_CAN_Start+0x5a>
 8005cb0:	f7ff f9fc 	bl	80050ac <HAL_GetTick>
 8005cb4:	4602      	mov	r2, r0
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	1ad3      	subs	r3, r2, r3
 8005cba:	2b0a      	cmp	r3, #10
 8005cbc:	d90b      	bls.n	8005cd6 <HAL_CAN_Start+0x5a>
 8005cbe:	687b      	ldr	r3, [r7, #4]
 8005cc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cc2:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8005cc6:	687b      	ldr	r3, [r7, #4]
 8005cc8:	625a      	str	r2, [r3, #36]	; 0x24
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	2205      	movs	r2, #5
 8005cce:	f883 2020 	strb.w	r2, [r3, #32]
 8005cd2:	2301      	movs	r3, #1
 8005cd4:	e012      	b.n	8005cfc <HAL_CAN_Start+0x80>
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	685b      	ldr	r3, [r3, #4]
 8005cdc:	f003 0301 	and.w	r3, r3, #1
 8005ce0:	2b00      	cmp	r3, #0
 8005ce2:	d1e5      	bne.n	8005cb0 <HAL_CAN_Start+0x34>
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	2200      	movs	r2, #0
 8005ce8:	625a      	str	r2, [r3, #36]	; 0x24
 8005cea:	2300      	movs	r3, #0
 8005cec:	e006      	b.n	8005cfc <HAL_CAN_Start+0x80>
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cf2:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	625a      	str	r2, [r3, #36]	; 0x24
 8005cfa:	2301      	movs	r3, #1
 8005cfc:	4618      	mov	r0, r3
 8005cfe:	3710      	adds	r7, #16
 8005d00:	46bd      	mov	sp, r7
 8005d02:	bd80      	pop	{r7, pc}

08005d04 <HAL_CAN_GetRxMessage>:
 8005d04:	b480      	push	{r7}
 8005d06:	b087      	sub	sp, #28
 8005d08:	af00      	add	r7, sp, #0
 8005d0a:	60f8      	str	r0, [r7, #12]
 8005d0c:	60b9      	str	r1, [r7, #8]
 8005d0e:	607a      	str	r2, [r7, #4]
 8005d10:	603b      	str	r3, [r7, #0]
 8005d12:	68fb      	ldr	r3, [r7, #12]
 8005d14:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005d18:	75fb      	strb	r3, [r7, #23]
 8005d1a:	7dfb      	ldrb	r3, [r7, #23]
 8005d1c:	2b01      	cmp	r3, #1
 8005d1e:	d003      	beq.n	8005d28 <HAL_CAN_GetRxMessage+0x24>
 8005d20:	7dfb      	ldrb	r3, [r7, #23]
 8005d22:	2b02      	cmp	r3, #2
 8005d24:	f040 80f3 	bne.w	8005f0e <HAL_CAN_GetRxMessage+0x20a>
 8005d28:	68bb      	ldr	r3, [r7, #8]
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d10e      	bne.n	8005d4c <HAL_CAN_GetRxMessage+0x48>
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	68db      	ldr	r3, [r3, #12]
 8005d34:	f003 0303 	and.w	r3, r3, #3
 8005d38:	2b00      	cmp	r3, #0
 8005d3a:	d116      	bne.n	8005d6a <HAL_CAN_GetRxMessage+0x66>
 8005d3c:	68fb      	ldr	r3, [r7, #12]
 8005d3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d40:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	625a      	str	r2, [r3, #36]	; 0x24
 8005d48:	2301      	movs	r3, #1
 8005d4a:	e0e7      	b.n	8005f1c <HAL_CAN_GetRxMessage+0x218>
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	691b      	ldr	r3, [r3, #16]
 8005d52:	f003 0303 	and.w	r3, r3, #3
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d107      	bne.n	8005d6a <HAL_CAN_GetRxMessage+0x66>
 8005d5a:	68fb      	ldr	r3, [r7, #12]
 8005d5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d5e:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8005d62:	68fb      	ldr	r3, [r7, #12]
 8005d64:	625a      	str	r2, [r3, #36]	; 0x24
 8005d66:	2301      	movs	r3, #1
 8005d68:	e0d8      	b.n	8005f1c <HAL_CAN_GetRxMessage+0x218>
 8005d6a:	68fb      	ldr	r3, [r7, #12]
 8005d6c:	681a      	ldr	r2, [r3, #0]
 8005d6e:	68bb      	ldr	r3, [r7, #8]
 8005d70:	331b      	adds	r3, #27
 8005d72:	011b      	lsls	r3, r3, #4
 8005d74:	4413      	add	r3, r2
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	f003 0204 	and.w	r2, r3, #4
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	609a      	str	r2, [r3, #8]
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	689b      	ldr	r3, [r3, #8]
 8005d84:	2b00      	cmp	r3, #0
 8005d86:	d10c      	bne.n	8005da2 <HAL_CAN_GetRxMessage+0x9e>
 8005d88:	68fb      	ldr	r3, [r7, #12]
 8005d8a:	681a      	ldr	r2, [r3, #0]
 8005d8c:	68bb      	ldr	r3, [r7, #8]
 8005d8e:	331b      	adds	r3, #27
 8005d90:	011b      	lsls	r3, r3, #4
 8005d92:	4413      	add	r3, r2
 8005d94:	681b      	ldr	r3, [r3, #0]
 8005d96:	0d5b      	lsrs	r3, r3, #21
 8005d98:	f3c3 020a 	ubfx	r2, r3, #0, #11
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	601a      	str	r2, [r3, #0]
 8005da0:	e00b      	b.n	8005dba <HAL_CAN_GetRxMessage+0xb6>
 8005da2:	68fb      	ldr	r3, [r7, #12]
 8005da4:	681a      	ldr	r2, [r3, #0]
 8005da6:	68bb      	ldr	r3, [r7, #8]
 8005da8:	331b      	adds	r3, #27
 8005daa:	011b      	lsls	r3, r3, #4
 8005dac:	4413      	add	r3, r2
 8005dae:	681b      	ldr	r3, [r3, #0]
 8005db0:	08db      	lsrs	r3, r3, #3
 8005db2:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	605a      	str	r2, [r3, #4]
 8005dba:	68fb      	ldr	r3, [r7, #12]
 8005dbc:	681a      	ldr	r2, [r3, #0]
 8005dbe:	68bb      	ldr	r3, [r7, #8]
 8005dc0:	331b      	adds	r3, #27
 8005dc2:	011b      	lsls	r3, r3, #4
 8005dc4:	4413      	add	r3, r2
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	f003 0202 	and.w	r2, r3, #2
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	60da      	str	r2, [r3, #12]
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	681a      	ldr	r2, [r3, #0]
 8005dd4:	68bb      	ldr	r3, [r7, #8]
 8005dd6:	331b      	adds	r3, #27
 8005dd8:	011b      	lsls	r3, r3, #4
 8005dda:	4413      	add	r3, r2
 8005ddc:	3304      	adds	r3, #4
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	f003 020f 	and.w	r2, r3, #15
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	611a      	str	r2, [r3, #16]
 8005de8:	68fb      	ldr	r3, [r7, #12]
 8005dea:	681a      	ldr	r2, [r3, #0]
 8005dec:	68bb      	ldr	r3, [r7, #8]
 8005dee:	331b      	adds	r3, #27
 8005df0:	011b      	lsls	r3, r3, #4
 8005df2:	4413      	add	r3, r2
 8005df4:	3304      	adds	r3, #4
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	0a1b      	lsrs	r3, r3, #8
 8005dfa:	b2da      	uxtb	r2, r3
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	619a      	str	r2, [r3, #24]
 8005e00:	68fb      	ldr	r3, [r7, #12]
 8005e02:	681a      	ldr	r2, [r3, #0]
 8005e04:	68bb      	ldr	r3, [r7, #8]
 8005e06:	331b      	adds	r3, #27
 8005e08:	011b      	lsls	r3, r3, #4
 8005e0a:	4413      	add	r3, r2
 8005e0c:	3304      	adds	r3, #4
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	0c1b      	lsrs	r3, r3, #16
 8005e12:	b29a      	uxth	r2, r3
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	615a      	str	r2, [r3, #20]
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	681a      	ldr	r2, [r3, #0]
 8005e1c:	68bb      	ldr	r3, [r7, #8]
 8005e1e:	011b      	lsls	r3, r3, #4
 8005e20:	4413      	add	r3, r2
 8005e22:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8005e26:	681b      	ldr	r3, [r3, #0]
 8005e28:	b2da      	uxtb	r2, r3
 8005e2a:	683b      	ldr	r3, [r7, #0]
 8005e2c:	701a      	strb	r2, [r3, #0]
 8005e2e:	68fb      	ldr	r3, [r7, #12]
 8005e30:	681a      	ldr	r2, [r3, #0]
 8005e32:	68bb      	ldr	r3, [r7, #8]
 8005e34:	011b      	lsls	r3, r3, #4
 8005e36:	4413      	add	r3, r2
 8005e38:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	0a1a      	lsrs	r2, r3, #8
 8005e40:	683b      	ldr	r3, [r7, #0]
 8005e42:	3301      	adds	r3, #1
 8005e44:	b2d2      	uxtb	r2, r2
 8005e46:	701a      	strb	r2, [r3, #0]
 8005e48:	68fb      	ldr	r3, [r7, #12]
 8005e4a:	681a      	ldr	r2, [r3, #0]
 8005e4c:	68bb      	ldr	r3, [r7, #8]
 8005e4e:	011b      	lsls	r3, r3, #4
 8005e50:	4413      	add	r3, r2
 8005e52:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	0c1a      	lsrs	r2, r3, #16
 8005e5a:	683b      	ldr	r3, [r7, #0]
 8005e5c:	3302      	adds	r3, #2
 8005e5e:	b2d2      	uxtb	r2, r2
 8005e60:	701a      	strb	r2, [r3, #0]
 8005e62:	68fb      	ldr	r3, [r7, #12]
 8005e64:	681a      	ldr	r2, [r3, #0]
 8005e66:	68bb      	ldr	r3, [r7, #8]
 8005e68:	011b      	lsls	r3, r3, #4
 8005e6a:	4413      	add	r3, r2
 8005e6c:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8005e70:	681b      	ldr	r3, [r3, #0]
 8005e72:	0e1a      	lsrs	r2, r3, #24
 8005e74:	683b      	ldr	r3, [r7, #0]
 8005e76:	3303      	adds	r3, #3
 8005e78:	b2d2      	uxtb	r2, r2
 8005e7a:	701a      	strb	r2, [r3, #0]
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	681a      	ldr	r2, [r3, #0]
 8005e80:	68bb      	ldr	r3, [r7, #8]
 8005e82:	011b      	lsls	r3, r3, #4
 8005e84:	4413      	add	r3, r2
 8005e86:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8005e8a:	681a      	ldr	r2, [r3, #0]
 8005e8c:	683b      	ldr	r3, [r7, #0]
 8005e8e:	3304      	adds	r3, #4
 8005e90:	b2d2      	uxtb	r2, r2
 8005e92:	701a      	strb	r2, [r3, #0]
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	681a      	ldr	r2, [r3, #0]
 8005e98:	68bb      	ldr	r3, [r7, #8]
 8005e9a:	011b      	lsls	r3, r3, #4
 8005e9c:	4413      	add	r3, r2
 8005e9e:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	0a1a      	lsrs	r2, r3, #8
 8005ea6:	683b      	ldr	r3, [r7, #0]
 8005ea8:	3305      	adds	r3, #5
 8005eaa:	b2d2      	uxtb	r2, r2
 8005eac:	701a      	strb	r2, [r3, #0]
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	681a      	ldr	r2, [r3, #0]
 8005eb2:	68bb      	ldr	r3, [r7, #8]
 8005eb4:	011b      	lsls	r3, r3, #4
 8005eb6:	4413      	add	r3, r2
 8005eb8:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	0c1a      	lsrs	r2, r3, #16
 8005ec0:	683b      	ldr	r3, [r7, #0]
 8005ec2:	3306      	adds	r3, #6
 8005ec4:	b2d2      	uxtb	r2, r2
 8005ec6:	701a      	strb	r2, [r3, #0]
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	681a      	ldr	r2, [r3, #0]
 8005ecc:	68bb      	ldr	r3, [r7, #8]
 8005ece:	011b      	lsls	r3, r3, #4
 8005ed0:	4413      	add	r3, r2
 8005ed2:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8005ed6:	681b      	ldr	r3, [r3, #0]
 8005ed8:	0e1a      	lsrs	r2, r3, #24
 8005eda:	683b      	ldr	r3, [r7, #0]
 8005edc:	3307      	adds	r3, #7
 8005ede:	b2d2      	uxtb	r2, r2
 8005ee0:	701a      	strb	r2, [r3, #0]
 8005ee2:	68bb      	ldr	r3, [r7, #8]
 8005ee4:	2b00      	cmp	r3, #0
 8005ee6:	d108      	bne.n	8005efa <HAL_CAN_GetRxMessage+0x1f6>
 8005ee8:	68fb      	ldr	r3, [r7, #12]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	68da      	ldr	r2, [r3, #12]
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	f042 0220 	orr.w	r2, r2, #32
 8005ef6:	60da      	str	r2, [r3, #12]
 8005ef8:	e007      	b.n	8005f0a <HAL_CAN_GetRxMessage+0x206>
 8005efa:	68fb      	ldr	r3, [r7, #12]
 8005efc:	681b      	ldr	r3, [r3, #0]
 8005efe:	691a      	ldr	r2, [r3, #16]
 8005f00:	68fb      	ldr	r3, [r7, #12]
 8005f02:	681b      	ldr	r3, [r3, #0]
 8005f04:	f042 0220 	orr.w	r2, r2, #32
 8005f08:	611a      	str	r2, [r3, #16]
 8005f0a:	2300      	movs	r3, #0
 8005f0c:	e006      	b.n	8005f1c <HAL_CAN_GetRxMessage+0x218>
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f12:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8005f16:	68fb      	ldr	r3, [r7, #12]
 8005f18:	625a      	str	r2, [r3, #36]	; 0x24
 8005f1a:	2301      	movs	r3, #1
 8005f1c:	4618      	mov	r0, r3
 8005f1e:	371c      	adds	r7, #28
 8005f20:	46bd      	mov	sp, r7
 8005f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f26:	4770      	bx	lr

08005f28 <HAL_CAN_ActivateNotification>:
 8005f28:	b480      	push	{r7}
 8005f2a:	b085      	sub	sp, #20
 8005f2c:	af00      	add	r7, sp, #0
 8005f2e:	6078      	str	r0, [r7, #4]
 8005f30:	6039      	str	r1, [r7, #0]
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005f38:	73fb      	strb	r3, [r7, #15]
 8005f3a:	7bfb      	ldrb	r3, [r7, #15]
 8005f3c:	2b01      	cmp	r3, #1
 8005f3e:	d002      	beq.n	8005f46 <HAL_CAN_ActivateNotification+0x1e>
 8005f40:	7bfb      	ldrb	r3, [r7, #15]
 8005f42:	2b02      	cmp	r3, #2
 8005f44:	d109      	bne.n	8005f5a <HAL_CAN_ActivateNotification+0x32>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	6959      	ldr	r1, [r3, #20]
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	683a      	ldr	r2, [r7, #0]
 8005f52:	430a      	orrs	r2, r1
 8005f54:	615a      	str	r2, [r3, #20]
 8005f56:	2300      	movs	r3, #0
 8005f58:	e006      	b.n	8005f68 <HAL_CAN_ActivateNotification+0x40>
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f5e:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	625a      	str	r2, [r3, #36]	; 0x24
 8005f66:	2301      	movs	r3, #1
 8005f68:	4618      	mov	r0, r3
 8005f6a:	3714      	adds	r7, #20
 8005f6c:	46bd      	mov	sp, r7
 8005f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f72:	4770      	bx	lr

08005f74 <HAL_CAN_IRQHandler>:
 8005f74:	b580      	push	{r7, lr}
 8005f76:	b08a      	sub	sp, #40	; 0x28
 8005f78:	af00      	add	r7, sp, #0
 8005f7a:	6078      	str	r0, [r7, #4]
 8005f7c:	2300      	movs	r3, #0
 8005f7e:	627b      	str	r3, [r7, #36]	; 0x24
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	681b      	ldr	r3, [r3, #0]
 8005f84:	695b      	ldr	r3, [r3, #20]
 8005f86:	623b      	str	r3, [r7, #32]
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	685b      	ldr	r3, [r3, #4]
 8005f8e:	61fb      	str	r3, [r7, #28]
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	689b      	ldr	r3, [r3, #8]
 8005f96:	61bb      	str	r3, [r7, #24]
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	68db      	ldr	r3, [r3, #12]
 8005f9e:	617b      	str	r3, [r7, #20]
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	691b      	ldr	r3, [r3, #16]
 8005fa6:	613b      	str	r3, [r7, #16]
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	699b      	ldr	r3, [r3, #24]
 8005fae:	60fb      	str	r3, [r7, #12]
 8005fb0:	6a3b      	ldr	r3, [r7, #32]
 8005fb2:	f003 0301 	and.w	r3, r3, #1
 8005fb6:	2b00      	cmp	r3, #0
 8005fb8:	d07c      	beq.n	80060b4 <HAL_CAN_IRQHandler+0x140>
 8005fba:	69bb      	ldr	r3, [r7, #24]
 8005fbc:	f003 0301 	and.w	r3, r3, #1
 8005fc0:	2b00      	cmp	r3, #0
 8005fc2:	d023      	beq.n	800600c <HAL_CAN_IRQHandler+0x98>
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	2201      	movs	r2, #1
 8005fca:	609a      	str	r2, [r3, #8]
 8005fcc:	69bb      	ldr	r3, [r7, #24]
 8005fce:	f003 0302 	and.w	r3, r3, #2
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d003      	beq.n	8005fde <HAL_CAN_IRQHandler+0x6a>
 8005fd6:	6878      	ldr	r0, [r7, #4]
 8005fd8:	f000 f983 	bl	80062e2 <HAL_CAN_TxMailbox0CompleteCallback>
 8005fdc:	e016      	b.n	800600c <HAL_CAN_IRQHandler+0x98>
 8005fde:	69bb      	ldr	r3, [r7, #24]
 8005fe0:	f003 0304 	and.w	r3, r3, #4
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d004      	beq.n	8005ff2 <HAL_CAN_IRQHandler+0x7e>
 8005fe8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005fea:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8005fee:	627b      	str	r3, [r7, #36]	; 0x24
 8005ff0:	e00c      	b.n	800600c <HAL_CAN_IRQHandler+0x98>
 8005ff2:	69bb      	ldr	r3, [r7, #24]
 8005ff4:	f003 0308 	and.w	r3, r3, #8
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d004      	beq.n	8006006 <HAL_CAN_IRQHandler+0x92>
 8005ffc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ffe:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006002:	627b      	str	r3, [r7, #36]	; 0x24
 8006004:	e002      	b.n	800600c <HAL_CAN_IRQHandler+0x98>
 8006006:	6878      	ldr	r0, [r7, #4]
 8006008:	f000 f989 	bl	800631e <HAL_CAN_TxMailbox0AbortCallback>
 800600c:	69bb      	ldr	r3, [r7, #24]
 800600e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006012:	2b00      	cmp	r3, #0
 8006014:	d024      	beq.n	8006060 <HAL_CAN_IRQHandler+0xec>
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800601e:	609a      	str	r2, [r3, #8]
 8006020:	69bb      	ldr	r3, [r7, #24]
 8006022:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006026:	2b00      	cmp	r3, #0
 8006028:	d003      	beq.n	8006032 <HAL_CAN_IRQHandler+0xbe>
 800602a:	6878      	ldr	r0, [r7, #4]
 800602c:	f000 f963 	bl	80062f6 <HAL_CAN_TxMailbox1CompleteCallback>
 8006030:	e016      	b.n	8006060 <HAL_CAN_IRQHandler+0xec>
 8006032:	69bb      	ldr	r3, [r7, #24]
 8006034:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006038:	2b00      	cmp	r3, #0
 800603a:	d004      	beq.n	8006046 <HAL_CAN_IRQHandler+0xd2>
 800603c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800603e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006042:	627b      	str	r3, [r7, #36]	; 0x24
 8006044:	e00c      	b.n	8006060 <HAL_CAN_IRQHandler+0xec>
 8006046:	69bb      	ldr	r3, [r7, #24]
 8006048:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800604c:	2b00      	cmp	r3, #0
 800604e:	d004      	beq.n	800605a <HAL_CAN_IRQHandler+0xe6>
 8006050:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006052:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006056:	627b      	str	r3, [r7, #36]	; 0x24
 8006058:	e002      	b.n	8006060 <HAL_CAN_IRQHandler+0xec>
 800605a:	6878      	ldr	r0, [r7, #4]
 800605c:	f000 f969 	bl	8006332 <HAL_CAN_TxMailbox1AbortCallback>
 8006060:	69bb      	ldr	r3, [r7, #24]
 8006062:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006066:	2b00      	cmp	r3, #0
 8006068:	d024      	beq.n	80060b4 <HAL_CAN_IRQHandler+0x140>
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	681b      	ldr	r3, [r3, #0]
 800606e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006072:	609a      	str	r2, [r3, #8]
 8006074:	69bb      	ldr	r3, [r7, #24]
 8006076:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800607a:	2b00      	cmp	r3, #0
 800607c:	d003      	beq.n	8006086 <HAL_CAN_IRQHandler+0x112>
 800607e:	6878      	ldr	r0, [r7, #4]
 8006080:	f000 f943 	bl	800630a <HAL_CAN_TxMailbox2CompleteCallback>
 8006084:	e016      	b.n	80060b4 <HAL_CAN_IRQHandler+0x140>
 8006086:	69bb      	ldr	r3, [r7, #24]
 8006088:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800608c:	2b00      	cmp	r3, #0
 800608e:	d004      	beq.n	800609a <HAL_CAN_IRQHandler+0x126>
 8006090:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006092:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006096:	627b      	str	r3, [r7, #36]	; 0x24
 8006098:	e00c      	b.n	80060b4 <HAL_CAN_IRQHandler+0x140>
 800609a:	69bb      	ldr	r3, [r7, #24]
 800609c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d004      	beq.n	80060ae <HAL_CAN_IRQHandler+0x13a>
 80060a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80060aa:	627b      	str	r3, [r7, #36]	; 0x24
 80060ac:	e002      	b.n	80060b4 <HAL_CAN_IRQHandler+0x140>
 80060ae:	6878      	ldr	r0, [r7, #4]
 80060b0:	f000 f949 	bl	8006346 <HAL_CAN_TxMailbox2AbortCallback>
 80060b4:	6a3b      	ldr	r3, [r7, #32]
 80060b6:	f003 0308 	and.w	r3, r3, #8
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d00c      	beq.n	80060d8 <HAL_CAN_IRQHandler+0x164>
 80060be:	697b      	ldr	r3, [r7, #20]
 80060c0:	f003 0310 	and.w	r3, r3, #16
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d007      	beq.n	80060d8 <HAL_CAN_IRQHandler+0x164>
 80060c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80060ce:	627b      	str	r3, [r7, #36]	; 0x24
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	681b      	ldr	r3, [r3, #0]
 80060d4:	2210      	movs	r2, #16
 80060d6:	60da      	str	r2, [r3, #12]
 80060d8:	6a3b      	ldr	r3, [r7, #32]
 80060da:	f003 0304 	and.w	r3, r3, #4
 80060de:	2b00      	cmp	r3, #0
 80060e0:	d00b      	beq.n	80060fa <HAL_CAN_IRQHandler+0x186>
 80060e2:	697b      	ldr	r3, [r7, #20]
 80060e4:	f003 0308 	and.w	r3, r3, #8
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d006      	beq.n	80060fa <HAL_CAN_IRQHandler+0x186>
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	2208      	movs	r2, #8
 80060f2:	60da      	str	r2, [r3, #12]
 80060f4:	6878      	ldr	r0, [r7, #4]
 80060f6:	f000 f930 	bl	800635a <HAL_CAN_RxFifo0FullCallback>
 80060fa:	6a3b      	ldr	r3, [r7, #32]
 80060fc:	f003 0302 	and.w	r3, r3, #2
 8006100:	2b00      	cmp	r3, #0
 8006102:	d009      	beq.n	8006118 <HAL_CAN_IRQHandler+0x1a4>
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	68db      	ldr	r3, [r3, #12]
 800610a:	f003 0303 	and.w	r3, r3, #3
 800610e:	2b00      	cmp	r3, #0
 8006110:	d002      	beq.n	8006118 <HAL_CAN_IRQHandler+0x1a4>
 8006112:	6878      	ldr	r0, [r7, #4]
 8006114:	f7fb f814 	bl	8001140 <HAL_CAN_RxFifo0MsgPendingCallback>
 8006118:	6a3b      	ldr	r3, [r7, #32]
 800611a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800611e:	2b00      	cmp	r3, #0
 8006120:	d00c      	beq.n	800613c <HAL_CAN_IRQHandler+0x1c8>
 8006122:	693b      	ldr	r3, [r7, #16]
 8006124:	f003 0310 	and.w	r3, r3, #16
 8006128:	2b00      	cmp	r3, #0
 800612a:	d007      	beq.n	800613c <HAL_CAN_IRQHandler+0x1c8>
 800612c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800612e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8006132:	627b      	str	r3, [r7, #36]	; 0x24
 8006134:	687b      	ldr	r3, [r7, #4]
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	2210      	movs	r2, #16
 800613a:	611a      	str	r2, [r3, #16]
 800613c:	6a3b      	ldr	r3, [r7, #32]
 800613e:	f003 0320 	and.w	r3, r3, #32
 8006142:	2b00      	cmp	r3, #0
 8006144:	d00b      	beq.n	800615e <HAL_CAN_IRQHandler+0x1ea>
 8006146:	693b      	ldr	r3, [r7, #16]
 8006148:	f003 0308 	and.w	r3, r3, #8
 800614c:	2b00      	cmp	r3, #0
 800614e:	d006      	beq.n	800615e <HAL_CAN_IRQHandler+0x1ea>
 8006150:	687b      	ldr	r3, [r7, #4]
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	2208      	movs	r2, #8
 8006156:	611a      	str	r2, [r3, #16]
 8006158:	6878      	ldr	r0, [r7, #4]
 800615a:	f000 f912 	bl	8006382 <HAL_CAN_RxFifo1FullCallback>
 800615e:	6a3b      	ldr	r3, [r7, #32]
 8006160:	f003 0310 	and.w	r3, r3, #16
 8006164:	2b00      	cmp	r3, #0
 8006166:	d009      	beq.n	800617c <HAL_CAN_IRQHandler+0x208>
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	691b      	ldr	r3, [r3, #16]
 800616e:	f003 0303 	and.w	r3, r3, #3
 8006172:	2b00      	cmp	r3, #0
 8006174:	d002      	beq.n	800617c <HAL_CAN_IRQHandler+0x208>
 8006176:	6878      	ldr	r0, [r7, #4]
 8006178:	f000 f8f9 	bl	800636e <HAL_CAN_RxFifo1MsgPendingCallback>
 800617c:	6a3b      	ldr	r3, [r7, #32]
 800617e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006182:	2b00      	cmp	r3, #0
 8006184:	d00b      	beq.n	800619e <HAL_CAN_IRQHandler+0x22a>
 8006186:	69fb      	ldr	r3, [r7, #28]
 8006188:	f003 0310 	and.w	r3, r3, #16
 800618c:	2b00      	cmp	r3, #0
 800618e:	d006      	beq.n	800619e <HAL_CAN_IRQHandler+0x22a>
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	681b      	ldr	r3, [r3, #0]
 8006194:	2210      	movs	r2, #16
 8006196:	605a      	str	r2, [r3, #4]
 8006198:	6878      	ldr	r0, [r7, #4]
 800619a:	f000 f8fc 	bl	8006396 <HAL_CAN_SleepCallback>
 800619e:	6a3b      	ldr	r3, [r7, #32]
 80061a0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	d00b      	beq.n	80061c0 <HAL_CAN_IRQHandler+0x24c>
 80061a8:	69fb      	ldr	r3, [r7, #28]
 80061aa:	f003 0308 	and.w	r3, r3, #8
 80061ae:	2b00      	cmp	r3, #0
 80061b0:	d006      	beq.n	80061c0 <HAL_CAN_IRQHandler+0x24c>
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	2208      	movs	r2, #8
 80061b8:	605a      	str	r2, [r3, #4]
 80061ba:	6878      	ldr	r0, [r7, #4]
 80061bc:	f000 f8f5 	bl	80063aa <HAL_CAN_WakeUpFromRxMsgCallback>
 80061c0:	6a3b      	ldr	r3, [r7, #32]
 80061c2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80061c6:	2b00      	cmp	r3, #0
 80061c8:	d07b      	beq.n	80062c2 <HAL_CAN_IRQHandler+0x34e>
 80061ca:	69fb      	ldr	r3, [r7, #28]
 80061cc:	f003 0304 	and.w	r3, r3, #4
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	d072      	beq.n	80062ba <HAL_CAN_IRQHandler+0x346>
 80061d4:	6a3b      	ldr	r3, [r7, #32]
 80061d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d008      	beq.n	80061f0 <HAL_CAN_IRQHandler+0x27c>
 80061de:	68fb      	ldr	r3, [r7, #12]
 80061e0:	f003 0301 	and.w	r3, r3, #1
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	d003      	beq.n	80061f0 <HAL_CAN_IRQHandler+0x27c>
 80061e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80061ea:	f043 0301 	orr.w	r3, r3, #1
 80061ee:	627b      	str	r3, [r7, #36]	; 0x24
 80061f0:	6a3b      	ldr	r3, [r7, #32]
 80061f2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	d008      	beq.n	800620c <HAL_CAN_IRQHandler+0x298>
 80061fa:	68fb      	ldr	r3, [r7, #12]
 80061fc:	f003 0302 	and.w	r3, r3, #2
 8006200:	2b00      	cmp	r3, #0
 8006202:	d003      	beq.n	800620c <HAL_CAN_IRQHandler+0x298>
 8006204:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006206:	f043 0302 	orr.w	r3, r3, #2
 800620a:	627b      	str	r3, [r7, #36]	; 0x24
 800620c:	6a3b      	ldr	r3, [r7, #32]
 800620e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006212:	2b00      	cmp	r3, #0
 8006214:	d008      	beq.n	8006228 <HAL_CAN_IRQHandler+0x2b4>
 8006216:	68fb      	ldr	r3, [r7, #12]
 8006218:	f003 0304 	and.w	r3, r3, #4
 800621c:	2b00      	cmp	r3, #0
 800621e:	d003      	beq.n	8006228 <HAL_CAN_IRQHandler+0x2b4>
 8006220:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006222:	f043 0304 	orr.w	r3, r3, #4
 8006226:	627b      	str	r3, [r7, #36]	; 0x24
 8006228:	6a3b      	ldr	r3, [r7, #32]
 800622a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800622e:	2b00      	cmp	r3, #0
 8006230:	d043      	beq.n	80062ba <HAL_CAN_IRQHandler+0x346>
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8006238:	2b00      	cmp	r3, #0
 800623a:	d03e      	beq.n	80062ba <HAL_CAN_IRQHandler+0x346>
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8006242:	2b60      	cmp	r3, #96	; 0x60
 8006244:	d02b      	beq.n	800629e <HAL_CAN_IRQHandler+0x32a>
 8006246:	2b60      	cmp	r3, #96	; 0x60
 8006248:	d82e      	bhi.n	80062a8 <HAL_CAN_IRQHandler+0x334>
 800624a:	2b50      	cmp	r3, #80	; 0x50
 800624c:	d022      	beq.n	8006294 <HAL_CAN_IRQHandler+0x320>
 800624e:	2b50      	cmp	r3, #80	; 0x50
 8006250:	d82a      	bhi.n	80062a8 <HAL_CAN_IRQHandler+0x334>
 8006252:	2b40      	cmp	r3, #64	; 0x40
 8006254:	d019      	beq.n	800628a <HAL_CAN_IRQHandler+0x316>
 8006256:	2b40      	cmp	r3, #64	; 0x40
 8006258:	d826      	bhi.n	80062a8 <HAL_CAN_IRQHandler+0x334>
 800625a:	2b30      	cmp	r3, #48	; 0x30
 800625c:	d010      	beq.n	8006280 <HAL_CAN_IRQHandler+0x30c>
 800625e:	2b30      	cmp	r3, #48	; 0x30
 8006260:	d822      	bhi.n	80062a8 <HAL_CAN_IRQHandler+0x334>
 8006262:	2b10      	cmp	r3, #16
 8006264:	d002      	beq.n	800626c <HAL_CAN_IRQHandler+0x2f8>
 8006266:	2b20      	cmp	r3, #32
 8006268:	d005      	beq.n	8006276 <HAL_CAN_IRQHandler+0x302>
 800626a:	e01d      	b.n	80062a8 <HAL_CAN_IRQHandler+0x334>
 800626c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800626e:	f043 0308 	orr.w	r3, r3, #8
 8006272:	627b      	str	r3, [r7, #36]	; 0x24
 8006274:	e019      	b.n	80062aa <HAL_CAN_IRQHandler+0x336>
 8006276:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006278:	f043 0310 	orr.w	r3, r3, #16
 800627c:	627b      	str	r3, [r7, #36]	; 0x24
 800627e:	e014      	b.n	80062aa <HAL_CAN_IRQHandler+0x336>
 8006280:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006282:	f043 0320 	orr.w	r3, r3, #32
 8006286:	627b      	str	r3, [r7, #36]	; 0x24
 8006288:	e00f      	b.n	80062aa <HAL_CAN_IRQHandler+0x336>
 800628a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800628c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006290:	627b      	str	r3, [r7, #36]	; 0x24
 8006292:	e00a      	b.n	80062aa <HAL_CAN_IRQHandler+0x336>
 8006294:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006296:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800629a:	627b      	str	r3, [r7, #36]	; 0x24
 800629c:	e005      	b.n	80062aa <HAL_CAN_IRQHandler+0x336>
 800629e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80062a4:	627b      	str	r3, [r7, #36]	; 0x24
 80062a6:	e000      	b.n	80062aa <HAL_CAN_IRQHandler+0x336>
 80062a8:	bf00      	nop
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	699a      	ldr	r2, [r3, #24]
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80062b8:	619a      	str	r2, [r3, #24]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	2204      	movs	r2, #4
 80062c0:	605a      	str	r2, [r3, #4]
 80062c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	d008      	beq.n	80062da <HAL_CAN_IRQHandler+0x366>
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80062cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062ce:	431a      	orrs	r2, r3
 80062d0:	687b      	ldr	r3, [r7, #4]
 80062d2:	625a      	str	r2, [r3, #36]	; 0x24
 80062d4:	6878      	ldr	r0, [r7, #4]
 80062d6:	f000 f872 	bl	80063be <HAL_CAN_ErrorCallback>
 80062da:	bf00      	nop
 80062dc:	3728      	adds	r7, #40	; 0x28
 80062de:	46bd      	mov	sp, r7
 80062e0:	bd80      	pop	{r7, pc}

080062e2 <HAL_CAN_TxMailbox0CompleteCallback>:
 80062e2:	b480      	push	{r7}
 80062e4:	b083      	sub	sp, #12
 80062e6:	af00      	add	r7, sp, #0
 80062e8:	6078      	str	r0, [r7, #4]
 80062ea:	bf00      	nop
 80062ec:	370c      	adds	r7, #12
 80062ee:	46bd      	mov	sp, r7
 80062f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062f4:	4770      	bx	lr

080062f6 <HAL_CAN_TxMailbox1CompleteCallback>:
 80062f6:	b480      	push	{r7}
 80062f8:	b083      	sub	sp, #12
 80062fa:	af00      	add	r7, sp, #0
 80062fc:	6078      	str	r0, [r7, #4]
 80062fe:	bf00      	nop
 8006300:	370c      	adds	r7, #12
 8006302:	46bd      	mov	sp, r7
 8006304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006308:	4770      	bx	lr

0800630a <HAL_CAN_TxMailbox2CompleteCallback>:
 800630a:	b480      	push	{r7}
 800630c:	b083      	sub	sp, #12
 800630e:	af00      	add	r7, sp, #0
 8006310:	6078      	str	r0, [r7, #4]
 8006312:	bf00      	nop
 8006314:	370c      	adds	r7, #12
 8006316:	46bd      	mov	sp, r7
 8006318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800631c:	4770      	bx	lr

0800631e <HAL_CAN_TxMailbox0AbortCallback>:
 800631e:	b480      	push	{r7}
 8006320:	b083      	sub	sp, #12
 8006322:	af00      	add	r7, sp, #0
 8006324:	6078      	str	r0, [r7, #4]
 8006326:	bf00      	nop
 8006328:	370c      	adds	r7, #12
 800632a:	46bd      	mov	sp, r7
 800632c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006330:	4770      	bx	lr

08006332 <HAL_CAN_TxMailbox1AbortCallback>:
 8006332:	b480      	push	{r7}
 8006334:	b083      	sub	sp, #12
 8006336:	af00      	add	r7, sp, #0
 8006338:	6078      	str	r0, [r7, #4]
 800633a:	bf00      	nop
 800633c:	370c      	adds	r7, #12
 800633e:	46bd      	mov	sp, r7
 8006340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006344:	4770      	bx	lr

08006346 <HAL_CAN_TxMailbox2AbortCallback>:
 8006346:	b480      	push	{r7}
 8006348:	b083      	sub	sp, #12
 800634a:	af00      	add	r7, sp, #0
 800634c:	6078      	str	r0, [r7, #4]
 800634e:	bf00      	nop
 8006350:	370c      	adds	r7, #12
 8006352:	46bd      	mov	sp, r7
 8006354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006358:	4770      	bx	lr

0800635a <HAL_CAN_RxFifo0FullCallback>:
 800635a:	b480      	push	{r7}
 800635c:	b083      	sub	sp, #12
 800635e:	af00      	add	r7, sp, #0
 8006360:	6078      	str	r0, [r7, #4]
 8006362:	bf00      	nop
 8006364:	370c      	adds	r7, #12
 8006366:	46bd      	mov	sp, r7
 8006368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800636c:	4770      	bx	lr

0800636e <HAL_CAN_RxFifo1MsgPendingCallback>:
 800636e:	b480      	push	{r7}
 8006370:	b083      	sub	sp, #12
 8006372:	af00      	add	r7, sp, #0
 8006374:	6078      	str	r0, [r7, #4]
 8006376:	bf00      	nop
 8006378:	370c      	adds	r7, #12
 800637a:	46bd      	mov	sp, r7
 800637c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006380:	4770      	bx	lr

08006382 <HAL_CAN_RxFifo1FullCallback>:
 8006382:	b480      	push	{r7}
 8006384:	b083      	sub	sp, #12
 8006386:	af00      	add	r7, sp, #0
 8006388:	6078      	str	r0, [r7, #4]
 800638a:	bf00      	nop
 800638c:	370c      	adds	r7, #12
 800638e:	46bd      	mov	sp, r7
 8006390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006394:	4770      	bx	lr

08006396 <HAL_CAN_SleepCallback>:
 8006396:	b480      	push	{r7}
 8006398:	b083      	sub	sp, #12
 800639a:	af00      	add	r7, sp, #0
 800639c:	6078      	str	r0, [r7, #4]
 800639e:	bf00      	nop
 80063a0:	370c      	adds	r7, #12
 80063a2:	46bd      	mov	sp, r7
 80063a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063a8:	4770      	bx	lr

080063aa <HAL_CAN_WakeUpFromRxMsgCallback>:
 80063aa:	b480      	push	{r7}
 80063ac:	b083      	sub	sp, #12
 80063ae:	af00      	add	r7, sp, #0
 80063b0:	6078      	str	r0, [r7, #4]
 80063b2:	bf00      	nop
 80063b4:	370c      	adds	r7, #12
 80063b6:	46bd      	mov	sp, r7
 80063b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063bc:	4770      	bx	lr

080063be <HAL_CAN_ErrorCallback>:
 80063be:	b480      	push	{r7}
 80063c0:	b083      	sub	sp, #12
 80063c2:	af00      	add	r7, sp, #0
 80063c4:	6078      	str	r0, [r7, #4]
 80063c6:	bf00      	nop
 80063c8:	370c      	adds	r7, #12
 80063ca:	46bd      	mov	sp, r7
 80063cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d0:	4770      	bx	lr
	...

080063d4 <__NVIC_SetPriorityGrouping>:
 80063d4:	b480      	push	{r7}
 80063d6:	b085      	sub	sp, #20
 80063d8:	af00      	add	r7, sp, #0
 80063da:	6078      	str	r0, [r7, #4]
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	f003 0307 	and.w	r3, r3, #7
 80063e2:	60fb      	str	r3, [r7, #12]
 80063e4:	4b0c      	ldr	r3, [pc, #48]	; (8006418 <__NVIC_SetPriorityGrouping+0x44>)
 80063e6:	68db      	ldr	r3, [r3, #12]
 80063e8:	60bb      	str	r3, [r7, #8]
 80063ea:	68ba      	ldr	r2, [r7, #8]
 80063ec:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80063f0:	4013      	ands	r3, r2
 80063f2:	60bb      	str	r3, [r7, #8]
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	021a      	lsls	r2, r3, #8
 80063f8:	68bb      	ldr	r3, [r7, #8]
 80063fa:	4313      	orrs	r3, r2
 80063fc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006400:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006404:	60bb      	str	r3, [r7, #8]
 8006406:	4a04      	ldr	r2, [pc, #16]	; (8006418 <__NVIC_SetPriorityGrouping+0x44>)
 8006408:	68bb      	ldr	r3, [r7, #8]
 800640a:	60d3      	str	r3, [r2, #12]
 800640c:	bf00      	nop
 800640e:	3714      	adds	r7, #20
 8006410:	46bd      	mov	sp, r7
 8006412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006416:	4770      	bx	lr
 8006418:	e000ed00 	.word	0xe000ed00

0800641c <__NVIC_GetPriorityGrouping>:
 800641c:	b480      	push	{r7}
 800641e:	af00      	add	r7, sp, #0
 8006420:	4b04      	ldr	r3, [pc, #16]	; (8006434 <__NVIC_GetPriorityGrouping+0x18>)
 8006422:	68db      	ldr	r3, [r3, #12]
 8006424:	0a1b      	lsrs	r3, r3, #8
 8006426:	f003 0307 	and.w	r3, r3, #7
 800642a:	4618      	mov	r0, r3
 800642c:	46bd      	mov	sp, r7
 800642e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006432:	4770      	bx	lr
 8006434:	e000ed00 	.word	0xe000ed00

08006438 <__NVIC_EnableIRQ>:
 8006438:	b480      	push	{r7}
 800643a:	b083      	sub	sp, #12
 800643c:	af00      	add	r7, sp, #0
 800643e:	4603      	mov	r3, r0
 8006440:	71fb      	strb	r3, [r7, #7]
 8006442:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006446:	2b00      	cmp	r3, #0
 8006448:	db0b      	blt.n	8006462 <__NVIC_EnableIRQ+0x2a>
 800644a:	79fb      	ldrb	r3, [r7, #7]
 800644c:	f003 021f 	and.w	r2, r3, #31
 8006450:	4907      	ldr	r1, [pc, #28]	; (8006470 <__NVIC_EnableIRQ+0x38>)
 8006452:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006456:	095b      	lsrs	r3, r3, #5
 8006458:	2001      	movs	r0, #1
 800645a:	fa00 f202 	lsl.w	r2, r0, r2
 800645e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006462:	bf00      	nop
 8006464:	370c      	adds	r7, #12
 8006466:	46bd      	mov	sp, r7
 8006468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800646c:	4770      	bx	lr
 800646e:	bf00      	nop
 8006470:	e000e100 	.word	0xe000e100

08006474 <__NVIC_SetPriority>:
 8006474:	b480      	push	{r7}
 8006476:	b083      	sub	sp, #12
 8006478:	af00      	add	r7, sp, #0
 800647a:	4603      	mov	r3, r0
 800647c:	6039      	str	r1, [r7, #0]
 800647e:	71fb      	strb	r3, [r7, #7]
 8006480:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006484:	2b00      	cmp	r3, #0
 8006486:	db0a      	blt.n	800649e <__NVIC_SetPriority+0x2a>
 8006488:	683b      	ldr	r3, [r7, #0]
 800648a:	b2da      	uxtb	r2, r3
 800648c:	490c      	ldr	r1, [pc, #48]	; (80064c0 <__NVIC_SetPriority+0x4c>)
 800648e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006492:	0112      	lsls	r2, r2, #4
 8006494:	b2d2      	uxtb	r2, r2
 8006496:	440b      	add	r3, r1
 8006498:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800649c:	e00a      	b.n	80064b4 <__NVIC_SetPriority+0x40>
 800649e:	683b      	ldr	r3, [r7, #0]
 80064a0:	b2da      	uxtb	r2, r3
 80064a2:	4908      	ldr	r1, [pc, #32]	; (80064c4 <__NVIC_SetPriority+0x50>)
 80064a4:	79fb      	ldrb	r3, [r7, #7]
 80064a6:	f003 030f 	and.w	r3, r3, #15
 80064aa:	3b04      	subs	r3, #4
 80064ac:	0112      	lsls	r2, r2, #4
 80064ae:	b2d2      	uxtb	r2, r2
 80064b0:	440b      	add	r3, r1
 80064b2:	761a      	strb	r2, [r3, #24]
 80064b4:	bf00      	nop
 80064b6:	370c      	adds	r7, #12
 80064b8:	46bd      	mov	sp, r7
 80064ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064be:	4770      	bx	lr
 80064c0:	e000e100 	.word	0xe000e100
 80064c4:	e000ed00 	.word	0xe000ed00

080064c8 <NVIC_EncodePriority>:
 80064c8:	b480      	push	{r7}
 80064ca:	b089      	sub	sp, #36	; 0x24
 80064cc:	af00      	add	r7, sp, #0
 80064ce:	60f8      	str	r0, [r7, #12]
 80064d0:	60b9      	str	r1, [r7, #8]
 80064d2:	607a      	str	r2, [r7, #4]
 80064d4:	68fb      	ldr	r3, [r7, #12]
 80064d6:	f003 0307 	and.w	r3, r3, #7
 80064da:	61fb      	str	r3, [r7, #28]
 80064dc:	69fb      	ldr	r3, [r7, #28]
 80064de:	f1c3 0307 	rsb	r3, r3, #7
 80064e2:	2b04      	cmp	r3, #4
 80064e4:	bf28      	it	cs
 80064e6:	2304      	movcs	r3, #4
 80064e8:	61bb      	str	r3, [r7, #24]
 80064ea:	69fb      	ldr	r3, [r7, #28]
 80064ec:	3304      	adds	r3, #4
 80064ee:	2b06      	cmp	r3, #6
 80064f0:	d902      	bls.n	80064f8 <NVIC_EncodePriority+0x30>
 80064f2:	69fb      	ldr	r3, [r7, #28]
 80064f4:	3b03      	subs	r3, #3
 80064f6:	e000      	b.n	80064fa <NVIC_EncodePriority+0x32>
 80064f8:	2300      	movs	r3, #0
 80064fa:	617b      	str	r3, [r7, #20]
 80064fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006500:	69bb      	ldr	r3, [r7, #24]
 8006502:	fa02 f303 	lsl.w	r3, r2, r3
 8006506:	43da      	mvns	r2, r3
 8006508:	68bb      	ldr	r3, [r7, #8]
 800650a:	401a      	ands	r2, r3
 800650c:	697b      	ldr	r3, [r7, #20]
 800650e:	409a      	lsls	r2, r3
 8006510:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8006514:	697b      	ldr	r3, [r7, #20]
 8006516:	fa01 f303 	lsl.w	r3, r1, r3
 800651a:	43d9      	mvns	r1, r3
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	400b      	ands	r3, r1
 8006520:	4313      	orrs	r3, r2
 8006522:	4618      	mov	r0, r3
 8006524:	3724      	adds	r7, #36	; 0x24
 8006526:	46bd      	mov	sp, r7
 8006528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800652c:	4770      	bx	lr
	...

08006530 <SysTick_Config>:
 8006530:	b580      	push	{r7, lr}
 8006532:	b082      	sub	sp, #8
 8006534:	af00      	add	r7, sp, #0
 8006536:	6078      	str	r0, [r7, #4]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	3b01      	subs	r3, #1
 800653c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006540:	d301      	bcc.n	8006546 <SysTick_Config+0x16>
 8006542:	2301      	movs	r3, #1
 8006544:	e00f      	b.n	8006566 <SysTick_Config+0x36>
 8006546:	4a0a      	ldr	r2, [pc, #40]	; (8006570 <SysTick_Config+0x40>)
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	3b01      	subs	r3, #1
 800654c:	6053      	str	r3, [r2, #4]
 800654e:	210f      	movs	r1, #15
 8006550:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006554:	f7ff ff8e 	bl	8006474 <__NVIC_SetPriority>
 8006558:	4b05      	ldr	r3, [pc, #20]	; (8006570 <SysTick_Config+0x40>)
 800655a:	2200      	movs	r2, #0
 800655c:	609a      	str	r2, [r3, #8]
 800655e:	4b04      	ldr	r3, [pc, #16]	; (8006570 <SysTick_Config+0x40>)
 8006560:	2207      	movs	r2, #7
 8006562:	601a      	str	r2, [r3, #0]
 8006564:	2300      	movs	r3, #0
 8006566:	4618      	mov	r0, r3
 8006568:	3708      	adds	r7, #8
 800656a:	46bd      	mov	sp, r7
 800656c:	bd80      	pop	{r7, pc}
 800656e:	bf00      	nop
 8006570:	e000e010 	.word	0xe000e010

08006574 <HAL_NVIC_SetPriorityGrouping>:
 8006574:	b580      	push	{r7, lr}
 8006576:	b082      	sub	sp, #8
 8006578:	af00      	add	r7, sp, #0
 800657a:	6078      	str	r0, [r7, #4]
 800657c:	6878      	ldr	r0, [r7, #4]
 800657e:	f7ff ff29 	bl	80063d4 <__NVIC_SetPriorityGrouping>
 8006582:	bf00      	nop
 8006584:	3708      	adds	r7, #8
 8006586:	46bd      	mov	sp, r7
 8006588:	bd80      	pop	{r7, pc}

0800658a <HAL_NVIC_SetPriority>:
 800658a:	b580      	push	{r7, lr}
 800658c:	b086      	sub	sp, #24
 800658e:	af00      	add	r7, sp, #0
 8006590:	4603      	mov	r3, r0
 8006592:	60b9      	str	r1, [r7, #8]
 8006594:	607a      	str	r2, [r7, #4]
 8006596:	73fb      	strb	r3, [r7, #15]
 8006598:	2300      	movs	r3, #0
 800659a:	617b      	str	r3, [r7, #20]
 800659c:	f7ff ff3e 	bl	800641c <__NVIC_GetPriorityGrouping>
 80065a0:	6178      	str	r0, [r7, #20]
 80065a2:	687a      	ldr	r2, [r7, #4]
 80065a4:	68b9      	ldr	r1, [r7, #8]
 80065a6:	6978      	ldr	r0, [r7, #20]
 80065a8:	f7ff ff8e 	bl	80064c8 <NVIC_EncodePriority>
 80065ac:	4602      	mov	r2, r0
 80065ae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80065b2:	4611      	mov	r1, r2
 80065b4:	4618      	mov	r0, r3
 80065b6:	f7ff ff5d 	bl	8006474 <__NVIC_SetPriority>
 80065ba:	bf00      	nop
 80065bc:	3718      	adds	r7, #24
 80065be:	46bd      	mov	sp, r7
 80065c0:	bd80      	pop	{r7, pc}

080065c2 <HAL_NVIC_EnableIRQ>:
 80065c2:	b580      	push	{r7, lr}
 80065c4:	b082      	sub	sp, #8
 80065c6:	af00      	add	r7, sp, #0
 80065c8:	4603      	mov	r3, r0
 80065ca:	71fb      	strb	r3, [r7, #7]
 80065cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80065d0:	4618      	mov	r0, r3
 80065d2:	f7ff ff31 	bl	8006438 <__NVIC_EnableIRQ>
 80065d6:	bf00      	nop
 80065d8:	3708      	adds	r7, #8
 80065da:	46bd      	mov	sp, r7
 80065dc:	bd80      	pop	{r7, pc}

080065de <HAL_SYSTICK_Config>:
 80065de:	b580      	push	{r7, lr}
 80065e0:	b082      	sub	sp, #8
 80065e2:	af00      	add	r7, sp, #0
 80065e4:	6078      	str	r0, [r7, #4]
 80065e6:	6878      	ldr	r0, [r7, #4]
 80065e8:	f7ff ffa2 	bl	8006530 <SysTick_Config>
 80065ec:	4603      	mov	r3, r0
 80065ee:	4618      	mov	r0, r3
 80065f0:	3708      	adds	r7, #8
 80065f2:	46bd      	mov	sp, r7
 80065f4:	bd80      	pop	{r7, pc}
	...

080065f8 <HAL_GPIO_Init>:
 80065f8:	b480      	push	{r7}
 80065fa:	b089      	sub	sp, #36	; 0x24
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	6078      	str	r0, [r7, #4]
 8006600:	6039      	str	r1, [r7, #0]
 8006602:	2300      	movs	r3, #0
 8006604:	617b      	str	r3, [r7, #20]
 8006606:	2300      	movs	r3, #0
 8006608:	613b      	str	r3, [r7, #16]
 800660a:	2300      	movs	r3, #0
 800660c:	61bb      	str	r3, [r7, #24]
 800660e:	2300      	movs	r3, #0
 8006610:	61fb      	str	r3, [r7, #28]
 8006612:	e165      	b.n	80068e0 <HAL_GPIO_Init+0x2e8>
 8006614:	2201      	movs	r2, #1
 8006616:	69fb      	ldr	r3, [r7, #28]
 8006618:	fa02 f303 	lsl.w	r3, r2, r3
 800661c:	617b      	str	r3, [r7, #20]
 800661e:	683b      	ldr	r3, [r7, #0]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	697a      	ldr	r2, [r7, #20]
 8006624:	4013      	ands	r3, r2
 8006626:	613b      	str	r3, [r7, #16]
 8006628:	693a      	ldr	r2, [r7, #16]
 800662a:	697b      	ldr	r3, [r7, #20]
 800662c:	429a      	cmp	r2, r3
 800662e:	f040 8154 	bne.w	80068da <HAL_GPIO_Init+0x2e2>
 8006632:	683b      	ldr	r3, [r7, #0]
 8006634:	685b      	ldr	r3, [r3, #4]
 8006636:	f003 0303 	and.w	r3, r3, #3
 800663a:	2b01      	cmp	r3, #1
 800663c:	d005      	beq.n	800664a <HAL_GPIO_Init+0x52>
 800663e:	683b      	ldr	r3, [r7, #0]
 8006640:	685b      	ldr	r3, [r3, #4]
 8006642:	f003 0303 	and.w	r3, r3, #3
 8006646:	2b02      	cmp	r3, #2
 8006648:	d130      	bne.n	80066ac <HAL_GPIO_Init+0xb4>
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	689b      	ldr	r3, [r3, #8]
 800664e:	61bb      	str	r3, [r7, #24]
 8006650:	69fb      	ldr	r3, [r7, #28]
 8006652:	005b      	lsls	r3, r3, #1
 8006654:	2203      	movs	r2, #3
 8006656:	fa02 f303 	lsl.w	r3, r2, r3
 800665a:	43db      	mvns	r3, r3
 800665c:	69ba      	ldr	r2, [r7, #24]
 800665e:	4013      	ands	r3, r2
 8006660:	61bb      	str	r3, [r7, #24]
 8006662:	683b      	ldr	r3, [r7, #0]
 8006664:	68da      	ldr	r2, [r3, #12]
 8006666:	69fb      	ldr	r3, [r7, #28]
 8006668:	005b      	lsls	r3, r3, #1
 800666a:	fa02 f303 	lsl.w	r3, r2, r3
 800666e:	69ba      	ldr	r2, [r7, #24]
 8006670:	4313      	orrs	r3, r2
 8006672:	61bb      	str	r3, [r7, #24]
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	69ba      	ldr	r2, [r7, #24]
 8006678:	609a      	str	r2, [r3, #8]
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	685b      	ldr	r3, [r3, #4]
 800667e:	61bb      	str	r3, [r7, #24]
 8006680:	2201      	movs	r2, #1
 8006682:	69fb      	ldr	r3, [r7, #28]
 8006684:	fa02 f303 	lsl.w	r3, r2, r3
 8006688:	43db      	mvns	r3, r3
 800668a:	69ba      	ldr	r2, [r7, #24]
 800668c:	4013      	ands	r3, r2
 800668e:	61bb      	str	r3, [r7, #24]
 8006690:	683b      	ldr	r3, [r7, #0]
 8006692:	685b      	ldr	r3, [r3, #4]
 8006694:	091b      	lsrs	r3, r3, #4
 8006696:	f003 0201 	and.w	r2, r3, #1
 800669a:	69fb      	ldr	r3, [r7, #28]
 800669c:	fa02 f303 	lsl.w	r3, r2, r3
 80066a0:	69ba      	ldr	r2, [r7, #24]
 80066a2:	4313      	orrs	r3, r2
 80066a4:	61bb      	str	r3, [r7, #24]
 80066a6:	687b      	ldr	r3, [r7, #4]
 80066a8:	69ba      	ldr	r2, [r7, #24]
 80066aa:	605a      	str	r2, [r3, #4]
 80066ac:	683b      	ldr	r3, [r7, #0]
 80066ae:	685b      	ldr	r3, [r3, #4]
 80066b0:	f003 0303 	and.w	r3, r3, #3
 80066b4:	2b03      	cmp	r3, #3
 80066b6:	d017      	beq.n	80066e8 <HAL_GPIO_Init+0xf0>
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	68db      	ldr	r3, [r3, #12]
 80066bc:	61bb      	str	r3, [r7, #24]
 80066be:	69fb      	ldr	r3, [r7, #28]
 80066c0:	005b      	lsls	r3, r3, #1
 80066c2:	2203      	movs	r2, #3
 80066c4:	fa02 f303 	lsl.w	r3, r2, r3
 80066c8:	43db      	mvns	r3, r3
 80066ca:	69ba      	ldr	r2, [r7, #24]
 80066cc:	4013      	ands	r3, r2
 80066ce:	61bb      	str	r3, [r7, #24]
 80066d0:	683b      	ldr	r3, [r7, #0]
 80066d2:	689a      	ldr	r2, [r3, #8]
 80066d4:	69fb      	ldr	r3, [r7, #28]
 80066d6:	005b      	lsls	r3, r3, #1
 80066d8:	fa02 f303 	lsl.w	r3, r2, r3
 80066dc:	69ba      	ldr	r2, [r7, #24]
 80066de:	4313      	orrs	r3, r2
 80066e0:	61bb      	str	r3, [r7, #24]
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	69ba      	ldr	r2, [r7, #24]
 80066e6:	60da      	str	r2, [r3, #12]
 80066e8:	683b      	ldr	r3, [r7, #0]
 80066ea:	685b      	ldr	r3, [r3, #4]
 80066ec:	f003 0303 	and.w	r3, r3, #3
 80066f0:	2b02      	cmp	r3, #2
 80066f2:	d123      	bne.n	800673c <HAL_GPIO_Init+0x144>
 80066f4:	69fb      	ldr	r3, [r7, #28]
 80066f6:	08da      	lsrs	r2, r3, #3
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	3208      	adds	r2, #8
 80066fc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006700:	61bb      	str	r3, [r7, #24]
 8006702:	69fb      	ldr	r3, [r7, #28]
 8006704:	f003 0307 	and.w	r3, r3, #7
 8006708:	009b      	lsls	r3, r3, #2
 800670a:	220f      	movs	r2, #15
 800670c:	fa02 f303 	lsl.w	r3, r2, r3
 8006710:	43db      	mvns	r3, r3
 8006712:	69ba      	ldr	r2, [r7, #24]
 8006714:	4013      	ands	r3, r2
 8006716:	61bb      	str	r3, [r7, #24]
 8006718:	683b      	ldr	r3, [r7, #0]
 800671a:	691a      	ldr	r2, [r3, #16]
 800671c:	69fb      	ldr	r3, [r7, #28]
 800671e:	f003 0307 	and.w	r3, r3, #7
 8006722:	009b      	lsls	r3, r3, #2
 8006724:	fa02 f303 	lsl.w	r3, r2, r3
 8006728:	69ba      	ldr	r2, [r7, #24]
 800672a:	4313      	orrs	r3, r2
 800672c:	61bb      	str	r3, [r7, #24]
 800672e:	69fb      	ldr	r3, [r7, #28]
 8006730:	08da      	lsrs	r2, r3, #3
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	3208      	adds	r2, #8
 8006736:	69b9      	ldr	r1, [r7, #24]
 8006738:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	61bb      	str	r3, [r7, #24]
 8006742:	69fb      	ldr	r3, [r7, #28]
 8006744:	005b      	lsls	r3, r3, #1
 8006746:	2203      	movs	r2, #3
 8006748:	fa02 f303 	lsl.w	r3, r2, r3
 800674c:	43db      	mvns	r3, r3
 800674e:	69ba      	ldr	r2, [r7, #24]
 8006750:	4013      	ands	r3, r2
 8006752:	61bb      	str	r3, [r7, #24]
 8006754:	683b      	ldr	r3, [r7, #0]
 8006756:	685b      	ldr	r3, [r3, #4]
 8006758:	f003 0203 	and.w	r2, r3, #3
 800675c:	69fb      	ldr	r3, [r7, #28]
 800675e:	005b      	lsls	r3, r3, #1
 8006760:	fa02 f303 	lsl.w	r3, r2, r3
 8006764:	69ba      	ldr	r2, [r7, #24]
 8006766:	4313      	orrs	r3, r2
 8006768:	61bb      	str	r3, [r7, #24]
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	69ba      	ldr	r2, [r7, #24]
 800676e:	601a      	str	r2, [r3, #0]
 8006770:	683b      	ldr	r3, [r7, #0]
 8006772:	685b      	ldr	r3, [r3, #4]
 8006774:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006778:	2b00      	cmp	r3, #0
 800677a:	f000 80ae 	beq.w	80068da <HAL_GPIO_Init+0x2e2>
 800677e:	2300      	movs	r3, #0
 8006780:	60fb      	str	r3, [r7, #12]
 8006782:	4b5d      	ldr	r3, [pc, #372]	; (80068f8 <HAL_GPIO_Init+0x300>)
 8006784:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006786:	4a5c      	ldr	r2, [pc, #368]	; (80068f8 <HAL_GPIO_Init+0x300>)
 8006788:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800678c:	6453      	str	r3, [r2, #68]	; 0x44
 800678e:	4b5a      	ldr	r3, [pc, #360]	; (80068f8 <HAL_GPIO_Init+0x300>)
 8006790:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006792:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006796:	60fb      	str	r3, [r7, #12]
 8006798:	68fb      	ldr	r3, [r7, #12]
 800679a:	4a58      	ldr	r2, [pc, #352]	; (80068fc <HAL_GPIO_Init+0x304>)
 800679c:	69fb      	ldr	r3, [r7, #28]
 800679e:	089b      	lsrs	r3, r3, #2
 80067a0:	3302      	adds	r3, #2
 80067a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80067a6:	61bb      	str	r3, [r7, #24]
 80067a8:	69fb      	ldr	r3, [r7, #28]
 80067aa:	f003 0303 	and.w	r3, r3, #3
 80067ae:	009b      	lsls	r3, r3, #2
 80067b0:	220f      	movs	r2, #15
 80067b2:	fa02 f303 	lsl.w	r3, r2, r3
 80067b6:	43db      	mvns	r3, r3
 80067b8:	69ba      	ldr	r2, [r7, #24]
 80067ba:	4013      	ands	r3, r2
 80067bc:	61bb      	str	r3, [r7, #24]
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	4a4f      	ldr	r2, [pc, #316]	; (8006900 <HAL_GPIO_Init+0x308>)
 80067c2:	4293      	cmp	r3, r2
 80067c4:	d025      	beq.n	8006812 <HAL_GPIO_Init+0x21a>
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	4a4e      	ldr	r2, [pc, #312]	; (8006904 <HAL_GPIO_Init+0x30c>)
 80067ca:	4293      	cmp	r3, r2
 80067cc:	d01f      	beq.n	800680e <HAL_GPIO_Init+0x216>
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	4a4d      	ldr	r2, [pc, #308]	; (8006908 <HAL_GPIO_Init+0x310>)
 80067d2:	4293      	cmp	r3, r2
 80067d4:	d019      	beq.n	800680a <HAL_GPIO_Init+0x212>
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	4a4c      	ldr	r2, [pc, #304]	; (800690c <HAL_GPIO_Init+0x314>)
 80067da:	4293      	cmp	r3, r2
 80067dc:	d013      	beq.n	8006806 <HAL_GPIO_Init+0x20e>
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	4a4b      	ldr	r2, [pc, #300]	; (8006910 <HAL_GPIO_Init+0x318>)
 80067e2:	4293      	cmp	r3, r2
 80067e4:	d00d      	beq.n	8006802 <HAL_GPIO_Init+0x20a>
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	4a4a      	ldr	r2, [pc, #296]	; (8006914 <HAL_GPIO_Init+0x31c>)
 80067ea:	4293      	cmp	r3, r2
 80067ec:	d007      	beq.n	80067fe <HAL_GPIO_Init+0x206>
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	4a49      	ldr	r2, [pc, #292]	; (8006918 <HAL_GPIO_Init+0x320>)
 80067f2:	4293      	cmp	r3, r2
 80067f4:	d101      	bne.n	80067fa <HAL_GPIO_Init+0x202>
 80067f6:	2306      	movs	r3, #6
 80067f8:	e00c      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 80067fa:	2307      	movs	r3, #7
 80067fc:	e00a      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 80067fe:	2305      	movs	r3, #5
 8006800:	e008      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 8006802:	2304      	movs	r3, #4
 8006804:	e006      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 8006806:	2303      	movs	r3, #3
 8006808:	e004      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 800680a:	2302      	movs	r3, #2
 800680c:	e002      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 800680e:	2301      	movs	r3, #1
 8006810:	e000      	b.n	8006814 <HAL_GPIO_Init+0x21c>
 8006812:	2300      	movs	r3, #0
 8006814:	69fa      	ldr	r2, [r7, #28]
 8006816:	f002 0203 	and.w	r2, r2, #3
 800681a:	0092      	lsls	r2, r2, #2
 800681c:	4093      	lsls	r3, r2
 800681e:	69ba      	ldr	r2, [r7, #24]
 8006820:	4313      	orrs	r3, r2
 8006822:	61bb      	str	r3, [r7, #24]
 8006824:	4935      	ldr	r1, [pc, #212]	; (80068fc <HAL_GPIO_Init+0x304>)
 8006826:	69fb      	ldr	r3, [r7, #28]
 8006828:	089b      	lsrs	r3, r3, #2
 800682a:	3302      	adds	r3, #2
 800682c:	69ba      	ldr	r2, [r7, #24]
 800682e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006832:	4b3a      	ldr	r3, [pc, #232]	; (800691c <HAL_GPIO_Init+0x324>)
 8006834:	689b      	ldr	r3, [r3, #8]
 8006836:	61bb      	str	r3, [r7, #24]
 8006838:	693b      	ldr	r3, [r7, #16]
 800683a:	43db      	mvns	r3, r3
 800683c:	69ba      	ldr	r2, [r7, #24]
 800683e:	4013      	ands	r3, r2
 8006840:	61bb      	str	r3, [r7, #24]
 8006842:	683b      	ldr	r3, [r7, #0]
 8006844:	685b      	ldr	r3, [r3, #4]
 8006846:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800684a:	2b00      	cmp	r3, #0
 800684c:	d003      	beq.n	8006856 <HAL_GPIO_Init+0x25e>
 800684e:	69ba      	ldr	r2, [r7, #24]
 8006850:	693b      	ldr	r3, [r7, #16]
 8006852:	4313      	orrs	r3, r2
 8006854:	61bb      	str	r3, [r7, #24]
 8006856:	4a31      	ldr	r2, [pc, #196]	; (800691c <HAL_GPIO_Init+0x324>)
 8006858:	69bb      	ldr	r3, [r7, #24]
 800685a:	6093      	str	r3, [r2, #8]
 800685c:	4b2f      	ldr	r3, [pc, #188]	; (800691c <HAL_GPIO_Init+0x324>)
 800685e:	68db      	ldr	r3, [r3, #12]
 8006860:	61bb      	str	r3, [r7, #24]
 8006862:	693b      	ldr	r3, [r7, #16]
 8006864:	43db      	mvns	r3, r3
 8006866:	69ba      	ldr	r2, [r7, #24]
 8006868:	4013      	ands	r3, r2
 800686a:	61bb      	str	r3, [r7, #24]
 800686c:	683b      	ldr	r3, [r7, #0]
 800686e:	685b      	ldr	r3, [r3, #4]
 8006870:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006874:	2b00      	cmp	r3, #0
 8006876:	d003      	beq.n	8006880 <HAL_GPIO_Init+0x288>
 8006878:	69ba      	ldr	r2, [r7, #24]
 800687a:	693b      	ldr	r3, [r7, #16]
 800687c:	4313      	orrs	r3, r2
 800687e:	61bb      	str	r3, [r7, #24]
 8006880:	4a26      	ldr	r2, [pc, #152]	; (800691c <HAL_GPIO_Init+0x324>)
 8006882:	69bb      	ldr	r3, [r7, #24]
 8006884:	60d3      	str	r3, [r2, #12]
 8006886:	4b25      	ldr	r3, [pc, #148]	; (800691c <HAL_GPIO_Init+0x324>)
 8006888:	685b      	ldr	r3, [r3, #4]
 800688a:	61bb      	str	r3, [r7, #24]
 800688c:	693b      	ldr	r3, [r7, #16]
 800688e:	43db      	mvns	r3, r3
 8006890:	69ba      	ldr	r2, [r7, #24]
 8006892:	4013      	ands	r3, r2
 8006894:	61bb      	str	r3, [r7, #24]
 8006896:	683b      	ldr	r3, [r7, #0]
 8006898:	685b      	ldr	r3, [r3, #4]
 800689a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800689e:	2b00      	cmp	r3, #0
 80068a0:	d003      	beq.n	80068aa <HAL_GPIO_Init+0x2b2>
 80068a2:	69ba      	ldr	r2, [r7, #24]
 80068a4:	693b      	ldr	r3, [r7, #16]
 80068a6:	4313      	orrs	r3, r2
 80068a8:	61bb      	str	r3, [r7, #24]
 80068aa:	4a1c      	ldr	r2, [pc, #112]	; (800691c <HAL_GPIO_Init+0x324>)
 80068ac:	69bb      	ldr	r3, [r7, #24]
 80068ae:	6053      	str	r3, [r2, #4]
 80068b0:	4b1a      	ldr	r3, [pc, #104]	; (800691c <HAL_GPIO_Init+0x324>)
 80068b2:	681b      	ldr	r3, [r3, #0]
 80068b4:	61bb      	str	r3, [r7, #24]
 80068b6:	693b      	ldr	r3, [r7, #16]
 80068b8:	43db      	mvns	r3, r3
 80068ba:	69ba      	ldr	r2, [r7, #24]
 80068bc:	4013      	ands	r3, r2
 80068be:	61bb      	str	r3, [r7, #24]
 80068c0:	683b      	ldr	r3, [r7, #0]
 80068c2:	685b      	ldr	r3, [r3, #4]
 80068c4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80068c8:	2b00      	cmp	r3, #0
 80068ca:	d003      	beq.n	80068d4 <HAL_GPIO_Init+0x2dc>
 80068cc:	69ba      	ldr	r2, [r7, #24]
 80068ce:	693b      	ldr	r3, [r7, #16]
 80068d0:	4313      	orrs	r3, r2
 80068d2:	61bb      	str	r3, [r7, #24]
 80068d4:	4a11      	ldr	r2, [pc, #68]	; (800691c <HAL_GPIO_Init+0x324>)
 80068d6:	69bb      	ldr	r3, [r7, #24]
 80068d8:	6013      	str	r3, [r2, #0]
 80068da:	69fb      	ldr	r3, [r7, #28]
 80068dc:	3301      	adds	r3, #1
 80068de:	61fb      	str	r3, [r7, #28]
 80068e0:	69fb      	ldr	r3, [r7, #28]
 80068e2:	2b0f      	cmp	r3, #15
 80068e4:	f67f ae96 	bls.w	8006614 <HAL_GPIO_Init+0x1c>
 80068e8:	bf00      	nop
 80068ea:	bf00      	nop
 80068ec:	3724      	adds	r7, #36	; 0x24
 80068ee:	46bd      	mov	sp, r7
 80068f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068f4:	4770      	bx	lr
 80068f6:	bf00      	nop
 80068f8:	40023800 	.word	0x40023800
 80068fc:	40013800 	.word	0x40013800
 8006900:	40020000 	.word	0x40020000
 8006904:	40020400 	.word	0x40020400
 8006908:	40020800 	.word	0x40020800
 800690c:	40020c00 	.word	0x40020c00
 8006910:	40021000 	.word	0x40021000
 8006914:	40021400 	.word	0x40021400
 8006918:	40021800 	.word	0x40021800
 800691c:	40013c00 	.word	0x40013c00

08006920 <HAL_GPIO_WritePin>:
 8006920:	b480      	push	{r7}
 8006922:	b083      	sub	sp, #12
 8006924:	af00      	add	r7, sp, #0
 8006926:	6078      	str	r0, [r7, #4]
 8006928:	460b      	mov	r3, r1
 800692a:	807b      	strh	r3, [r7, #2]
 800692c:	4613      	mov	r3, r2
 800692e:	707b      	strb	r3, [r7, #1]
 8006930:	787b      	ldrb	r3, [r7, #1]
 8006932:	2b00      	cmp	r3, #0
 8006934:	d003      	beq.n	800693e <HAL_GPIO_WritePin+0x1e>
 8006936:	887a      	ldrh	r2, [r7, #2]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	619a      	str	r2, [r3, #24]
 800693c:	e003      	b.n	8006946 <HAL_GPIO_WritePin+0x26>
 800693e:	887b      	ldrh	r3, [r7, #2]
 8006940:	041a      	lsls	r2, r3, #16
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	619a      	str	r2, [r3, #24]
 8006946:	bf00      	nop
 8006948:	370c      	adds	r7, #12
 800694a:	46bd      	mov	sp, r7
 800694c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006950:	4770      	bx	lr
	...

08006954 <HAL_RCC_ClockConfig>:
 8006954:	b580      	push	{r7, lr}
 8006956:	b084      	sub	sp, #16
 8006958:	af00      	add	r7, sp, #0
 800695a:	6078      	str	r0, [r7, #4]
 800695c:	6039      	str	r1, [r7, #0]
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	2b00      	cmp	r3, #0
 8006962:	d101      	bne.n	8006968 <HAL_RCC_ClockConfig+0x14>
 8006964:	2301      	movs	r3, #1
 8006966:	e0cc      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006968:	4b68      	ldr	r3, [pc, #416]	; (8006b0c <HAL_RCC_ClockConfig+0x1b8>)
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	f003 030f 	and.w	r3, r3, #15
 8006970:	683a      	ldr	r2, [r7, #0]
 8006972:	429a      	cmp	r2, r3
 8006974:	d90c      	bls.n	8006990 <HAL_RCC_ClockConfig+0x3c>
 8006976:	4b65      	ldr	r3, [pc, #404]	; (8006b0c <HAL_RCC_ClockConfig+0x1b8>)
 8006978:	683a      	ldr	r2, [r7, #0]
 800697a:	b2d2      	uxtb	r2, r2
 800697c:	701a      	strb	r2, [r3, #0]
 800697e:	4b63      	ldr	r3, [pc, #396]	; (8006b0c <HAL_RCC_ClockConfig+0x1b8>)
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	f003 030f 	and.w	r3, r3, #15
 8006986:	683a      	ldr	r2, [r7, #0]
 8006988:	429a      	cmp	r2, r3
 800698a:	d001      	beq.n	8006990 <HAL_RCC_ClockConfig+0x3c>
 800698c:	2301      	movs	r3, #1
 800698e:	e0b8      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	681b      	ldr	r3, [r3, #0]
 8006994:	f003 0302 	and.w	r3, r3, #2
 8006998:	2b00      	cmp	r3, #0
 800699a:	d020      	beq.n	80069de <HAL_RCC_ClockConfig+0x8a>
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	681b      	ldr	r3, [r3, #0]
 80069a0:	f003 0304 	and.w	r3, r3, #4
 80069a4:	2b00      	cmp	r3, #0
 80069a6:	d005      	beq.n	80069b4 <HAL_RCC_ClockConfig+0x60>
 80069a8:	4b59      	ldr	r3, [pc, #356]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069aa:	689b      	ldr	r3, [r3, #8]
 80069ac:	4a58      	ldr	r2, [pc, #352]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069ae:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80069b2:	6093      	str	r3, [r2, #8]
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	f003 0308 	and.w	r3, r3, #8
 80069bc:	2b00      	cmp	r3, #0
 80069be:	d005      	beq.n	80069cc <HAL_RCC_ClockConfig+0x78>
 80069c0:	4b53      	ldr	r3, [pc, #332]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069c2:	689b      	ldr	r3, [r3, #8]
 80069c4:	4a52      	ldr	r2, [pc, #328]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069c6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80069ca:	6093      	str	r3, [r2, #8]
 80069cc:	4b50      	ldr	r3, [pc, #320]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069ce:	689b      	ldr	r3, [r3, #8]
 80069d0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	689b      	ldr	r3, [r3, #8]
 80069d8:	494d      	ldr	r1, [pc, #308]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069da:	4313      	orrs	r3, r2
 80069dc:	608b      	str	r3, [r1, #8]
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	f003 0301 	and.w	r3, r3, #1
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	d044      	beq.n	8006a74 <HAL_RCC_ClockConfig+0x120>
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	685b      	ldr	r3, [r3, #4]
 80069ee:	2b01      	cmp	r3, #1
 80069f0:	d107      	bne.n	8006a02 <HAL_RCC_ClockConfig+0xae>
 80069f2:	4b47      	ldr	r3, [pc, #284]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	d119      	bne.n	8006a32 <HAL_RCC_ClockConfig+0xde>
 80069fe:	2301      	movs	r3, #1
 8006a00:	e07f      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	685b      	ldr	r3, [r3, #4]
 8006a06:	2b02      	cmp	r3, #2
 8006a08:	d003      	beq.n	8006a12 <HAL_RCC_ClockConfig+0xbe>
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	685b      	ldr	r3, [r3, #4]
 8006a0e:	2b03      	cmp	r3, #3
 8006a10:	d107      	bne.n	8006a22 <HAL_RCC_ClockConfig+0xce>
 8006a12:	4b3f      	ldr	r3, [pc, #252]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006a14:	681b      	ldr	r3, [r3, #0]
 8006a16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006a1a:	2b00      	cmp	r3, #0
 8006a1c:	d109      	bne.n	8006a32 <HAL_RCC_ClockConfig+0xde>
 8006a1e:	2301      	movs	r3, #1
 8006a20:	e06f      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006a22:	4b3b      	ldr	r3, [pc, #236]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006a24:	681b      	ldr	r3, [r3, #0]
 8006a26:	f003 0302 	and.w	r3, r3, #2
 8006a2a:	2b00      	cmp	r3, #0
 8006a2c:	d101      	bne.n	8006a32 <HAL_RCC_ClockConfig+0xde>
 8006a2e:	2301      	movs	r3, #1
 8006a30:	e067      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006a32:	4b37      	ldr	r3, [pc, #220]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006a34:	689b      	ldr	r3, [r3, #8]
 8006a36:	f023 0203 	bic.w	r2, r3, #3
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	685b      	ldr	r3, [r3, #4]
 8006a3e:	4934      	ldr	r1, [pc, #208]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006a40:	4313      	orrs	r3, r2
 8006a42:	608b      	str	r3, [r1, #8]
 8006a44:	f7fe fb32 	bl	80050ac <HAL_GetTick>
 8006a48:	60f8      	str	r0, [r7, #12]
 8006a4a:	e00a      	b.n	8006a62 <HAL_RCC_ClockConfig+0x10e>
 8006a4c:	f7fe fb2e 	bl	80050ac <HAL_GetTick>
 8006a50:	4602      	mov	r2, r0
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	1ad3      	subs	r3, r2, r3
 8006a56:	f241 3288 	movw	r2, #5000	; 0x1388
 8006a5a:	4293      	cmp	r3, r2
 8006a5c:	d901      	bls.n	8006a62 <HAL_RCC_ClockConfig+0x10e>
 8006a5e:	2303      	movs	r3, #3
 8006a60:	e04f      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006a62:	4b2b      	ldr	r3, [pc, #172]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006a64:	689b      	ldr	r3, [r3, #8]
 8006a66:	f003 020c 	and.w	r2, r3, #12
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	685b      	ldr	r3, [r3, #4]
 8006a6e:	009b      	lsls	r3, r3, #2
 8006a70:	429a      	cmp	r2, r3
 8006a72:	d1eb      	bne.n	8006a4c <HAL_RCC_ClockConfig+0xf8>
 8006a74:	4b25      	ldr	r3, [pc, #148]	; (8006b0c <HAL_RCC_ClockConfig+0x1b8>)
 8006a76:	681b      	ldr	r3, [r3, #0]
 8006a78:	f003 030f 	and.w	r3, r3, #15
 8006a7c:	683a      	ldr	r2, [r7, #0]
 8006a7e:	429a      	cmp	r2, r3
 8006a80:	d20c      	bcs.n	8006a9c <HAL_RCC_ClockConfig+0x148>
 8006a82:	4b22      	ldr	r3, [pc, #136]	; (8006b0c <HAL_RCC_ClockConfig+0x1b8>)
 8006a84:	683a      	ldr	r2, [r7, #0]
 8006a86:	b2d2      	uxtb	r2, r2
 8006a88:	701a      	strb	r2, [r3, #0]
 8006a8a:	4b20      	ldr	r3, [pc, #128]	; (8006b0c <HAL_RCC_ClockConfig+0x1b8>)
 8006a8c:	681b      	ldr	r3, [r3, #0]
 8006a8e:	f003 030f 	and.w	r3, r3, #15
 8006a92:	683a      	ldr	r2, [r7, #0]
 8006a94:	429a      	cmp	r2, r3
 8006a96:	d001      	beq.n	8006a9c <HAL_RCC_ClockConfig+0x148>
 8006a98:	2301      	movs	r3, #1
 8006a9a:	e032      	b.n	8006b02 <HAL_RCC_ClockConfig+0x1ae>
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	681b      	ldr	r3, [r3, #0]
 8006aa0:	f003 0304 	and.w	r3, r3, #4
 8006aa4:	2b00      	cmp	r3, #0
 8006aa6:	d008      	beq.n	8006aba <HAL_RCC_ClockConfig+0x166>
 8006aa8:	4b19      	ldr	r3, [pc, #100]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006aaa:	689b      	ldr	r3, [r3, #8]
 8006aac:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	68db      	ldr	r3, [r3, #12]
 8006ab4:	4916      	ldr	r1, [pc, #88]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006ab6:	4313      	orrs	r3, r2
 8006ab8:	608b      	str	r3, [r1, #8]
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	f003 0308 	and.w	r3, r3, #8
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	d009      	beq.n	8006ada <HAL_RCC_ClockConfig+0x186>
 8006ac6:	4b12      	ldr	r3, [pc, #72]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006ac8:	689b      	ldr	r3, [r3, #8]
 8006aca:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	691b      	ldr	r3, [r3, #16]
 8006ad2:	00db      	lsls	r3, r3, #3
 8006ad4:	490e      	ldr	r1, [pc, #56]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006ad6:	4313      	orrs	r3, r2
 8006ad8:	608b      	str	r3, [r1, #8]
 8006ada:	f000 f855 	bl	8006b88 <HAL_RCC_GetSysClockFreq>
 8006ade:	4602      	mov	r2, r0
 8006ae0:	4b0b      	ldr	r3, [pc, #44]	; (8006b10 <HAL_RCC_ClockConfig+0x1bc>)
 8006ae2:	689b      	ldr	r3, [r3, #8]
 8006ae4:	091b      	lsrs	r3, r3, #4
 8006ae6:	f003 030f 	and.w	r3, r3, #15
 8006aea:	490a      	ldr	r1, [pc, #40]	; (8006b14 <HAL_RCC_ClockConfig+0x1c0>)
 8006aec:	5ccb      	ldrb	r3, [r1, r3]
 8006aee:	fa22 f303 	lsr.w	r3, r2, r3
 8006af2:	4a09      	ldr	r2, [pc, #36]	; (8006b18 <HAL_RCC_ClockConfig+0x1c4>)
 8006af4:	6013      	str	r3, [r2, #0]
 8006af6:	4b09      	ldr	r3, [pc, #36]	; (8006b1c <HAL_RCC_ClockConfig+0x1c8>)
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	4618      	mov	r0, r3
 8006afc:	f7fe fa92 	bl	8005024 <HAL_InitTick>
 8006b00:	2300      	movs	r3, #0
 8006b02:	4618      	mov	r0, r3
 8006b04:	3710      	adds	r7, #16
 8006b06:	46bd      	mov	sp, r7
 8006b08:	bd80      	pop	{r7, pc}
 8006b0a:	bf00      	nop
 8006b0c:	40023c00 	.word	0x40023c00
 8006b10:	40023800 	.word	0x40023800
 8006b14:	0800ca34 	.word	0x0800ca34
 8006b18:	200023f0 	.word	0x200023f0
 8006b1c:	200023f4 	.word	0x200023f4

08006b20 <HAL_RCC_GetHCLKFreq>:
 8006b20:	b480      	push	{r7}
 8006b22:	af00      	add	r7, sp, #0
 8006b24:	4b03      	ldr	r3, [pc, #12]	; (8006b34 <HAL_RCC_GetHCLKFreq+0x14>)
 8006b26:	681b      	ldr	r3, [r3, #0]
 8006b28:	4618      	mov	r0, r3
 8006b2a:	46bd      	mov	sp, r7
 8006b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b30:	4770      	bx	lr
 8006b32:	bf00      	nop
 8006b34:	200023f0 	.word	0x200023f0

08006b38 <HAL_RCC_GetPCLK1Freq>:
 8006b38:	b580      	push	{r7, lr}
 8006b3a:	af00      	add	r7, sp, #0
 8006b3c:	f7ff fff0 	bl	8006b20 <HAL_RCC_GetHCLKFreq>
 8006b40:	4602      	mov	r2, r0
 8006b42:	4b05      	ldr	r3, [pc, #20]	; (8006b58 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006b44:	689b      	ldr	r3, [r3, #8]
 8006b46:	0a9b      	lsrs	r3, r3, #10
 8006b48:	f003 0307 	and.w	r3, r3, #7
 8006b4c:	4903      	ldr	r1, [pc, #12]	; (8006b5c <HAL_RCC_GetPCLK1Freq+0x24>)
 8006b4e:	5ccb      	ldrb	r3, [r1, r3]
 8006b50:	fa22 f303 	lsr.w	r3, r2, r3
 8006b54:	4618      	mov	r0, r3
 8006b56:	bd80      	pop	{r7, pc}
 8006b58:	40023800 	.word	0x40023800
 8006b5c:	0800ca44 	.word	0x0800ca44

08006b60 <HAL_RCC_GetPCLK2Freq>:
 8006b60:	b580      	push	{r7, lr}
 8006b62:	af00      	add	r7, sp, #0
 8006b64:	f7ff ffdc 	bl	8006b20 <HAL_RCC_GetHCLKFreq>
 8006b68:	4602      	mov	r2, r0
 8006b6a:	4b05      	ldr	r3, [pc, #20]	; (8006b80 <HAL_RCC_GetPCLK2Freq+0x20>)
 8006b6c:	689b      	ldr	r3, [r3, #8]
 8006b6e:	0b5b      	lsrs	r3, r3, #13
 8006b70:	f003 0307 	and.w	r3, r3, #7
 8006b74:	4903      	ldr	r1, [pc, #12]	; (8006b84 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006b76:	5ccb      	ldrb	r3, [r1, r3]
 8006b78:	fa22 f303 	lsr.w	r3, r2, r3
 8006b7c:	4618      	mov	r0, r3
 8006b7e:	bd80      	pop	{r7, pc}
 8006b80:	40023800 	.word	0x40023800
 8006b84:	0800ca44 	.word	0x0800ca44

08006b88 <HAL_RCC_GetSysClockFreq>:
 8006b88:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006b8c:	b0ae      	sub	sp, #184	; 0xb8
 8006b8e:	af00      	add	r7, sp, #0
 8006b90:	2300      	movs	r3, #0
 8006b92:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006b96:	2300      	movs	r3, #0
 8006b98:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006b9c:	2300      	movs	r3, #0
 8006b9e:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8006ba2:	2300      	movs	r3, #0
 8006ba4:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8006ba8:	2300      	movs	r3, #0
 8006baa:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006bae:	4bcb      	ldr	r3, [pc, #812]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006bb0:	689b      	ldr	r3, [r3, #8]
 8006bb2:	f003 030c 	and.w	r3, r3, #12
 8006bb6:	2b0c      	cmp	r3, #12
 8006bb8:	f200 8206 	bhi.w	8006fc8 <HAL_RCC_GetSysClockFreq+0x440>
 8006bbc:	a201      	add	r2, pc, #4	; (adr r2, 8006bc4 <HAL_RCC_GetSysClockFreq+0x3c>)
 8006bbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006bc2:	bf00      	nop
 8006bc4:	08006bf9 	.word	0x08006bf9
 8006bc8:	08006fc9 	.word	0x08006fc9
 8006bcc:	08006fc9 	.word	0x08006fc9
 8006bd0:	08006fc9 	.word	0x08006fc9
 8006bd4:	08006c01 	.word	0x08006c01
 8006bd8:	08006fc9 	.word	0x08006fc9
 8006bdc:	08006fc9 	.word	0x08006fc9
 8006be0:	08006fc9 	.word	0x08006fc9
 8006be4:	08006c09 	.word	0x08006c09
 8006be8:	08006fc9 	.word	0x08006fc9
 8006bec:	08006fc9 	.word	0x08006fc9
 8006bf0:	08006fc9 	.word	0x08006fc9
 8006bf4:	08006df9 	.word	0x08006df9
 8006bf8:	4bb9      	ldr	r3, [pc, #740]	; (8006ee0 <HAL_RCC_GetSysClockFreq+0x358>)
 8006bfa:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006bfe:	e1e7      	b.n	8006fd0 <HAL_RCC_GetSysClockFreq+0x448>
 8006c00:	4bb8      	ldr	r3, [pc, #736]	; (8006ee4 <HAL_RCC_GetSysClockFreq+0x35c>)
 8006c02:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006c06:	e1e3      	b.n	8006fd0 <HAL_RCC_GetSysClockFreq+0x448>
 8006c08:	4bb4      	ldr	r3, [pc, #720]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006c0a:	685b      	ldr	r3, [r3, #4]
 8006c0c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006c10:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006c14:	4bb1      	ldr	r3, [pc, #708]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006c16:	685b      	ldr	r3, [r3, #4]
 8006c18:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d071      	beq.n	8006d04 <HAL_RCC_GetSysClockFreq+0x17c>
 8006c20:	4bae      	ldr	r3, [pc, #696]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006c22:	685b      	ldr	r3, [r3, #4]
 8006c24:	099b      	lsrs	r3, r3, #6
 8006c26:	2200      	movs	r2, #0
 8006c28:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8006c2c:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8006c30:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8006c34:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006c38:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8006c3c:	2300      	movs	r3, #0
 8006c3e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8006c42:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8006c46:	4622      	mov	r2, r4
 8006c48:	462b      	mov	r3, r5
 8006c4a:	f04f 0000 	mov.w	r0, #0
 8006c4e:	f04f 0100 	mov.w	r1, #0
 8006c52:	0159      	lsls	r1, r3, #5
 8006c54:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006c58:	0150      	lsls	r0, r2, #5
 8006c5a:	4602      	mov	r2, r0
 8006c5c:	460b      	mov	r3, r1
 8006c5e:	4621      	mov	r1, r4
 8006c60:	1a51      	subs	r1, r2, r1
 8006c62:	6439      	str	r1, [r7, #64]	; 0x40
 8006c64:	4629      	mov	r1, r5
 8006c66:	eb63 0301 	sbc.w	r3, r3, r1
 8006c6a:	647b      	str	r3, [r7, #68]	; 0x44
 8006c6c:	f04f 0200 	mov.w	r2, #0
 8006c70:	f04f 0300 	mov.w	r3, #0
 8006c74:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8006c78:	4649      	mov	r1, r9
 8006c7a:	018b      	lsls	r3, r1, #6
 8006c7c:	4641      	mov	r1, r8
 8006c7e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8006c82:	4641      	mov	r1, r8
 8006c84:	018a      	lsls	r2, r1, #6
 8006c86:	4641      	mov	r1, r8
 8006c88:	1a51      	subs	r1, r2, r1
 8006c8a:	63b9      	str	r1, [r7, #56]	; 0x38
 8006c8c:	4649      	mov	r1, r9
 8006c8e:	eb63 0301 	sbc.w	r3, r3, r1
 8006c92:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006c94:	f04f 0200 	mov.w	r2, #0
 8006c98:	f04f 0300 	mov.w	r3, #0
 8006c9c:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8006ca0:	4649      	mov	r1, r9
 8006ca2:	00cb      	lsls	r3, r1, #3
 8006ca4:	4641      	mov	r1, r8
 8006ca6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006caa:	4641      	mov	r1, r8
 8006cac:	00ca      	lsls	r2, r1, #3
 8006cae:	4610      	mov	r0, r2
 8006cb0:	4619      	mov	r1, r3
 8006cb2:	4603      	mov	r3, r0
 8006cb4:	4622      	mov	r2, r4
 8006cb6:	189b      	adds	r3, r3, r2
 8006cb8:	633b      	str	r3, [r7, #48]	; 0x30
 8006cba:	462b      	mov	r3, r5
 8006cbc:	460a      	mov	r2, r1
 8006cbe:	eb42 0303 	adc.w	r3, r2, r3
 8006cc2:	637b      	str	r3, [r7, #52]	; 0x34
 8006cc4:	f04f 0200 	mov.w	r2, #0
 8006cc8:	f04f 0300 	mov.w	r3, #0
 8006ccc:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8006cd0:	4629      	mov	r1, r5
 8006cd2:	024b      	lsls	r3, r1, #9
 8006cd4:	4621      	mov	r1, r4
 8006cd6:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8006cda:	4621      	mov	r1, r4
 8006cdc:	024a      	lsls	r2, r1, #9
 8006cde:	4610      	mov	r0, r2
 8006ce0:	4619      	mov	r1, r3
 8006ce2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8006ce6:	2200      	movs	r2, #0
 8006ce8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8006cec:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8006cf0:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8006cf4:	f7f9 ffe8 	bl	8000cc8 <__aeabi_uldivmod>
 8006cf8:	4602      	mov	r2, r0
 8006cfa:	460b      	mov	r3, r1
 8006cfc:	4613      	mov	r3, r2
 8006cfe:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006d02:	e067      	b.n	8006dd4 <HAL_RCC_GetSysClockFreq+0x24c>
 8006d04:	4b75      	ldr	r3, [pc, #468]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006d06:	685b      	ldr	r3, [r3, #4]
 8006d08:	099b      	lsrs	r3, r3, #6
 8006d0a:	2200      	movs	r2, #0
 8006d0c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8006d10:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8006d14:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8006d18:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006d1c:	67bb      	str	r3, [r7, #120]	; 0x78
 8006d1e:	2300      	movs	r3, #0
 8006d20:	67fb      	str	r3, [r7, #124]	; 0x7c
 8006d22:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8006d26:	4622      	mov	r2, r4
 8006d28:	462b      	mov	r3, r5
 8006d2a:	f04f 0000 	mov.w	r0, #0
 8006d2e:	f04f 0100 	mov.w	r1, #0
 8006d32:	0159      	lsls	r1, r3, #5
 8006d34:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006d38:	0150      	lsls	r0, r2, #5
 8006d3a:	4602      	mov	r2, r0
 8006d3c:	460b      	mov	r3, r1
 8006d3e:	4621      	mov	r1, r4
 8006d40:	1a51      	subs	r1, r2, r1
 8006d42:	62b9      	str	r1, [r7, #40]	; 0x28
 8006d44:	4629      	mov	r1, r5
 8006d46:	eb63 0301 	sbc.w	r3, r3, r1
 8006d4a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006d4c:	f04f 0200 	mov.w	r2, #0
 8006d50:	f04f 0300 	mov.w	r3, #0
 8006d54:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8006d58:	4649      	mov	r1, r9
 8006d5a:	018b      	lsls	r3, r1, #6
 8006d5c:	4641      	mov	r1, r8
 8006d5e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8006d62:	4641      	mov	r1, r8
 8006d64:	018a      	lsls	r2, r1, #6
 8006d66:	4641      	mov	r1, r8
 8006d68:	ebb2 0a01 	subs.w	sl, r2, r1
 8006d6c:	4649      	mov	r1, r9
 8006d6e:	eb63 0b01 	sbc.w	fp, r3, r1
 8006d72:	f04f 0200 	mov.w	r2, #0
 8006d76:	f04f 0300 	mov.w	r3, #0
 8006d7a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006d7e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006d82:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006d86:	4692      	mov	sl, r2
 8006d88:	469b      	mov	fp, r3
 8006d8a:	4623      	mov	r3, r4
 8006d8c:	eb1a 0303 	adds.w	r3, sl, r3
 8006d90:	623b      	str	r3, [r7, #32]
 8006d92:	462b      	mov	r3, r5
 8006d94:	eb4b 0303 	adc.w	r3, fp, r3
 8006d98:	627b      	str	r3, [r7, #36]	; 0x24
 8006d9a:	f04f 0200 	mov.w	r2, #0
 8006d9e:	f04f 0300 	mov.w	r3, #0
 8006da2:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8006da6:	4629      	mov	r1, r5
 8006da8:	028b      	lsls	r3, r1, #10
 8006daa:	4621      	mov	r1, r4
 8006dac:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006db0:	4621      	mov	r1, r4
 8006db2:	028a      	lsls	r2, r1, #10
 8006db4:	4610      	mov	r0, r2
 8006db6:	4619      	mov	r1, r3
 8006db8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8006dbc:	2200      	movs	r2, #0
 8006dbe:	673b      	str	r3, [r7, #112]	; 0x70
 8006dc0:	677a      	str	r2, [r7, #116]	; 0x74
 8006dc2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8006dc6:	f7f9 ff7f 	bl	8000cc8 <__aeabi_uldivmod>
 8006dca:	4602      	mov	r2, r0
 8006dcc:	460b      	mov	r3, r1
 8006dce:	4613      	mov	r3, r2
 8006dd0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006dd4:	4b41      	ldr	r3, [pc, #260]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006dd6:	685b      	ldr	r3, [r3, #4]
 8006dd8:	0c1b      	lsrs	r3, r3, #16
 8006dda:	f003 0303 	and.w	r3, r3, #3
 8006dde:	3301      	adds	r3, #1
 8006de0:	005b      	lsls	r3, r3, #1
 8006de2:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8006de6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8006dea:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8006dee:	fbb2 f3f3 	udiv	r3, r2, r3
 8006df2:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006df6:	e0eb      	b.n	8006fd0 <HAL_RCC_GetSysClockFreq+0x448>
 8006df8:	4b38      	ldr	r3, [pc, #224]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006dfa:	685b      	ldr	r3, [r3, #4]
 8006dfc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006e00:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006e04:	4b35      	ldr	r3, [pc, #212]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006e06:	685b      	ldr	r3, [r3, #4]
 8006e08:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006e0c:	2b00      	cmp	r3, #0
 8006e0e:	d06b      	beq.n	8006ee8 <HAL_RCC_GetSysClockFreq+0x360>
 8006e10:	4b32      	ldr	r3, [pc, #200]	; (8006edc <HAL_RCC_GetSysClockFreq+0x354>)
 8006e12:	685b      	ldr	r3, [r3, #4]
 8006e14:	099b      	lsrs	r3, r3, #6
 8006e16:	2200      	movs	r2, #0
 8006e18:	66bb      	str	r3, [r7, #104]	; 0x68
 8006e1a:	66fa      	str	r2, [r7, #108]	; 0x6c
 8006e1c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8006e1e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006e22:	663b      	str	r3, [r7, #96]	; 0x60
 8006e24:	2300      	movs	r3, #0
 8006e26:	667b      	str	r3, [r7, #100]	; 0x64
 8006e28:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8006e2c:	4622      	mov	r2, r4
 8006e2e:	462b      	mov	r3, r5
 8006e30:	f04f 0000 	mov.w	r0, #0
 8006e34:	f04f 0100 	mov.w	r1, #0
 8006e38:	0159      	lsls	r1, r3, #5
 8006e3a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006e3e:	0150      	lsls	r0, r2, #5
 8006e40:	4602      	mov	r2, r0
 8006e42:	460b      	mov	r3, r1
 8006e44:	4621      	mov	r1, r4
 8006e46:	1a51      	subs	r1, r2, r1
 8006e48:	61b9      	str	r1, [r7, #24]
 8006e4a:	4629      	mov	r1, r5
 8006e4c:	eb63 0301 	sbc.w	r3, r3, r1
 8006e50:	61fb      	str	r3, [r7, #28]
 8006e52:	f04f 0200 	mov.w	r2, #0
 8006e56:	f04f 0300 	mov.w	r3, #0
 8006e5a:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8006e5e:	4659      	mov	r1, fp
 8006e60:	018b      	lsls	r3, r1, #6
 8006e62:	4651      	mov	r1, sl
 8006e64:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8006e68:	4651      	mov	r1, sl
 8006e6a:	018a      	lsls	r2, r1, #6
 8006e6c:	4651      	mov	r1, sl
 8006e6e:	ebb2 0801 	subs.w	r8, r2, r1
 8006e72:	4659      	mov	r1, fp
 8006e74:	eb63 0901 	sbc.w	r9, r3, r1
 8006e78:	f04f 0200 	mov.w	r2, #0
 8006e7c:	f04f 0300 	mov.w	r3, #0
 8006e80:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006e84:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006e88:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006e8c:	4690      	mov	r8, r2
 8006e8e:	4699      	mov	r9, r3
 8006e90:	4623      	mov	r3, r4
 8006e92:	eb18 0303 	adds.w	r3, r8, r3
 8006e96:	613b      	str	r3, [r7, #16]
 8006e98:	462b      	mov	r3, r5
 8006e9a:	eb49 0303 	adc.w	r3, r9, r3
 8006e9e:	617b      	str	r3, [r7, #20]
 8006ea0:	f04f 0200 	mov.w	r2, #0
 8006ea4:	f04f 0300 	mov.w	r3, #0
 8006ea8:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8006eac:	4629      	mov	r1, r5
 8006eae:	024b      	lsls	r3, r1, #9
 8006eb0:	4621      	mov	r1, r4
 8006eb2:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8006eb6:	4621      	mov	r1, r4
 8006eb8:	024a      	lsls	r2, r1, #9
 8006eba:	4610      	mov	r0, r2
 8006ebc:	4619      	mov	r1, r3
 8006ebe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8006ec2:	2200      	movs	r2, #0
 8006ec4:	65bb      	str	r3, [r7, #88]	; 0x58
 8006ec6:	65fa      	str	r2, [r7, #92]	; 0x5c
 8006ec8:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8006ecc:	f7f9 fefc 	bl	8000cc8 <__aeabi_uldivmod>
 8006ed0:	4602      	mov	r2, r0
 8006ed2:	460b      	mov	r3, r1
 8006ed4:	4613      	mov	r3, r2
 8006ed6:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006eda:	e065      	b.n	8006fa8 <HAL_RCC_GetSysClockFreq+0x420>
 8006edc:	40023800 	.word	0x40023800
 8006ee0:	00f42400 	.word	0x00f42400
 8006ee4:	007a1200 	.word	0x007a1200
 8006ee8:	4b3d      	ldr	r3, [pc, #244]	; (8006fe0 <HAL_RCC_GetSysClockFreq+0x458>)
 8006eea:	685b      	ldr	r3, [r3, #4]
 8006eec:	099b      	lsrs	r3, r3, #6
 8006eee:	2200      	movs	r2, #0
 8006ef0:	4618      	mov	r0, r3
 8006ef2:	4611      	mov	r1, r2
 8006ef4:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8006ef8:	653b      	str	r3, [r7, #80]	; 0x50
 8006efa:	2300      	movs	r3, #0
 8006efc:	657b      	str	r3, [r7, #84]	; 0x54
 8006efe:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8006f02:	4642      	mov	r2, r8
 8006f04:	464b      	mov	r3, r9
 8006f06:	f04f 0000 	mov.w	r0, #0
 8006f0a:	f04f 0100 	mov.w	r1, #0
 8006f0e:	0159      	lsls	r1, r3, #5
 8006f10:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006f14:	0150      	lsls	r0, r2, #5
 8006f16:	4602      	mov	r2, r0
 8006f18:	460b      	mov	r3, r1
 8006f1a:	4641      	mov	r1, r8
 8006f1c:	1a51      	subs	r1, r2, r1
 8006f1e:	60b9      	str	r1, [r7, #8]
 8006f20:	4649      	mov	r1, r9
 8006f22:	eb63 0301 	sbc.w	r3, r3, r1
 8006f26:	60fb      	str	r3, [r7, #12]
 8006f28:	f04f 0200 	mov.w	r2, #0
 8006f2c:	f04f 0300 	mov.w	r3, #0
 8006f30:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8006f34:	4659      	mov	r1, fp
 8006f36:	018b      	lsls	r3, r1, #6
 8006f38:	4651      	mov	r1, sl
 8006f3a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8006f3e:	4651      	mov	r1, sl
 8006f40:	018a      	lsls	r2, r1, #6
 8006f42:	4651      	mov	r1, sl
 8006f44:	1a54      	subs	r4, r2, r1
 8006f46:	4659      	mov	r1, fp
 8006f48:	eb63 0501 	sbc.w	r5, r3, r1
 8006f4c:	f04f 0200 	mov.w	r2, #0
 8006f50:	f04f 0300 	mov.w	r3, #0
 8006f54:	00eb      	lsls	r3, r5, #3
 8006f56:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006f5a:	00e2      	lsls	r2, r4, #3
 8006f5c:	4614      	mov	r4, r2
 8006f5e:	461d      	mov	r5, r3
 8006f60:	4643      	mov	r3, r8
 8006f62:	18e3      	adds	r3, r4, r3
 8006f64:	603b      	str	r3, [r7, #0]
 8006f66:	464b      	mov	r3, r9
 8006f68:	eb45 0303 	adc.w	r3, r5, r3
 8006f6c:	607b      	str	r3, [r7, #4]
 8006f6e:	f04f 0200 	mov.w	r2, #0
 8006f72:	f04f 0300 	mov.w	r3, #0
 8006f76:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006f7a:	4629      	mov	r1, r5
 8006f7c:	028b      	lsls	r3, r1, #10
 8006f7e:	4621      	mov	r1, r4
 8006f80:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006f84:	4621      	mov	r1, r4
 8006f86:	028a      	lsls	r2, r1, #10
 8006f88:	4610      	mov	r0, r2
 8006f8a:	4619      	mov	r1, r3
 8006f8c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8006f90:	2200      	movs	r2, #0
 8006f92:	64bb      	str	r3, [r7, #72]	; 0x48
 8006f94:	64fa      	str	r2, [r7, #76]	; 0x4c
 8006f96:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8006f9a:	f7f9 fe95 	bl	8000cc8 <__aeabi_uldivmod>
 8006f9e:	4602      	mov	r2, r0
 8006fa0:	460b      	mov	r3, r1
 8006fa2:	4613      	mov	r3, r2
 8006fa4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006fa8:	4b0d      	ldr	r3, [pc, #52]	; (8006fe0 <HAL_RCC_GetSysClockFreq+0x458>)
 8006faa:	685b      	ldr	r3, [r3, #4]
 8006fac:	0f1b      	lsrs	r3, r3, #28
 8006fae:	f003 0307 	and.w	r3, r3, #7
 8006fb2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8006fb6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8006fba:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8006fbe:	fbb2 f3f3 	udiv	r3, r2, r3
 8006fc2:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006fc6:	e003      	b.n	8006fd0 <HAL_RCC_GetSysClockFreq+0x448>
 8006fc8:	4b06      	ldr	r3, [pc, #24]	; (8006fe4 <HAL_RCC_GetSysClockFreq+0x45c>)
 8006fca:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006fce:	bf00      	nop
 8006fd0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8006fd4:	4618      	mov	r0, r3
 8006fd6:	37b8      	adds	r7, #184	; 0xb8
 8006fd8:	46bd      	mov	sp, r7
 8006fda:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006fde:	bf00      	nop
 8006fe0:	40023800 	.word	0x40023800
 8006fe4:	00f42400 	.word	0x00f42400

08006fe8 <HAL_RCC_OscConfig>:
 8006fe8:	b580      	push	{r7, lr}
 8006fea:	b086      	sub	sp, #24
 8006fec:	af00      	add	r7, sp, #0
 8006fee:	6078      	str	r0, [r7, #4]
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	2b00      	cmp	r3, #0
 8006ff4:	d101      	bne.n	8006ffa <HAL_RCC_OscConfig+0x12>
 8006ff6:	2301      	movs	r3, #1
 8006ff8:	e28d      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	681b      	ldr	r3, [r3, #0]
 8006ffe:	f003 0301 	and.w	r3, r3, #1
 8007002:	2b00      	cmp	r3, #0
 8007004:	f000 8083 	beq.w	800710e <HAL_RCC_OscConfig+0x126>
 8007008:	4b94      	ldr	r3, [pc, #592]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800700a:	689b      	ldr	r3, [r3, #8]
 800700c:	f003 030c 	and.w	r3, r3, #12
 8007010:	2b04      	cmp	r3, #4
 8007012:	d019      	beq.n	8007048 <HAL_RCC_OscConfig+0x60>
 8007014:	4b91      	ldr	r3, [pc, #580]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007016:	689b      	ldr	r3, [r3, #8]
 8007018:	f003 030c 	and.w	r3, r3, #12
 800701c:	2b08      	cmp	r3, #8
 800701e:	d106      	bne.n	800702e <HAL_RCC_OscConfig+0x46>
 8007020:	4b8e      	ldr	r3, [pc, #568]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007022:	685b      	ldr	r3, [r3, #4]
 8007024:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007028:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800702c:	d00c      	beq.n	8007048 <HAL_RCC_OscConfig+0x60>
 800702e:	4b8b      	ldr	r3, [pc, #556]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007030:	689b      	ldr	r3, [r3, #8]
 8007032:	f003 030c 	and.w	r3, r3, #12
 8007036:	2b0c      	cmp	r3, #12
 8007038:	d112      	bne.n	8007060 <HAL_RCC_OscConfig+0x78>
 800703a:	4b88      	ldr	r3, [pc, #544]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800703c:	685b      	ldr	r3, [r3, #4]
 800703e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007042:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007046:	d10b      	bne.n	8007060 <HAL_RCC_OscConfig+0x78>
 8007048:	4b84      	ldr	r3, [pc, #528]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007050:	2b00      	cmp	r3, #0
 8007052:	d05b      	beq.n	800710c <HAL_RCC_OscConfig+0x124>
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	685b      	ldr	r3, [r3, #4]
 8007058:	2b00      	cmp	r3, #0
 800705a:	d157      	bne.n	800710c <HAL_RCC_OscConfig+0x124>
 800705c:	2301      	movs	r3, #1
 800705e:	e25a      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	685b      	ldr	r3, [r3, #4]
 8007064:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007068:	d106      	bne.n	8007078 <HAL_RCC_OscConfig+0x90>
 800706a:	4b7c      	ldr	r3, [pc, #496]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800706c:	681b      	ldr	r3, [r3, #0]
 800706e:	4a7b      	ldr	r2, [pc, #492]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007070:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007074:	6013      	str	r3, [r2, #0]
 8007076:	e01d      	b.n	80070b4 <HAL_RCC_OscConfig+0xcc>
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	685b      	ldr	r3, [r3, #4]
 800707c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007080:	d10c      	bne.n	800709c <HAL_RCC_OscConfig+0xb4>
 8007082:	4b76      	ldr	r3, [pc, #472]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007084:	681b      	ldr	r3, [r3, #0]
 8007086:	4a75      	ldr	r2, [pc, #468]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007088:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800708c:	6013      	str	r3, [r2, #0]
 800708e:	4b73      	ldr	r3, [pc, #460]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	4a72      	ldr	r2, [pc, #456]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007094:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007098:	6013      	str	r3, [r2, #0]
 800709a:	e00b      	b.n	80070b4 <HAL_RCC_OscConfig+0xcc>
 800709c:	4b6f      	ldr	r3, [pc, #444]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	4a6e      	ldr	r2, [pc, #440]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80070a2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80070a6:	6013      	str	r3, [r2, #0]
 80070a8:	4b6c      	ldr	r3, [pc, #432]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80070aa:	681b      	ldr	r3, [r3, #0]
 80070ac:	4a6b      	ldr	r2, [pc, #428]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80070ae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80070b2:	6013      	str	r3, [r2, #0]
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	685b      	ldr	r3, [r3, #4]
 80070b8:	2b00      	cmp	r3, #0
 80070ba:	d013      	beq.n	80070e4 <HAL_RCC_OscConfig+0xfc>
 80070bc:	f7fd fff6 	bl	80050ac <HAL_GetTick>
 80070c0:	6138      	str	r0, [r7, #16]
 80070c2:	e008      	b.n	80070d6 <HAL_RCC_OscConfig+0xee>
 80070c4:	f7fd fff2 	bl	80050ac <HAL_GetTick>
 80070c8:	4602      	mov	r2, r0
 80070ca:	693b      	ldr	r3, [r7, #16]
 80070cc:	1ad3      	subs	r3, r2, r3
 80070ce:	2b64      	cmp	r3, #100	; 0x64
 80070d0:	d901      	bls.n	80070d6 <HAL_RCC_OscConfig+0xee>
 80070d2:	2303      	movs	r3, #3
 80070d4:	e21f      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 80070d6:	4b61      	ldr	r3, [pc, #388]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80070d8:	681b      	ldr	r3, [r3, #0]
 80070da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80070de:	2b00      	cmp	r3, #0
 80070e0:	d0f0      	beq.n	80070c4 <HAL_RCC_OscConfig+0xdc>
 80070e2:	e014      	b.n	800710e <HAL_RCC_OscConfig+0x126>
 80070e4:	f7fd ffe2 	bl	80050ac <HAL_GetTick>
 80070e8:	6138      	str	r0, [r7, #16]
 80070ea:	e008      	b.n	80070fe <HAL_RCC_OscConfig+0x116>
 80070ec:	f7fd ffde 	bl	80050ac <HAL_GetTick>
 80070f0:	4602      	mov	r2, r0
 80070f2:	693b      	ldr	r3, [r7, #16]
 80070f4:	1ad3      	subs	r3, r2, r3
 80070f6:	2b64      	cmp	r3, #100	; 0x64
 80070f8:	d901      	bls.n	80070fe <HAL_RCC_OscConfig+0x116>
 80070fa:	2303      	movs	r3, #3
 80070fc:	e20b      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 80070fe:	4b57      	ldr	r3, [pc, #348]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007100:	681b      	ldr	r3, [r3, #0]
 8007102:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007106:	2b00      	cmp	r3, #0
 8007108:	d1f0      	bne.n	80070ec <HAL_RCC_OscConfig+0x104>
 800710a:	e000      	b.n	800710e <HAL_RCC_OscConfig+0x126>
 800710c:	bf00      	nop
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	681b      	ldr	r3, [r3, #0]
 8007112:	f003 0302 	and.w	r3, r3, #2
 8007116:	2b00      	cmp	r3, #0
 8007118:	d06f      	beq.n	80071fa <HAL_RCC_OscConfig+0x212>
 800711a:	4b50      	ldr	r3, [pc, #320]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800711c:	689b      	ldr	r3, [r3, #8]
 800711e:	f003 030c 	and.w	r3, r3, #12
 8007122:	2b00      	cmp	r3, #0
 8007124:	d017      	beq.n	8007156 <HAL_RCC_OscConfig+0x16e>
 8007126:	4b4d      	ldr	r3, [pc, #308]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007128:	689b      	ldr	r3, [r3, #8]
 800712a:	f003 030c 	and.w	r3, r3, #12
 800712e:	2b08      	cmp	r3, #8
 8007130:	d105      	bne.n	800713e <HAL_RCC_OscConfig+0x156>
 8007132:	4b4a      	ldr	r3, [pc, #296]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007134:	685b      	ldr	r3, [r3, #4]
 8007136:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800713a:	2b00      	cmp	r3, #0
 800713c:	d00b      	beq.n	8007156 <HAL_RCC_OscConfig+0x16e>
 800713e:	4b47      	ldr	r3, [pc, #284]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007140:	689b      	ldr	r3, [r3, #8]
 8007142:	f003 030c 	and.w	r3, r3, #12
 8007146:	2b0c      	cmp	r3, #12
 8007148:	d11c      	bne.n	8007184 <HAL_RCC_OscConfig+0x19c>
 800714a:	4b44      	ldr	r3, [pc, #272]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800714c:	685b      	ldr	r3, [r3, #4]
 800714e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007152:	2b00      	cmp	r3, #0
 8007154:	d116      	bne.n	8007184 <HAL_RCC_OscConfig+0x19c>
 8007156:	4b41      	ldr	r3, [pc, #260]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	f003 0302 	and.w	r3, r3, #2
 800715e:	2b00      	cmp	r3, #0
 8007160:	d005      	beq.n	800716e <HAL_RCC_OscConfig+0x186>
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	68db      	ldr	r3, [r3, #12]
 8007166:	2b01      	cmp	r3, #1
 8007168:	d001      	beq.n	800716e <HAL_RCC_OscConfig+0x186>
 800716a:	2301      	movs	r3, #1
 800716c:	e1d3      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 800716e:	4b3b      	ldr	r3, [pc, #236]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007170:	681b      	ldr	r3, [r3, #0]
 8007172:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	691b      	ldr	r3, [r3, #16]
 800717a:	00db      	lsls	r3, r3, #3
 800717c:	4937      	ldr	r1, [pc, #220]	; (800725c <HAL_RCC_OscConfig+0x274>)
 800717e:	4313      	orrs	r3, r2
 8007180:	600b      	str	r3, [r1, #0]
 8007182:	e03a      	b.n	80071fa <HAL_RCC_OscConfig+0x212>
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	68db      	ldr	r3, [r3, #12]
 8007188:	2b00      	cmp	r3, #0
 800718a:	d020      	beq.n	80071ce <HAL_RCC_OscConfig+0x1e6>
 800718c:	4b34      	ldr	r3, [pc, #208]	; (8007260 <HAL_RCC_OscConfig+0x278>)
 800718e:	2201      	movs	r2, #1
 8007190:	601a      	str	r2, [r3, #0]
 8007192:	f7fd ff8b 	bl	80050ac <HAL_GetTick>
 8007196:	6138      	str	r0, [r7, #16]
 8007198:	e008      	b.n	80071ac <HAL_RCC_OscConfig+0x1c4>
 800719a:	f7fd ff87 	bl	80050ac <HAL_GetTick>
 800719e:	4602      	mov	r2, r0
 80071a0:	693b      	ldr	r3, [r7, #16]
 80071a2:	1ad3      	subs	r3, r2, r3
 80071a4:	2b02      	cmp	r3, #2
 80071a6:	d901      	bls.n	80071ac <HAL_RCC_OscConfig+0x1c4>
 80071a8:	2303      	movs	r3, #3
 80071aa:	e1b4      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 80071ac:	4b2b      	ldr	r3, [pc, #172]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	f003 0302 	and.w	r3, r3, #2
 80071b4:	2b00      	cmp	r3, #0
 80071b6:	d0f0      	beq.n	800719a <HAL_RCC_OscConfig+0x1b2>
 80071b8:	4b28      	ldr	r3, [pc, #160]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80071ba:	681b      	ldr	r3, [r3, #0]
 80071bc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	691b      	ldr	r3, [r3, #16]
 80071c4:	00db      	lsls	r3, r3, #3
 80071c6:	4925      	ldr	r1, [pc, #148]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80071c8:	4313      	orrs	r3, r2
 80071ca:	600b      	str	r3, [r1, #0]
 80071cc:	e015      	b.n	80071fa <HAL_RCC_OscConfig+0x212>
 80071ce:	4b24      	ldr	r3, [pc, #144]	; (8007260 <HAL_RCC_OscConfig+0x278>)
 80071d0:	2200      	movs	r2, #0
 80071d2:	601a      	str	r2, [r3, #0]
 80071d4:	f7fd ff6a 	bl	80050ac <HAL_GetTick>
 80071d8:	6138      	str	r0, [r7, #16]
 80071da:	e008      	b.n	80071ee <HAL_RCC_OscConfig+0x206>
 80071dc:	f7fd ff66 	bl	80050ac <HAL_GetTick>
 80071e0:	4602      	mov	r2, r0
 80071e2:	693b      	ldr	r3, [r7, #16]
 80071e4:	1ad3      	subs	r3, r2, r3
 80071e6:	2b02      	cmp	r3, #2
 80071e8:	d901      	bls.n	80071ee <HAL_RCC_OscConfig+0x206>
 80071ea:	2303      	movs	r3, #3
 80071ec:	e193      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 80071ee:	4b1b      	ldr	r3, [pc, #108]	; (800725c <HAL_RCC_OscConfig+0x274>)
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	f003 0302 	and.w	r3, r3, #2
 80071f6:	2b00      	cmp	r3, #0
 80071f8:	d1f0      	bne.n	80071dc <HAL_RCC_OscConfig+0x1f4>
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	f003 0308 	and.w	r3, r3, #8
 8007202:	2b00      	cmp	r3, #0
 8007204:	d036      	beq.n	8007274 <HAL_RCC_OscConfig+0x28c>
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	695b      	ldr	r3, [r3, #20]
 800720a:	2b00      	cmp	r3, #0
 800720c:	d016      	beq.n	800723c <HAL_RCC_OscConfig+0x254>
 800720e:	4b15      	ldr	r3, [pc, #84]	; (8007264 <HAL_RCC_OscConfig+0x27c>)
 8007210:	2201      	movs	r2, #1
 8007212:	601a      	str	r2, [r3, #0]
 8007214:	f7fd ff4a 	bl	80050ac <HAL_GetTick>
 8007218:	6138      	str	r0, [r7, #16]
 800721a:	e008      	b.n	800722e <HAL_RCC_OscConfig+0x246>
 800721c:	f7fd ff46 	bl	80050ac <HAL_GetTick>
 8007220:	4602      	mov	r2, r0
 8007222:	693b      	ldr	r3, [r7, #16]
 8007224:	1ad3      	subs	r3, r2, r3
 8007226:	2b02      	cmp	r3, #2
 8007228:	d901      	bls.n	800722e <HAL_RCC_OscConfig+0x246>
 800722a:	2303      	movs	r3, #3
 800722c:	e173      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 800722e:	4b0b      	ldr	r3, [pc, #44]	; (800725c <HAL_RCC_OscConfig+0x274>)
 8007230:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007232:	f003 0302 	and.w	r3, r3, #2
 8007236:	2b00      	cmp	r3, #0
 8007238:	d0f0      	beq.n	800721c <HAL_RCC_OscConfig+0x234>
 800723a:	e01b      	b.n	8007274 <HAL_RCC_OscConfig+0x28c>
 800723c:	4b09      	ldr	r3, [pc, #36]	; (8007264 <HAL_RCC_OscConfig+0x27c>)
 800723e:	2200      	movs	r2, #0
 8007240:	601a      	str	r2, [r3, #0]
 8007242:	f7fd ff33 	bl	80050ac <HAL_GetTick>
 8007246:	6138      	str	r0, [r7, #16]
 8007248:	e00e      	b.n	8007268 <HAL_RCC_OscConfig+0x280>
 800724a:	f7fd ff2f 	bl	80050ac <HAL_GetTick>
 800724e:	4602      	mov	r2, r0
 8007250:	693b      	ldr	r3, [r7, #16]
 8007252:	1ad3      	subs	r3, r2, r3
 8007254:	2b02      	cmp	r3, #2
 8007256:	d907      	bls.n	8007268 <HAL_RCC_OscConfig+0x280>
 8007258:	2303      	movs	r3, #3
 800725a:	e15c      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 800725c:	40023800 	.word	0x40023800
 8007260:	42470000 	.word	0x42470000
 8007264:	42470e80 	.word	0x42470e80
 8007268:	4b8a      	ldr	r3, [pc, #552]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800726a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800726c:	f003 0302 	and.w	r3, r3, #2
 8007270:	2b00      	cmp	r3, #0
 8007272:	d1ea      	bne.n	800724a <HAL_RCC_OscConfig+0x262>
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	f003 0304 	and.w	r3, r3, #4
 800727c:	2b00      	cmp	r3, #0
 800727e:	f000 8097 	beq.w	80073b0 <HAL_RCC_OscConfig+0x3c8>
 8007282:	2300      	movs	r3, #0
 8007284:	75fb      	strb	r3, [r7, #23]
 8007286:	4b83      	ldr	r3, [pc, #524]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007288:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800728a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800728e:	2b00      	cmp	r3, #0
 8007290:	d10f      	bne.n	80072b2 <HAL_RCC_OscConfig+0x2ca>
 8007292:	2300      	movs	r3, #0
 8007294:	60bb      	str	r3, [r7, #8]
 8007296:	4b7f      	ldr	r3, [pc, #508]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007298:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800729a:	4a7e      	ldr	r2, [pc, #504]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800729c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80072a0:	6413      	str	r3, [r2, #64]	; 0x40
 80072a2:	4b7c      	ldr	r3, [pc, #496]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80072a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80072aa:	60bb      	str	r3, [r7, #8]
 80072ac:	68bb      	ldr	r3, [r7, #8]
 80072ae:	2301      	movs	r3, #1
 80072b0:	75fb      	strb	r3, [r7, #23]
 80072b2:	4b79      	ldr	r3, [pc, #484]	; (8007498 <HAL_RCC_OscConfig+0x4b0>)
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80072ba:	2b00      	cmp	r3, #0
 80072bc:	d118      	bne.n	80072f0 <HAL_RCC_OscConfig+0x308>
 80072be:	4b76      	ldr	r3, [pc, #472]	; (8007498 <HAL_RCC_OscConfig+0x4b0>)
 80072c0:	681b      	ldr	r3, [r3, #0]
 80072c2:	4a75      	ldr	r2, [pc, #468]	; (8007498 <HAL_RCC_OscConfig+0x4b0>)
 80072c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80072c8:	6013      	str	r3, [r2, #0]
 80072ca:	f7fd feef 	bl	80050ac <HAL_GetTick>
 80072ce:	6138      	str	r0, [r7, #16]
 80072d0:	e008      	b.n	80072e4 <HAL_RCC_OscConfig+0x2fc>
 80072d2:	f7fd feeb 	bl	80050ac <HAL_GetTick>
 80072d6:	4602      	mov	r2, r0
 80072d8:	693b      	ldr	r3, [r7, #16]
 80072da:	1ad3      	subs	r3, r2, r3
 80072dc:	2b02      	cmp	r3, #2
 80072de:	d901      	bls.n	80072e4 <HAL_RCC_OscConfig+0x2fc>
 80072e0:	2303      	movs	r3, #3
 80072e2:	e118      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 80072e4:	4b6c      	ldr	r3, [pc, #432]	; (8007498 <HAL_RCC_OscConfig+0x4b0>)
 80072e6:	681b      	ldr	r3, [r3, #0]
 80072e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80072ec:	2b00      	cmp	r3, #0
 80072ee:	d0f0      	beq.n	80072d2 <HAL_RCC_OscConfig+0x2ea>
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	689b      	ldr	r3, [r3, #8]
 80072f4:	2b01      	cmp	r3, #1
 80072f6:	d106      	bne.n	8007306 <HAL_RCC_OscConfig+0x31e>
 80072f8:	4b66      	ldr	r3, [pc, #408]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80072fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072fc:	4a65      	ldr	r2, [pc, #404]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80072fe:	f043 0301 	orr.w	r3, r3, #1
 8007302:	6713      	str	r3, [r2, #112]	; 0x70
 8007304:	e01c      	b.n	8007340 <HAL_RCC_OscConfig+0x358>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	689b      	ldr	r3, [r3, #8]
 800730a:	2b05      	cmp	r3, #5
 800730c:	d10c      	bne.n	8007328 <HAL_RCC_OscConfig+0x340>
 800730e:	4b61      	ldr	r3, [pc, #388]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007310:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007312:	4a60      	ldr	r2, [pc, #384]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007314:	f043 0304 	orr.w	r3, r3, #4
 8007318:	6713      	str	r3, [r2, #112]	; 0x70
 800731a:	4b5e      	ldr	r3, [pc, #376]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800731c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800731e:	4a5d      	ldr	r2, [pc, #372]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007320:	f043 0301 	orr.w	r3, r3, #1
 8007324:	6713      	str	r3, [r2, #112]	; 0x70
 8007326:	e00b      	b.n	8007340 <HAL_RCC_OscConfig+0x358>
 8007328:	4b5a      	ldr	r3, [pc, #360]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800732a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800732c:	4a59      	ldr	r2, [pc, #356]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800732e:	f023 0301 	bic.w	r3, r3, #1
 8007332:	6713      	str	r3, [r2, #112]	; 0x70
 8007334:	4b57      	ldr	r3, [pc, #348]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007336:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007338:	4a56      	ldr	r2, [pc, #344]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800733a:	f023 0304 	bic.w	r3, r3, #4
 800733e:	6713      	str	r3, [r2, #112]	; 0x70
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	689b      	ldr	r3, [r3, #8]
 8007344:	2b00      	cmp	r3, #0
 8007346:	d015      	beq.n	8007374 <HAL_RCC_OscConfig+0x38c>
 8007348:	f7fd feb0 	bl	80050ac <HAL_GetTick>
 800734c:	6138      	str	r0, [r7, #16]
 800734e:	e00a      	b.n	8007366 <HAL_RCC_OscConfig+0x37e>
 8007350:	f7fd feac 	bl	80050ac <HAL_GetTick>
 8007354:	4602      	mov	r2, r0
 8007356:	693b      	ldr	r3, [r7, #16]
 8007358:	1ad3      	subs	r3, r2, r3
 800735a:	f241 3288 	movw	r2, #5000	; 0x1388
 800735e:	4293      	cmp	r3, r2
 8007360:	d901      	bls.n	8007366 <HAL_RCC_OscConfig+0x37e>
 8007362:	2303      	movs	r3, #3
 8007364:	e0d7      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 8007366:	4b4b      	ldr	r3, [pc, #300]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007368:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800736a:	f003 0302 	and.w	r3, r3, #2
 800736e:	2b00      	cmp	r3, #0
 8007370:	d0ee      	beq.n	8007350 <HAL_RCC_OscConfig+0x368>
 8007372:	e014      	b.n	800739e <HAL_RCC_OscConfig+0x3b6>
 8007374:	f7fd fe9a 	bl	80050ac <HAL_GetTick>
 8007378:	6138      	str	r0, [r7, #16]
 800737a:	e00a      	b.n	8007392 <HAL_RCC_OscConfig+0x3aa>
 800737c:	f7fd fe96 	bl	80050ac <HAL_GetTick>
 8007380:	4602      	mov	r2, r0
 8007382:	693b      	ldr	r3, [r7, #16]
 8007384:	1ad3      	subs	r3, r2, r3
 8007386:	f241 3288 	movw	r2, #5000	; 0x1388
 800738a:	4293      	cmp	r3, r2
 800738c:	d901      	bls.n	8007392 <HAL_RCC_OscConfig+0x3aa>
 800738e:	2303      	movs	r3, #3
 8007390:	e0c1      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 8007392:	4b40      	ldr	r3, [pc, #256]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007394:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007396:	f003 0302 	and.w	r3, r3, #2
 800739a:	2b00      	cmp	r3, #0
 800739c:	d1ee      	bne.n	800737c <HAL_RCC_OscConfig+0x394>
 800739e:	7dfb      	ldrb	r3, [r7, #23]
 80073a0:	2b01      	cmp	r3, #1
 80073a2:	d105      	bne.n	80073b0 <HAL_RCC_OscConfig+0x3c8>
 80073a4:	4b3b      	ldr	r3, [pc, #236]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80073a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073a8:	4a3a      	ldr	r2, [pc, #232]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80073aa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80073ae:	6413      	str	r3, [r2, #64]	; 0x40
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	699b      	ldr	r3, [r3, #24]
 80073b4:	2b00      	cmp	r3, #0
 80073b6:	f000 80ad 	beq.w	8007514 <HAL_RCC_OscConfig+0x52c>
 80073ba:	4b36      	ldr	r3, [pc, #216]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80073bc:	689b      	ldr	r3, [r3, #8]
 80073be:	f003 030c 	and.w	r3, r3, #12
 80073c2:	2b08      	cmp	r3, #8
 80073c4:	d060      	beq.n	8007488 <HAL_RCC_OscConfig+0x4a0>
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	699b      	ldr	r3, [r3, #24]
 80073ca:	2b02      	cmp	r3, #2
 80073cc:	d145      	bne.n	800745a <HAL_RCC_OscConfig+0x472>
 80073ce:	4b33      	ldr	r3, [pc, #204]	; (800749c <HAL_RCC_OscConfig+0x4b4>)
 80073d0:	2200      	movs	r2, #0
 80073d2:	601a      	str	r2, [r3, #0]
 80073d4:	f7fd fe6a 	bl	80050ac <HAL_GetTick>
 80073d8:	6138      	str	r0, [r7, #16]
 80073da:	e008      	b.n	80073ee <HAL_RCC_OscConfig+0x406>
 80073dc:	f7fd fe66 	bl	80050ac <HAL_GetTick>
 80073e0:	4602      	mov	r2, r0
 80073e2:	693b      	ldr	r3, [r7, #16]
 80073e4:	1ad3      	subs	r3, r2, r3
 80073e6:	2b02      	cmp	r3, #2
 80073e8:	d901      	bls.n	80073ee <HAL_RCC_OscConfig+0x406>
 80073ea:	2303      	movs	r3, #3
 80073ec:	e093      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 80073ee:	4b29      	ldr	r3, [pc, #164]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80073f6:	2b00      	cmp	r3, #0
 80073f8:	d1f0      	bne.n	80073dc <HAL_RCC_OscConfig+0x3f4>
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	69da      	ldr	r2, [r3, #28]
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	6a1b      	ldr	r3, [r3, #32]
 8007402:	431a      	orrs	r2, r3
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007408:	019b      	lsls	r3, r3, #6
 800740a:	431a      	orrs	r2, r3
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007410:	085b      	lsrs	r3, r3, #1
 8007412:	3b01      	subs	r3, #1
 8007414:	041b      	lsls	r3, r3, #16
 8007416:	431a      	orrs	r2, r3
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800741c:	061b      	lsls	r3, r3, #24
 800741e:	431a      	orrs	r2, r3
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007424:	071b      	lsls	r3, r3, #28
 8007426:	491b      	ldr	r1, [pc, #108]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 8007428:	4313      	orrs	r3, r2
 800742a:	604b      	str	r3, [r1, #4]
 800742c:	4b1b      	ldr	r3, [pc, #108]	; (800749c <HAL_RCC_OscConfig+0x4b4>)
 800742e:	2201      	movs	r2, #1
 8007430:	601a      	str	r2, [r3, #0]
 8007432:	f7fd fe3b 	bl	80050ac <HAL_GetTick>
 8007436:	6138      	str	r0, [r7, #16]
 8007438:	e008      	b.n	800744c <HAL_RCC_OscConfig+0x464>
 800743a:	f7fd fe37 	bl	80050ac <HAL_GetTick>
 800743e:	4602      	mov	r2, r0
 8007440:	693b      	ldr	r3, [r7, #16]
 8007442:	1ad3      	subs	r3, r2, r3
 8007444:	2b02      	cmp	r3, #2
 8007446:	d901      	bls.n	800744c <HAL_RCC_OscConfig+0x464>
 8007448:	2303      	movs	r3, #3
 800744a:	e064      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 800744c:	4b11      	ldr	r3, [pc, #68]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007454:	2b00      	cmp	r3, #0
 8007456:	d0f0      	beq.n	800743a <HAL_RCC_OscConfig+0x452>
 8007458:	e05c      	b.n	8007514 <HAL_RCC_OscConfig+0x52c>
 800745a:	4b10      	ldr	r3, [pc, #64]	; (800749c <HAL_RCC_OscConfig+0x4b4>)
 800745c:	2200      	movs	r2, #0
 800745e:	601a      	str	r2, [r3, #0]
 8007460:	f7fd fe24 	bl	80050ac <HAL_GetTick>
 8007464:	6138      	str	r0, [r7, #16]
 8007466:	e008      	b.n	800747a <HAL_RCC_OscConfig+0x492>
 8007468:	f7fd fe20 	bl	80050ac <HAL_GetTick>
 800746c:	4602      	mov	r2, r0
 800746e:	693b      	ldr	r3, [r7, #16]
 8007470:	1ad3      	subs	r3, r2, r3
 8007472:	2b02      	cmp	r3, #2
 8007474:	d901      	bls.n	800747a <HAL_RCC_OscConfig+0x492>
 8007476:	2303      	movs	r3, #3
 8007478:	e04d      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 800747a:	4b06      	ldr	r3, [pc, #24]	; (8007494 <HAL_RCC_OscConfig+0x4ac>)
 800747c:	681b      	ldr	r3, [r3, #0]
 800747e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007482:	2b00      	cmp	r3, #0
 8007484:	d1f0      	bne.n	8007468 <HAL_RCC_OscConfig+0x480>
 8007486:	e045      	b.n	8007514 <HAL_RCC_OscConfig+0x52c>
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	699b      	ldr	r3, [r3, #24]
 800748c:	2b01      	cmp	r3, #1
 800748e:	d107      	bne.n	80074a0 <HAL_RCC_OscConfig+0x4b8>
 8007490:	2301      	movs	r3, #1
 8007492:	e040      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 8007494:	40023800 	.word	0x40023800
 8007498:	40007000 	.word	0x40007000
 800749c:	42470060 	.word	0x42470060
 80074a0:	4b1f      	ldr	r3, [pc, #124]	; (8007520 <HAL_RCC_OscConfig+0x538>)
 80074a2:	685b      	ldr	r3, [r3, #4]
 80074a4:	60fb      	str	r3, [r7, #12]
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	699b      	ldr	r3, [r3, #24]
 80074aa:	2b01      	cmp	r3, #1
 80074ac:	d030      	beq.n	8007510 <HAL_RCC_OscConfig+0x528>
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80074b4:	687b      	ldr	r3, [r7, #4]
 80074b6:	69db      	ldr	r3, [r3, #28]
 80074b8:	429a      	cmp	r2, r3
 80074ba:	d129      	bne.n	8007510 <HAL_RCC_OscConfig+0x528>
 80074bc:	68fb      	ldr	r3, [r7, #12]
 80074be:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	6a1b      	ldr	r3, [r3, #32]
 80074c6:	429a      	cmp	r2, r3
 80074c8:	d122      	bne.n	8007510 <HAL_RCC_OscConfig+0x528>
 80074ca:	68fa      	ldr	r2, [r7, #12]
 80074cc:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80074d0:	4013      	ands	r3, r2
 80074d2:	687a      	ldr	r2, [r7, #4]
 80074d4:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80074d6:	0192      	lsls	r2, r2, #6
 80074d8:	4293      	cmp	r3, r2
 80074da:	d119      	bne.n	8007510 <HAL_RCC_OscConfig+0x528>
 80074dc:	68fb      	ldr	r3, [r7, #12]
 80074de:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80074e6:	085b      	lsrs	r3, r3, #1
 80074e8:	3b01      	subs	r3, #1
 80074ea:	041b      	lsls	r3, r3, #16
 80074ec:	429a      	cmp	r2, r3
 80074ee:	d10f      	bne.n	8007510 <HAL_RCC_OscConfig+0x528>
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80074f6:	687b      	ldr	r3, [r7, #4]
 80074f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80074fa:	061b      	lsls	r3, r3, #24
 80074fc:	429a      	cmp	r2, r3
 80074fe:	d107      	bne.n	8007510 <HAL_RCC_OscConfig+0x528>
 8007500:	68fb      	ldr	r3, [r7, #12]
 8007502:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8007506:	687b      	ldr	r3, [r7, #4]
 8007508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800750a:	071b      	lsls	r3, r3, #28
 800750c:	429a      	cmp	r2, r3
 800750e:	d001      	beq.n	8007514 <HAL_RCC_OscConfig+0x52c>
 8007510:	2301      	movs	r3, #1
 8007512:	e000      	b.n	8007516 <HAL_RCC_OscConfig+0x52e>
 8007514:	2300      	movs	r3, #0
 8007516:	4618      	mov	r0, r3
 8007518:	3718      	adds	r7, #24
 800751a:	46bd      	mov	sp, r7
 800751c:	bd80      	pop	{r7, pc}
 800751e:	bf00      	nop
 8007520:	40023800 	.word	0x40023800

08007524 <HAL_SPI_Init>:
 8007524:	b580      	push	{r7, lr}
 8007526:	b082      	sub	sp, #8
 8007528:	af00      	add	r7, sp, #0
 800752a:	6078      	str	r0, [r7, #4]
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	2b00      	cmp	r3, #0
 8007530:	d101      	bne.n	8007536 <HAL_SPI_Init+0x12>
 8007532:	2301      	movs	r3, #1
 8007534:	e07b      	b.n	800762e <HAL_SPI_Init+0x10a>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800753a:	2b00      	cmp	r3, #0
 800753c:	d108      	bne.n	8007550 <HAL_SPI_Init+0x2c>
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	685b      	ldr	r3, [r3, #4]
 8007542:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007546:	d009      	beq.n	800755c <HAL_SPI_Init+0x38>
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	2200      	movs	r2, #0
 800754c:	61da      	str	r2, [r3, #28]
 800754e:	e005      	b.n	800755c <HAL_SPI_Init+0x38>
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	2200      	movs	r2, #0
 8007554:	611a      	str	r2, [r3, #16]
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	2200      	movs	r2, #0
 800755a:	615a      	str	r2, [r3, #20]
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	2200      	movs	r2, #0
 8007560:	629a      	str	r2, [r3, #40]	; 0x28
 8007562:	687b      	ldr	r3, [r7, #4]
 8007564:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007568:	b2db      	uxtb	r3, r3
 800756a:	2b00      	cmp	r3, #0
 800756c:	d106      	bne.n	800757c <HAL_SPI_Init+0x58>
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	2200      	movs	r2, #0
 8007572:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007576:	6878      	ldr	r0, [r7, #4]
 8007578:	f7fd faa4 	bl	8004ac4 <HAL_SPI_MspInit>
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	2202      	movs	r2, #2
 8007580:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	681a      	ldr	r2, [r3, #0]
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007592:	601a      	str	r2, [r3, #0]
 8007594:	687b      	ldr	r3, [r7, #4]
 8007596:	685b      	ldr	r3, [r3, #4]
 8007598:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	689b      	ldr	r3, [r3, #8]
 80075a0:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80075a4:	431a      	orrs	r2, r3
 80075a6:	687b      	ldr	r3, [r7, #4]
 80075a8:	68db      	ldr	r3, [r3, #12]
 80075aa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80075ae:	431a      	orrs	r2, r3
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	691b      	ldr	r3, [r3, #16]
 80075b4:	f003 0302 	and.w	r3, r3, #2
 80075b8:	431a      	orrs	r2, r3
 80075ba:	687b      	ldr	r3, [r7, #4]
 80075bc:	695b      	ldr	r3, [r3, #20]
 80075be:	f003 0301 	and.w	r3, r3, #1
 80075c2:	431a      	orrs	r2, r3
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	699b      	ldr	r3, [r3, #24]
 80075c8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80075cc:	431a      	orrs	r2, r3
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	69db      	ldr	r3, [r3, #28]
 80075d2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80075d6:	431a      	orrs	r2, r3
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	6a1b      	ldr	r3, [r3, #32]
 80075dc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80075e0:	ea42 0103 	orr.w	r1, r2, r3
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80075e8:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	681b      	ldr	r3, [r3, #0]
 80075f0:	430a      	orrs	r2, r1
 80075f2:	601a      	str	r2, [r3, #0]
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	699b      	ldr	r3, [r3, #24]
 80075f8:	0c1b      	lsrs	r3, r3, #16
 80075fa:	f003 0104 	and.w	r1, r3, #4
 80075fe:	687b      	ldr	r3, [r7, #4]
 8007600:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007602:	f003 0210 	and.w	r2, r3, #16
 8007606:	687b      	ldr	r3, [r7, #4]
 8007608:	681b      	ldr	r3, [r3, #0]
 800760a:	430a      	orrs	r2, r1
 800760c:	605a      	str	r2, [r3, #4]
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	69da      	ldr	r2, [r3, #28]
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	681b      	ldr	r3, [r3, #0]
 8007618:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800761c:	61da      	str	r2, [r3, #28]
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	2200      	movs	r2, #0
 8007622:	655a      	str	r2, [r3, #84]	; 0x54
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	2201      	movs	r2, #1
 8007628:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800762c:	2300      	movs	r3, #0
 800762e:	4618      	mov	r0, r3
 8007630:	3708      	adds	r7, #8
 8007632:	46bd      	mov	sp, r7
 8007634:	bd80      	pop	{r7, pc}

08007636 <HAL_SPI_Transmit>:
 8007636:	b580      	push	{r7, lr}
 8007638:	b088      	sub	sp, #32
 800763a:	af00      	add	r7, sp, #0
 800763c:	60f8      	str	r0, [r7, #12]
 800763e:	60b9      	str	r1, [r7, #8]
 8007640:	603b      	str	r3, [r7, #0]
 8007642:	4613      	mov	r3, r2
 8007644:	80fb      	strh	r3, [r7, #6]
 8007646:	2300      	movs	r3, #0
 8007648:	77fb      	strb	r3, [r7, #31]
 800764a:	68fb      	ldr	r3, [r7, #12]
 800764c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007650:	2b01      	cmp	r3, #1
 8007652:	d101      	bne.n	8007658 <HAL_SPI_Transmit+0x22>
 8007654:	2302      	movs	r3, #2
 8007656:	e126      	b.n	80078a6 <HAL_SPI_Transmit+0x270>
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	2201      	movs	r2, #1
 800765c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007660:	f7fd fd24 	bl	80050ac <HAL_GetTick>
 8007664:	61b8      	str	r0, [r7, #24]
 8007666:	88fb      	ldrh	r3, [r7, #6]
 8007668:	82fb      	strh	r3, [r7, #22]
 800766a:	68fb      	ldr	r3, [r7, #12]
 800766c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007670:	b2db      	uxtb	r3, r3
 8007672:	2b01      	cmp	r3, #1
 8007674:	d002      	beq.n	800767c <HAL_SPI_Transmit+0x46>
 8007676:	2302      	movs	r3, #2
 8007678:	77fb      	strb	r3, [r7, #31]
 800767a:	e10b      	b.n	8007894 <HAL_SPI_Transmit+0x25e>
 800767c:	68bb      	ldr	r3, [r7, #8]
 800767e:	2b00      	cmp	r3, #0
 8007680:	d002      	beq.n	8007688 <HAL_SPI_Transmit+0x52>
 8007682:	88fb      	ldrh	r3, [r7, #6]
 8007684:	2b00      	cmp	r3, #0
 8007686:	d102      	bne.n	800768e <HAL_SPI_Transmit+0x58>
 8007688:	2301      	movs	r3, #1
 800768a:	77fb      	strb	r3, [r7, #31]
 800768c:	e102      	b.n	8007894 <HAL_SPI_Transmit+0x25e>
 800768e:	68fb      	ldr	r3, [r7, #12]
 8007690:	2203      	movs	r2, #3
 8007692:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8007696:	68fb      	ldr	r3, [r7, #12]
 8007698:	2200      	movs	r2, #0
 800769a:	655a      	str	r2, [r3, #84]	; 0x54
 800769c:	68fb      	ldr	r3, [r7, #12]
 800769e:	68ba      	ldr	r2, [r7, #8]
 80076a0:	631a      	str	r2, [r3, #48]	; 0x30
 80076a2:	68fb      	ldr	r3, [r7, #12]
 80076a4:	88fa      	ldrh	r2, [r7, #6]
 80076a6:	869a      	strh	r2, [r3, #52]	; 0x34
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	88fa      	ldrh	r2, [r7, #6]
 80076ac:	86da      	strh	r2, [r3, #54]	; 0x36
 80076ae:	68fb      	ldr	r3, [r7, #12]
 80076b0:	2200      	movs	r2, #0
 80076b2:	639a      	str	r2, [r3, #56]	; 0x38
 80076b4:	68fb      	ldr	r3, [r7, #12]
 80076b6:	2200      	movs	r2, #0
 80076b8:	879a      	strh	r2, [r3, #60]	; 0x3c
 80076ba:	68fb      	ldr	r3, [r7, #12]
 80076bc:	2200      	movs	r2, #0
 80076be:	87da      	strh	r2, [r3, #62]	; 0x3e
 80076c0:	68fb      	ldr	r3, [r7, #12]
 80076c2:	2200      	movs	r2, #0
 80076c4:	645a      	str	r2, [r3, #68]	; 0x44
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	2200      	movs	r2, #0
 80076ca:	641a      	str	r2, [r3, #64]	; 0x40
 80076cc:	68fb      	ldr	r3, [r7, #12]
 80076ce:	689b      	ldr	r3, [r3, #8]
 80076d0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80076d4:	d10f      	bne.n	80076f6 <HAL_SPI_Transmit+0xc0>
 80076d6:	68fb      	ldr	r3, [r7, #12]
 80076d8:	681b      	ldr	r3, [r3, #0]
 80076da:	681a      	ldr	r2, [r3, #0]
 80076dc:	68fb      	ldr	r3, [r7, #12]
 80076de:	681b      	ldr	r3, [r3, #0]
 80076e0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80076e4:	601a      	str	r2, [r3, #0]
 80076e6:	68fb      	ldr	r3, [r7, #12]
 80076e8:	681b      	ldr	r3, [r3, #0]
 80076ea:	681a      	ldr	r2, [r3, #0]
 80076ec:	68fb      	ldr	r3, [r7, #12]
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80076f4:	601a      	str	r2, [r3, #0]
 80076f6:	68fb      	ldr	r3, [r7, #12]
 80076f8:	681b      	ldr	r3, [r3, #0]
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007700:	2b40      	cmp	r3, #64	; 0x40
 8007702:	d007      	beq.n	8007714 <HAL_SPI_Transmit+0xde>
 8007704:	68fb      	ldr	r3, [r7, #12]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	681a      	ldr	r2, [r3, #0]
 800770a:	68fb      	ldr	r3, [r7, #12]
 800770c:	681b      	ldr	r3, [r3, #0]
 800770e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007712:	601a      	str	r2, [r3, #0]
 8007714:	68fb      	ldr	r3, [r7, #12]
 8007716:	68db      	ldr	r3, [r3, #12]
 8007718:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800771c:	d14b      	bne.n	80077b6 <HAL_SPI_Transmit+0x180>
 800771e:	68fb      	ldr	r3, [r7, #12]
 8007720:	685b      	ldr	r3, [r3, #4]
 8007722:	2b00      	cmp	r3, #0
 8007724:	d002      	beq.n	800772c <HAL_SPI_Transmit+0xf6>
 8007726:	8afb      	ldrh	r3, [r7, #22]
 8007728:	2b01      	cmp	r3, #1
 800772a:	d13e      	bne.n	80077aa <HAL_SPI_Transmit+0x174>
 800772c:	68fb      	ldr	r3, [r7, #12]
 800772e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007730:	881a      	ldrh	r2, [r3, #0]
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	60da      	str	r2, [r3, #12]
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800773c:	1c9a      	adds	r2, r3, #2
 800773e:	68fb      	ldr	r3, [r7, #12]
 8007740:	631a      	str	r2, [r3, #48]	; 0x30
 8007742:	68fb      	ldr	r3, [r7, #12]
 8007744:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007746:	b29b      	uxth	r3, r3
 8007748:	3b01      	subs	r3, #1
 800774a:	b29a      	uxth	r2, r3
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	86da      	strh	r2, [r3, #54]	; 0x36
 8007750:	e02b      	b.n	80077aa <HAL_SPI_Transmit+0x174>
 8007752:	68fb      	ldr	r3, [r7, #12]
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	689b      	ldr	r3, [r3, #8]
 8007758:	f003 0302 	and.w	r3, r3, #2
 800775c:	2b02      	cmp	r3, #2
 800775e:	d112      	bne.n	8007786 <HAL_SPI_Transmit+0x150>
 8007760:	68fb      	ldr	r3, [r7, #12]
 8007762:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007764:	881a      	ldrh	r2, [r3, #0]
 8007766:	68fb      	ldr	r3, [r7, #12]
 8007768:	681b      	ldr	r3, [r3, #0]
 800776a:	60da      	str	r2, [r3, #12]
 800776c:	68fb      	ldr	r3, [r7, #12]
 800776e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007770:	1c9a      	adds	r2, r3, #2
 8007772:	68fb      	ldr	r3, [r7, #12]
 8007774:	631a      	str	r2, [r3, #48]	; 0x30
 8007776:	68fb      	ldr	r3, [r7, #12]
 8007778:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800777a:	b29b      	uxth	r3, r3
 800777c:	3b01      	subs	r3, #1
 800777e:	b29a      	uxth	r2, r3
 8007780:	68fb      	ldr	r3, [r7, #12]
 8007782:	86da      	strh	r2, [r3, #54]	; 0x36
 8007784:	e011      	b.n	80077aa <HAL_SPI_Transmit+0x174>
 8007786:	f7fd fc91 	bl	80050ac <HAL_GetTick>
 800778a:	4602      	mov	r2, r0
 800778c:	69bb      	ldr	r3, [r7, #24]
 800778e:	1ad3      	subs	r3, r2, r3
 8007790:	683a      	ldr	r2, [r7, #0]
 8007792:	429a      	cmp	r2, r3
 8007794:	d803      	bhi.n	800779e <HAL_SPI_Transmit+0x168>
 8007796:	683b      	ldr	r3, [r7, #0]
 8007798:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800779c:	d102      	bne.n	80077a4 <HAL_SPI_Transmit+0x16e>
 800779e:	683b      	ldr	r3, [r7, #0]
 80077a0:	2b00      	cmp	r3, #0
 80077a2:	d102      	bne.n	80077aa <HAL_SPI_Transmit+0x174>
 80077a4:	2303      	movs	r3, #3
 80077a6:	77fb      	strb	r3, [r7, #31]
 80077a8:	e074      	b.n	8007894 <HAL_SPI_Transmit+0x25e>
 80077aa:	68fb      	ldr	r3, [r7, #12]
 80077ac:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80077ae:	b29b      	uxth	r3, r3
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	d1ce      	bne.n	8007752 <HAL_SPI_Transmit+0x11c>
 80077b4:	e04c      	b.n	8007850 <HAL_SPI_Transmit+0x21a>
 80077b6:	68fb      	ldr	r3, [r7, #12]
 80077b8:	685b      	ldr	r3, [r3, #4]
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d002      	beq.n	80077c4 <HAL_SPI_Transmit+0x18e>
 80077be:	8afb      	ldrh	r3, [r7, #22]
 80077c0:	2b01      	cmp	r3, #1
 80077c2:	d140      	bne.n	8007846 <HAL_SPI_Transmit+0x210>
 80077c4:	68fb      	ldr	r3, [r7, #12]
 80077c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80077c8:	68fb      	ldr	r3, [r7, #12]
 80077ca:	681b      	ldr	r3, [r3, #0]
 80077cc:	330c      	adds	r3, #12
 80077ce:	7812      	ldrb	r2, [r2, #0]
 80077d0:	701a      	strb	r2, [r3, #0]
 80077d2:	68fb      	ldr	r3, [r7, #12]
 80077d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80077d6:	1c5a      	adds	r2, r3, #1
 80077d8:	68fb      	ldr	r3, [r7, #12]
 80077da:	631a      	str	r2, [r3, #48]	; 0x30
 80077dc:	68fb      	ldr	r3, [r7, #12]
 80077de:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80077e0:	b29b      	uxth	r3, r3
 80077e2:	3b01      	subs	r3, #1
 80077e4:	b29a      	uxth	r2, r3
 80077e6:	68fb      	ldr	r3, [r7, #12]
 80077e8:	86da      	strh	r2, [r3, #54]	; 0x36
 80077ea:	e02c      	b.n	8007846 <HAL_SPI_Transmit+0x210>
 80077ec:	68fb      	ldr	r3, [r7, #12]
 80077ee:	681b      	ldr	r3, [r3, #0]
 80077f0:	689b      	ldr	r3, [r3, #8]
 80077f2:	f003 0302 	and.w	r3, r3, #2
 80077f6:	2b02      	cmp	r3, #2
 80077f8:	d113      	bne.n	8007822 <HAL_SPI_Transmit+0x1ec>
 80077fa:	68fb      	ldr	r3, [r7, #12]
 80077fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80077fe:	68fb      	ldr	r3, [r7, #12]
 8007800:	681b      	ldr	r3, [r3, #0]
 8007802:	330c      	adds	r3, #12
 8007804:	7812      	ldrb	r2, [r2, #0]
 8007806:	701a      	strb	r2, [r3, #0]
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800780c:	1c5a      	adds	r2, r3, #1
 800780e:	68fb      	ldr	r3, [r7, #12]
 8007810:	631a      	str	r2, [r3, #48]	; 0x30
 8007812:	68fb      	ldr	r3, [r7, #12]
 8007814:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007816:	b29b      	uxth	r3, r3
 8007818:	3b01      	subs	r3, #1
 800781a:	b29a      	uxth	r2, r3
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	86da      	strh	r2, [r3, #54]	; 0x36
 8007820:	e011      	b.n	8007846 <HAL_SPI_Transmit+0x210>
 8007822:	f7fd fc43 	bl	80050ac <HAL_GetTick>
 8007826:	4602      	mov	r2, r0
 8007828:	69bb      	ldr	r3, [r7, #24]
 800782a:	1ad3      	subs	r3, r2, r3
 800782c:	683a      	ldr	r2, [r7, #0]
 800782e:	429a      	cmp	r2, r3
 8007830:	d803      	bhi.n	800783a <HAL_SPI_Transmit+0x204>
 8007832:	683b      	ldr	r3, [r7, #0]
 8007834:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007838:	d102      	bne.n	8007840 <HAL_SPI_Transmit+0x20a>
 800783a:	683b      	ldr	r3, [r7, #0]
 800783c:	2b00      	cmp	r3, #0
 800783e:	d102      	bne.n	8007846 <HAL_SPI_Transmit+0x210>
 8007840:	2303      	movs	r3, #3
 8007842:	77fb      	strb	r3, [r7, #31]
 8007844:	e026      	b.n	8007894 <HAL_SPI_Transmit+0x25e>
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800784a:	b29b      	uxth	r3, r3
 800784c:	2b00      	cmp	r3, #0
 800784e:	d1cd      	bne.n	80077ec <HAL_SPI_Transmit+0x1b6>
 8007850:	69ba      	ldr	r2, [r7, #24]
 8007852:	6839      	ldr	r1, [r7, #0]
 8007854:	68f8      	ldr	r0, [r7, #12]
 8007856:	f000 fbcb 	bl	8007ff0 <SPI_EndRxTxTransaction>
 800785a:	4603      	mov	r3, r0
 800785c:	2b00      	cmp	r3, #0
 800785e:	d002      	beq.n	8007866 <HAL_SPI_Transmit+0x230>
 8007860:	68fb      	ldr	r3, [r7, #12]
 8007862:	2220      	movs	r2, #32
 8007864:	655a      	str	r2, [r3, #84]	; 0x54
 8007866:	68fb      	ldr	r3, [r7, #12]
 8007868:	689b      	ldr	r3, [r3, #8]
 800786a:	2b00      	cmp	r3, #0
 800786c:	d10a      	bne.n	8007884 <HAL_SPI_Transmit+0x24e>
 800786e:	2300      	movs	r3, #0
 8007870:	613b      	str	r3, [r7, #16]
 8007872:	68fb      	ldr	r3, [r7, #12]
 8007874:	681b      	ldr	r3, [r3, #0]
 8007876:	68db      	ldr	r3, [r3, #12]
 8007878:	613b      	str	r3, [r7, #16]
 800787a:	68fb      	ldr	r3, [r7, #12]
 800787c:	681b      	ldr	r3, [r3, #0]
 800787e:	689b      	ldr	r3, [r3, #8]
 8007880:	613b      	str	r3, [r7, #16]
 8007882:	693b      	ldr	r3, [r7, #16]
 8007884:	68fb      	ldr	r3, [r7, #12]
 8007886:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007888:	2b00      	cmp	r3, #0
 800788a:	d002      	beq.n	8007892 <HAL_SPI_Transmit+0x25c>
 800788c:	2301      	movs	r3, #1
 800788e:	77fb      	strb	r3, [r7, #31]
 8007890:	e000      	b.n	8007894 <HAL_SPI_Transmit+0x25e>
 8007892:	bf00      	nop
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	2201      	movs	r2, #1
 8007898:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800789c:	68fb      	ldr	r3, [r7, #12]
 800789e:	2200      	movs	r2, #0
 80078a0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80078a4:	7ffb      	ldrb	r3, [r7, #31]
 80078a6:	4618      	mov	r0, r3
 80078a8:	3720      	adds	r7, #32
 80078aa:	46bd      	mov	sp, r7
 80078ac:	bd80      	pop	{r7, pc}

080078ae <HAL_SPI_Receive>:
 80078ae:	b580      	push	{r7, lr}
 80078b0:	b088      	sub	sp, #32
 80078b2:	af02      	add	r7, sp, #8
 80078b4:	60f8      	str	r0, [r7, #12]
 80078b6:	60b9      	str	r1, [r7, #8]
 80078b8:	603b      	str	r3, [r7, #0]
 80078ba:	4613      	mov	r3, r2
 80078bc:	80fb      	strh	r3, [r7, #6]
 80078be:	2300      	movs	r3, #0
 80078c0:	75fb      	strb	r3, [r7, #23]
 80078c2:	68fb      	ldr	r3, [r7, #12]
 80078c4:	685b      	ldr	r3, [r3, #4]
 80078c6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80078ca:	d112      	bne.n	80078f2 <HAL_SPI_Receive+0x44>
 80078cc:	68fb      	ldr	r3, [r7, #12]
 80078ce:	689b      	ldr	r3, [r3, #8]
 80078d0:	2b00      	cmp	r3, #0
 80078d2:	d10e      	bne.n	80078f2 <HAL_SPI_Receive+0x44>
 80078d4:	68fb      	ldr	r3, [r7, #12]
 80078d6:	2204      	movs	r2, #4
 80078d8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80078dc:	88fa      	ldrh	r2, [r7, #6]
 80078de:	683b      	ldr	r3, [r7, #0]
 80078e0:	9300      	str	r3, [sp, #0]
 80078e2:	4613      	mov	r3, r2
 80078e4:	68ba      	ldr	r2, [r7, #8]
 80078e6:	68b9      	ldr	r1, [r7, #8]
 80078e8:	68f8      	ldr	r0, [r7, #12]
 80078ea:	f000 f8f1 	bl	8007ad0 <HAL_SPI_TransmitReceive>
 80078ee:	4603      	mov	r3, r0
 80078f0:	e0ea      	b.n	8007ac8 <HAL_SPI_Receive+0x21a>
 80078f2:	68fb      	ldr	r3, [r7, #12]
 80078f4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80078f8:	2b01      	cmp	r3, #1
 80078fa:	d101      	bne.n	8007900 <HAL_SPI_Receive+0x52>
 80078fc:	2302      	movs	r3, #2
 80078fe:	e0e3      	b.n	8007ac8 <HAL_SPI_Receive+0x21a>
 8007900:	68fb      	ldr	r3, [r7, #12]
 8007902:	2201      	movs	r2, #1
 8007904:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007908:	f7fd fbd0 	bl	80050ac <HAL_GetTick>
 800790c:	6138      	str	r0, [r7, #16]
 800790e:	68fb      	ldr	r3, [r7, #12]
 8007910:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007914:	b2db      	uxtb	r3, r3
 8007916:	2b01      	cmp	r3, #1
 8007918:	d002      	beq.n	8007920 <HAL_SPI_Receive+0x72>
 800791a:	2302      	movs	r3, #2
 800791c:	75fb      	strb	r3, [r7, #23]
 800791e:	e0ca      	b.n	8007ab6 <HAL_SPI_Receive+0x208>
 8007920:	68bb      	ldr	r3, [r7, #8]
 8007922:	2b00      	cmp	r3, #0
 8007924:	d002      	beq.n	800792c <HAL_SPI_Receive+0x7e>
 8007926:	88fb      	ldrh	r3, [r7, #6]
 8007928:	2b00      	cmp	r3, #0
 800792a:	d102      	bne.n	8007932 <HAL_SPI_Receive+0x84>
 800792c:	2301      	movs	r3, #1
 800792e:	75fb      	strb	r3, [r7, #23]
 8007930:	e0c1      	b.n	8007ab6 <HAL_SPI_Receive+0x208>
 8007932:	68fb      	ldr	r3, [r7, #12]
 8007934:	2204      	movs	r2, #4
 8007936:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800793a:	68fb      	ldr	r3, [r7, #12]
 800793c:	2200      	movs	r2, #0
 800793e:	655a      	str	r2, [r3, #84]	; 0x54
 8007940:	68fb      	ldr	r3, [r7, #12]
 8007942:	68ba      	ldr	r2, [r7, #8]
 8007944:	639a      	str	r2, [r3, #56]	; 0x38
 8007946:	68fb      	ldr	r3, [r7, #12]
 8007948:	88fa      	ldrh	r2, [r7, #6]
 800794a:	879a      	strh	r2, [r3, #60]	; 0x3c
 800794c:	68fb      	ldr	r3, [r7, #12]
 800794e:	88fa      	ldrh	r2, [r7, #6]
 8007950:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007952:	68fb      	ldr	r3, [r7, #12]
 8007954:	2200      	movs	r2, #0
 8007956:	631a      	str	r2, [r3, #48]	; 0x30
 8007958:	68fb      	ldr	r3, [r7, #12]
 800795a:	2200      	movs	r2, #0
 800795c:	869a      	strh	r2, [r3, #52]	; 0x34
 800795e:	68fb      	ldr	r3, [r7, #12]
 8007960:	2200      	movs	r2, #0
 8007962:	86da      	strh	r2, [r3, #54]	; 0x36
 8007964:	68fb      	ldr	r3, [r7, #12]
 8007966:	2200      	movs	r2, #0
 8007968:	641a      	str	r2, [r3, #64]	; 0x40
 800796a:	68fb      	ldr	r3, [r7, #12]
 800796c:	2200      	movs	r2, #0
 800796e:	645a      	str	r2, [r3, #68]	; 0x44
 8007970:	68fb      	ldr	r3, [r7, #12]
 8007972:	689b      	ldr	r3, [r3, #8]
 8007974:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007978:	d10f      	bne.n	800799a <HAL_SPI_Receive+0xec>
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	681a      	ldr	r2, [r3, #0]
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007988:	601a      	str	r2, [r3, #0]
 800798a:	68fb      	ldr	r3, [r7, #12]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	681a      	ldr	r2, [r3, #0]
 8007990:	68fb      	ldr	r3, [r7, #12]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007998:	601a      	str	r2, [r3, #0]
 800799a:	68fb      	ldr	r3, [r7, #12]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	681b      	ldr	r3, [r3, #0]
 80079a0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80079a4:	2b40      	cmp	r3, #64	; 0x40
 80079a6:	d007      	beq.n	80079b8 <HAL_SPI_Receive+0x10a>
 80079a8:	68fb      	ldr	r3, [r7, #12]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	681a      	ldr	r2, [r3, #0]
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80079b6:	601a      	str	r2, [r3, #0]
 80079b8:	68fb      	ldr	r3, [r7, #12]
 80079ba:	68db      	ldr	r3, [r3, #12]
 80079bc:	2b00      	cmp	r3, #0
 80079be:	d162      	bne.n	8007a86 <HAL_SPI_Receive+0x1d8>
 80079c0:	e02e      	b.n	8007a20 <HAL_SPI_Receive+0x172>
 80079c2:	68fb      	ldr	r3, [r7, #12]
 80079c4:	681b      	ldr	r3, [r3, #0]
 80079c6:	689b      	ldr	r3, [r3, #8]
 80079c8:	f003 0301 	and.w	r3, r3, #1
 80079cc:	2b01      	cmp	r3, #1
 80079ce:	d115      	bne.n	80079fc <HAL_SPI_Receive+0x14e>
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	f103 020c 	add.w	r2, r3, #12
 80079d8:	68fb      	ldr	r3, [r7, #12]
 80079da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80079dc:	7812      	ldrb	r2, [r2, #0]
 80079de:	b2d2      	uxtb	r2, r2
 80079e0:	701a      	strb	r2, [r3, #0]
 80079e2:	68fb      	ldr	r3, [r7, #12]
 80079e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80079e6:	1c5a      	adds	r2, r3, #1
 80079e8:	68fb      	ldr	r3, [r7, #12]
 80079ea:	639a      	str	r2, [r3, #56]	; 0x38
 80079ec:	68fb      	ldr	r3, [r7, #12]
 80079ee:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80079f0:	b29b      	uxth	r3, r3
 80079f2:	3b01      	subs	r3, #1
 80079f4:	b29a      	uxth	r2, r3
 80079f6:	68fb      	ldr	r3, [r7, #12]
 80079f8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80079fa:	e011      	b.n	8007a20 <HAL_SPI_Receive+0x172>
 80079fc:	f7fd fb56 	bl	80050ac <HAL_GetTick>
 8007a00:	4602      	mov	r2, r0
 8007a02:	693b      	ldr	r3, [r7, #16]
 8007a04:	1ad3      	subs	r3, r2, r3
 8007a06:	683a      	ldr	r2, [r7, #0]
 8007a08:	429a      	cmp	r2, r3
 8007a0a:	d803      	bhi.n	8007a14 <HAL_SPI_Receive+0x166>
 8007a0c:	683b      	ldr	r3, [r7, #0]
 8007a0e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007a12:	d102      	bne.n	8007a1a <HAL_SPI_Receive+0x16c>
 8007a14:	683b      	ldr	r3, [r7, #0]
 8007a16:	2b00      	cmp	r3, #0
 8007a18:	d102      	bne.n	8007a20 <HAL_SPI_Receive+0x172>
 8007a1a:	2303      	movs	r3, #3
 8007a1c:	75fb      	strb	r3, [r7, #23]
 8007a1e:	e04a      	b.n	8007ab6 <HAL_SPI_Receive+0x208>
 8007a20:	68fb      	ldr	r3, [r7, #12]
 8007a22:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007a24:	b29b      	uxth	r3, r3
 8007a26:	2b00      	cmp	r3, #0
 8007a28:	d1cb      	bne.n	80079c2 <HAL_SPI_Receive+0x114>
 8007a2a:	e031      	b.n	8007a90 <HAL_SPI_Receive+0x1e2>
 8007a2c:	68fb      	ldr	r3, [r7, #12]
 8007a2e:	681b      	ldr	r3, [r3, #0]
 8007a30:	689b      	ldr	r3, [r3, #8]
 8007a32:	f003 0301 	and.w	r3, r3, #1
 8007a36:	2b01      	cmp	r3, #1
 8007a38:	d113      	bne.n	8007a62 <HAL_SPI_Receive+0x1b4>
 8007a3a:	68fb      	ldr	r3, [r7, #12]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	68da      	ldr	r2, [r3, #12]
 8007a40:	68fb      	ldr	r3, [r7, #12]
 8007a42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a44:	b292      	uxth	r2, r2
 8007a46:	801a      	strh	r2, [r3, #0]
 8007a48:	68fb      	ldr	r3, [r7, #12]
 8007a4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a4c:	1c9a      	adds	r2, r3, #2
 8007a4e:	68fb      	ldr	r3, [r7, #12]
 8007a50:	639a      	str	r2, [r3, #56]	; 0x38
 8007a52:	68fb      	ldr	r3, [r7, #12]
 8007a54:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007a56:	b29b      	uxth	r3, r3
 8007a58:	3b01      	subs	r3, #1
 8007a5a:	b29a      	uxth	r2, r3
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007a60:	e011      	b.n	8007a86 <HAL_SPI_Receive+0x1d8>
 8007a62:	f7fd fb23 	bl	80050ac <HAL_GetTick>
 8007a66:	4602      	mov	r2, r0
 8007a68:	693b      	ldr	r3, [r7, #16]
 8007a6a:	1ad3      	subs	r3, r2, r3
 8007a6c:	683a      	ldr	r2, [r7, #0]
 8007a6e:	429a      	cmp	r2, r3
 8007a70:	d803      	bhi.n	8007a7a <HAL_SPI_Receive+0x1cc>
 8007a72:	683b      	ldr	r3, [r7, #0]
 8007a74:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007a78:	d102      	bne.n	8007a80 <HAL_SPI_Receive+0x1d2>
 8007a7a:	683b      	ldr	r3, [r7, #0]
 8007a7c:	2b00      	cmp	r3, #0
 8007a7e:	d102      	bne.n	8007a86 <HAL_SPI_Receive+0x1d8>
 8007a80:	2303      	movs	r3, #3
 8007a82:	75fb      	strb	r3, [r7, #23]
 8007a84:	e017      	b.n	8007ab6 <HAL_SPI_Receive+0x208>
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007a8a:	b29b      	uxth	r3, r3
 8007a8c:	2b00      	cmp	r3, #0
 8007a8e:	d1cd      	bne.n	8007a2c <HAL_SPI_Receive+0x17e>
 8007a90:	693a      	ldr	r2, [r7, #16]
 8007a92:	6839      	ldr	r1, [r7, #0]
 8007a94:	68f8      	ldr	r0, [r7, #12]
 8007a96:	f000 fa45 	bl	8007f24 <SPI_EndRxTransaction>
 8007a9a:	4603      	mov	r3, r0
 8007a9c:	2b00      	cmp	r3, #0
 8007a9e:	d002      	beq.n	8007aa6 <HAL_SPI_Receive+0x1f8>
 8007aa0:	68fb      	ldr	r3, [r7, #12]
 8007aa2:	2220      	movs	r2, #32
 8007aa4:	655a      	str	r2, [r3, #84]	; 0x54
 8007aa6:	68fb      	ldr	r3, [r7, #12]
 8007aa8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007aaa:	2b00      	cmp	r3, #0
 8007aac:	d002      	beq.n	8007ab4 <HAL_SPI_Receive+0x206>
 8007aae:	2301      	movs	r3, #1
 8007ab0:	75fb      	strb	r3, [r7, #23]
 8007ab2:	e000      	b.n	8007ab6 <HAL_SPI_Receive+0x208>
 8007ab4:	bf00      	nop
 8007ab6:	68fb      	ldr	r3, [r7, #12]
 8007ab8:	2201      	movs	r2, #1
 8007aba:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8007abe:	68fb      	ldr	r3, [r7, #12]
 8007ac0:	2200      	movs	r2, #0
 8007ac2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007ac6:	7dfb      	ldrb	r3, [r7, #23]
 8007ac8:	4618      	mov	r0, r3
 8007aca:	3718      	adds	r7, #24
 8007acc:	46bd      	mov	sp, r7
 8007ace:	bd80      	pop	{r7, pc}

08007ad0 <HAL_SPI_TransmitReceive>:
 8007ad0:	b580      	push	{r7, lr}
 8007ad2:	b08c      	sub	sp, #48	; 0x30
 8007ad4:	af00      	add	r7, sp, #0
 8007ad6:	60f8      	str	r0, [r7, #12]
 8007ad8:	60b9      	str	r1, [r7, #8]
 8007ada:	607a      	str	r2, [r7, #4]
 8007adc:	807b      	strh	r3, [r7, #2]
 8007ade:	2301      	movs	r3, #1
 8007ae0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007ae2:	2300      	movs	r3, #0
 8007ae4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007ae8:	68fb      	ldr	r3, [r7, #12]
 8007aea:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8007aee:	2b01      	cmp	r3, #1
 8007af0:	d101      	bne.n	8007af6 <HAL_SPI_TransmitReceive+0x26>
 8007af2:	2302      	movs	r3, #2
 8007af4:	e18a      	b.n	8007e0c <HAL_SPI_TransmitReceive+0x33c>
 8007af6:	68fb      	ldr	r3, [r7, #12]
 8007af8:	2201      	movs	r2, #1
 8007afa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007afe:	f7fd fad5 	bl	80050ac <HAL_GetTick>
 8007b02:	6278      	str	r0, [r7, #36]	; 0x24
 8007b04:	68fb      	ldr	r3, [r7, #12]
 8007b06:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007b0a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8007b0e:	68fb      	ldr	r3, [r7, #12]
 8007b10:	685b      	ldr	r3, [r3, #4]
 8007b12:	61fb      	str	r3, [r7, #28]
 8007b14:	887b      	ldrh	r3, [r7, #2]
 8007b16:	837b      	strh	r3, [r7, #26]
 8007b18:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007b1c:	2b01      	cmp	r3, #1
 8007b1e:	d00f      	beq.n	8007b40 <HAL_SPI_TransmitReceive+0x70>
 8007b20:	69fb      	ldr	r3, [r7, #28]
 8007b22:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007b26:	d107      	bne.n	8007b38 <HAL_SPI_TransmitReceive+0x68>
 8007b28:	68fb      	ldr	r3, [r7, #12]
 8007b2a:	689b      	ldr	r3, [r3, #8]
 8007b2c:	2b00      	cmp	r3, #0
 8007b2e:	d103      	bne.n	8007b38 <HAL_SPI_TransmitReceive+0x68>
 8007b30:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8007b34:	2b04      	cmp	r3, #4
 8007b36:	d003      	beq.n	8007b40 <HAL_SPI_TransmitReceive+0x70>
 8007b38:	2302      	movs	r3, #2
 8007b3a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007b3e:	e15b      	b.n	8007df8 <HAL_SPI_TransmitReceive+0x328>
 8007b40:	68bb      	ldr	r3, [r7, #8]
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	d005      	beq.n	8007b52 <HAL_SPI_TransmitReceive+0x82>
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	d002      	beq.n	8007b52 <HAL_SPI_TransmitReceive+0x82>
 8007b4c:	887b      	ldrh	r3, [r7, #2]
 8007b4e:	2b00      	cmp	r3, #0
 8007b50:	d103      	bne.n	8007b5a <HAL_SPI_TransmitReceive+0x8a>
 8007b52:	2301      	movs	r3, #1
 8007b54:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007b58:	e14e      	b.n	8007df8 <HAL_SPI_TransmitReceive+0x328>
 8007b5a:	68fb      	ldr	r3, [r7, #12]
 8007b5c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8007b60:	b2db      	uxtb	r3, r3
 8007b62:	2b04      	cmp	r3, #4
 8007b64:	d003      	beq.n	8007b6e <HAL_SPI_TransmitReceive+0x9e>
 8007b66:	68fb      	ldr	r3, [r7, #12]
 8007b68:	2205      	movs	r2, #5
 8007b6a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8007b6e:	68fb      	ldr	r3, [r7, #12]
 8007b70:	2200      	movs	r2, #0
 8007b72:	655a      	str	r2, [r3, #84]	; 0x54
 8007b74:	68fb      	ldr	r3, [r7, #12]
 8007b76:	687a      	ldr	r2, [r7, #4]
 8007b78:	639a      	str	r2, [r3, #56]	; 0x38
 8007b7a:	68fb      	ldr	r3, [r7, #12]
 8007b7c:	887a      	ldrh	r2, [r7, #2]
 8007b7e:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007b80:	68fb      	ldr	r3, [r7, #12]
 8007b82:	887a      	ldrh	r2, [r7, #2]
 8007b84:	879a      	strh	r2, [r3, #60]	; 0x3c
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	68ba      	ldr	r2, [r7, #8]
 8007b8a:	631a      	str	r2, [r3, #48]	; 0x30
 8007b8c:	68fb      	ldr	r3, [r7, #12]
 8007b8e:	887a      	ldrh	r2, [r7, #2]
 8007b90:	86da      	strh	r2, [r3, #54]	; 0x36
 8007b92:	68fb      	ldr	r3, [r7, #12]
 8007b94:	887a      	ldrh	r2, [r7, #2]
 8007b96:	869a      	strh	r2, [r3, #52]	; 0x34
 8007b98:	68fb      	ldr	r3, [r7, #12]
 8007b9a:	2200      	movs	r2, #0
 8007b9c:	641a      	str	r2, [r3, #64]	; 0x40
 8007b9e:	68fb      	ldr	r3, [r7, #12]
 8007ba0:	2200      	movs	r2, #0
 8007ba2:	645a      	str	r2, [r3, #68]	; 0x44
 8007ba4:	68fb      	ldr	r3, [r7, #12]
 8007ba6:	681b      	ldr	r3, [r3, #0]
 8007ba8:	681b      	ldr	r3, [r3, #0]
 8007baa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007bae:	2b40      	cmp	r3, #64	; 0x40
 8007bb0:	d007      	beq.n	8007bc2 <HAL_SPI_TransmitReceive+0xf2>
 8007bb2:	68fb      	ldr	r3, [r7, #12]
 8007bb4:	681b      	ldr	r3, [r3, #0]
 8007bb6:	681a      	ldr	r2, [r3, #0]
 8007bb8:	68fb      	ldr	r3, [r7, #12]
 8007bba:	681b      	ldr	r3, [r3, #0]
 8007bbc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007bc0:	601a      	str	r2, [r3, #0]
 8007bc2:	68fb      	ldr	r3, [r7, #12]
 8007bc4:	68db      	ldr	r3, [r3, #12]
 8007bc6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007bca:	d178      	bne.n	8007cbe <HAL_SPI_TransmitReceive+0x1ee>
 8007bcc:	68fb      	ldr	r3, [r7, #12]
 8007bce:	685b      	ldr	r3, [r3, #4]
 8007bd0:	2b00      	cmp	r3, #0
 8007bd2:	d002      	beq.n	8007bda <HAL_SPI_TransmitReceive+0x10a>
 8007bd4:	8b7b      	ldrh	r3, [r7, #26]
 8007bd6:	2b01      	cmp	r3, #1
 8007bd8:	d166      	bne.n	8007ca8 <HAL_SPI_TransmitReceive+0x1d8>
 8007bda:	68fb      	ldr	r3, [r7, #12]
 8007bdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007bde:	881a      	ldrh	r2, [r3, #0]
 8007be0:	68fb      	ldr	r3, [r7, #12]
 8007be2:	681b      	ldr	r3, [r3, #0]
 8007be4:	60da      	str	r2, [r3, #12]
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007bea:	1c9a      	adds	r2, r3, #2
 8007bec:	68fb      	ldr	r3, [r7, #12]
 8007bee:	631a      	str	r2, [r3, #48]	; 0x30
 8007bf0:	68fb      	ldr	r3, [r7, #12]
 8007bf2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007bf4:	b29b      	uxth	r3, r3
 8007bf6:	3b01      	subs	r3, #1
 8007bf8:	b29a      	uxth	r2, r3
 8007bfa:	68fb      	ldr	r3, [r7, #12]
 8007bfc:	86da      	strh	r2, [r3, #54]	; 0x36
 8007bfe:	e053      	b.n	8007ca8 <HAL_SPI_TransmitReceive+0x1d8>
 8007c00:	68fb      	ldr	r3, [r7, #12]
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	689b      	ldr	r3, [r3, #8]
 8007c06:	f003 0302 	and.w	r3, r3, #2
 8007c0a:	2b02      	cmp	r3, #2
 8007c0c:	d11b      	bne.n	8007c46 <HAL_SPI_TransmitReceive+0x176>
 8007c0e:	68fb      	ldr	r3, [r7, #12]
 8007c10:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007c12:	b29b      	uxth	r3, r3
 8007c14:	2b00      	cmp	r3, #0
 8007c16:	d016      	beq.n	8007c46 <HAL_SPI_TransmitReceive+0x176>
 8007c18:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007c1a:	2b01      	cmp	r3, #1
 8007c1c:	d113      	bne.n	8007c46 <HAL_SPI_TransmitReceive+0x176>
 8007c1e:	68fb      	ldr	r3, [r7, #12]
 8007c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007c22:	881a      	ldrh	r2, [r3, #0]
 8007c24:	68fb      	ldr	r3, [r7, #12]
 8007c26:	681b      	ldr	r3, [r3, #0]
 8007c28:	60da      	str	r2, [r3, #12]
 8007c2a:	68fb      	ldr	r3, [r7, #12]
 8007c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007c2e:	1c9a      	adds	r2, r3, #2
 8007c30:	68fb      	ldr	r3, [r7, #12]
 8007c32:	631a      	str	r2, [r3, #48]	; 0x30
 8007c34:	68fb      	ldr	r3, [r7, #12]
 8007c36:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007c38:	b29b      	uxth	r3, r3
 8007c3a:	3b01      	subs	r3, #1
 8007c3c:	b29a      	uxth	r2, r3
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	86da      	strh	r2, [r3, #54]	; 0x36
 8007c42:	2300      	movs	r3, #0
 8007c44:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	681b      	ldr	r3, [r3, #0]
 8007c4a:	689b      	ldr	r3, [r3, #8]
 8007c4c:	f003 0301 	and.w	r3, r3, #1
 8007c50:	2b01      	cmp	r3, #1
 8007c52:	d119      	bne.n	8007c88 <HAL_SPI_TransmitReceive+0x1b8>
 8007c54:	68fb      	ldr	r3, [r7, #12]
 8007c56:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007c58:	b29b      	uxth	r3, r3
 8007c5a:	2b00      	cmp	r3, #0
 8007c5c:	d014      	beq.n	8007c88 <HAL_SPI_TransmitReceive+0x1b8>
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	681b      	ldr	r3, [r3, #0]
 8007c62:	68da      	ldr	r2, [r3, #12]
 8007c64:	68fb      	ldr	r3, [r7, #12]
 8007c66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c68:	b292      	uxth	r2, r2
 8007c6a:	801a      	strh	r2, [r3, #0]
 8007c6c:	68fb      	ldr	r3, [r7, #12]
 8007c6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c70:	1c9a      	adds	r2, r3, #2
 8007c72:	68fb      	ldr	r3, [r7, #12]
 8007c74:	639a      	str	r2, [r3, #56]	; 0x38
 8007c76:	68fb      	ldr	r3, [r7, #12]
 8007c78:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007c7a:	b29b      	uxth	r3, r3
 8007c7c:	3b01      	subs	r3, #1
 8007c7e:	b29a      	uxth	r2, r3
 8007c80:	68fb      	ldr	r3, [r7, #12]
 8007c82:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007c84:	2301      	movs	r3, #1
 8007c86:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007c88:	f7fd fa10 	bl	80050ac <HAL_GetTick>
 8007c8c:	4602      	mov	r2, r0
 8007c8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007c90:	1ad3      	subs	r3, r2, r3
 8007c92:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8007c94:	429a      	cmp	r2, r3
 8007c96:	d807      	bhi.n	8007ca8 <HAL_SPI_TransmitReceive+0x1d8>
 8007c98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007c9a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007c9e:	d003      	beq.n	8007ca8 <HAL_SPI_TransmitReceive+0x1d8>
 8007ca0:	2303      	movs	r3, #3
 8007ca2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007ca6:	e0a7      	b.n	8007df8 <HAL_SPI_TransmitReceive+0x328>
 8007ca8:	68fb      	ldr	r3, [r7, #12]
 8007caa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007cac:	b29b      	uxth	r3, r3
 8007cae:	2b00      	cmp	r3, #0
 8007cb0:	d1a6      	bne.n	8007c00 <HAL_SPI_TransmitReceive+0x130>
 8007cb2:	68fb      	ldr	r3, [r7, #12]
 8007cb4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007cb6:	b29b      	uxth	r3, r3
 8007cb8:	2b00      	cmp	r3, #0
 8007cba:	d1a1      	bne.n	8007c00 <HAL_SPI_TransmitReceive+0x130>
 8007cbc:	e07c      	b.n	8007db8 <HAL_SPI_TransmitReceive+0x2e8>
 8007cbe:	68fb      	ldr	r3, [r7, #12]
 8007cc0:	685b      	ldr	r3, [r3, #4]
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	d002      	beq.n	8007ccc <HAL_SPI_TransmitReceive+0x1fc>
 8007cc6:	8b7b      	ldrh	r3, [r7, #26]
 8007cc8:	2b01      	cmp	r3, #1
 8007cca:	d16b      	bne.n	8007da4 <HAL_SPI_TransmitReceive+0x2d4>
 8007ccc:	68fb      	ldr	r3, [r7, #12]
 8007cce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007cd0:	68fb      	ldr	r3, [r7, #12]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	330c      	adds	r3, #12
 8007cd6:	7812      	ldrb	r2, [r2, #0]
 8007cd8:	701a      	strb	r2, [r3, #0]
 8007cda:	68fb      	ldr	r3, [r7, #12]
 8007cdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007cde:	1c5a      	adds	r2, r3, #1
 8007ce0:	68fb      	ldr	r3, [r7, #12]
 8007ce2:	631a      	str	r2, [r3, #48]	; 0x30
 8007ce4:	68fb      	ldr	r3, [r7, #12]
 8007ce6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007ce8:	b29b      	uxth	r3, r3
 8007cea:	3b01      	subs	r3, #1
 8007cec:	b29a      	uxth	r2, r3
 8007cee:	68fb      	ldr	r3, [r7, #12]
 8007cf0:	86da      	strh	r2, [r3, #54]	; 0x36
 8007cf2:	e057      	b.n	8007da4 <HAL_SPI_TransmitReceive+0x2d4>
 8007cf4:	68fb      	ldr	r3, [r7, #12]
 8007cf6:	681b      	ldr	r3, [r3, #0]
 8007cf8:	689b      	ldr	r3, [r3, #8]
 8007cfa:	f003 0302 	and.w	r3, r3, #2
 8007cfe:	2b02      	cmp	r3, #2
 8007d00:	d11c      	bne.n	8007d3c <HAL_SPI_TransmitReceive+0x26c>
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007d06:	b29b      	uxth	r3, r3
 8007d08:	2b00      	cmp	r3, #0
 8007d0a:	d017      	beq.n	8007d3c <HAL_SPI_TransmitReceive+0x26c>
 8007d0c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007d0e:	2b01      	cmp	r3, #1
 8007d10:	d114      	bne.n	8007d3c <HAL_SPI_TransmitReceive+0x26c>
 8007d12:	68fb      	ldr	r3, [r7, #12]
 8007d14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007d16:	68fb      	ldr	r3, [r7, #12]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	330c      	adds	r3, #12
 8007d1c:	7812      	ldrb	r2, [r2, #0]
 8007d1e:	701a      	strb	r2, [r3, #0]
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007d24:	1c5a      	adds	r2, r3, #1
 8007d26:	68fb      	ldr	r3, [r7, #12]
 8007d28:	631a      	str	r2, [r3, #48]	; 0x30
 8007d2a:	68fb      	ldr	r3, [r7, #12]
 8007d2c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007d2e:	b29b      	uxth	r3, r3
 8007d30:	3b01      	subs	r3, #1
 8007d32:	b29a      	uxth	r2, r3
 8007d34:	68fb      	ldr	r3, [r7, #12]
 8007d36:	86da      	strh	r2, [r3, #54]	; 0x36
 8007d38:	2300      	movs	r3, #0
 8007d3a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007d3c:	68fb      	ldr	r3, [r7, #12]
 8007d3e:	681b      	ldr	r3, [r3, #0]
 8007d40:	689b      	ldr	r3, [r3, #8]
 8007d42:	f003 0301 	and.w	r3, r3, #1
 8007d46:	2b01      	cmp	r3, #1
 8007d48:	d119      	bne.n	8007d7e <HAL_SPI_TransmitReceive+0x2ae>
 8007d4a:	68fb      	ldr	r3, [r7, #12]
 8007d4c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007d4e:	b29b      	uxth	r3, r3
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d014      	beq.n	8007d7e <HAL_SPI_TransmitReceive+0x2ae>
 8007d54:	68fb      	ldr	r3, [r7, #12]
 8007d56:	681b      	ldr	r3, [r3, #0]
 8007d58:	68da      	ldr	r2, [r3, #12]
 8007d5a:	68fb      	ldr	r3, [r7, #12]
 8007d5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d5e:	b2d2      	uxtb	r2, r2
 8007d60:	701a      	strb	r2, [r3, #0]
 8007d62:	68fb      	ldr	r3, [r7, #12]
 8007d64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d66:	1c5a      	adds	r2, r3, #1
 8007d68:	68fb      	ldr	r3, [r7, #12]
 8007d6a:	639a      	str	r2, [r3, #56]	; 0x38
 8007d6c:	68fb      	ldr	r3, [r7, #12]
 8007d6e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007d70:	b29b      	uxth	r3, r3
 8007d72:	3b01      	subs	r3, #1
 8007d74:	b29a      	uxth	r2, r3
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	87da      	strh	r2, [r3, #62]	; 0x3e
 8007d7a:	2301      	movs	r3, #1
 8007d7c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007d7e:	f7fd f995 	bl	80050ac <HAL_GetTick>
 8007d82:	4602      	mov	r2, r0
 8007d84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d86:	1ad3      	subs	r3, r2, r3
 8007d88:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8007d8a:	429a      	cmp	r2, r3
 8007d8c:	d803      	bhi.n	8007d96 <HAL_SPI_TransmitReceive+0x2c6>
 8007d8e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007d90:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007d94:	d102      	bne.n	8007d9c <HAL_SPI_TransmitReceive+0x2cc>
 8007d96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007d98:	2b00      	cmp	r3, #0
 8007d9a:	d103      	bne.n	8007da4 <HAL_SPI_TransmitReceive+0x2d4>
 8007d9c:	2303      	movs	r3, #3
 8007d9e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007da2:	e029      	b.n	8007df8 <HAL_SPI_TransmitReceive+0x328>
 8007da4:	68fb      	ldr	r3, [r7, #12]
 8007da6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8007da8:	b29b      	uxth	r3, r3
 8007daa:	2b00      	cmp	r3, #0
 8007dac:	d1a2      	bne.n	8007cf4 <HAL_SPI_TransmitReceive+0x224>
 8007dae:	68fb      	ldr	r3, [r7, #12]
 8007db0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8007db2:	b29b      	uxth	r3, r3
 8007db4:	2b00      	cmp	r3, #0
 8007db6:	d19d      	bne.n	8007cf4 <HAL_SPI_TransmitReceive+0x224>
 8007db8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007dba:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8007dbc:	68f8      	ldr	r0, [r7, #12]
 8007dbe:	f000 f917 	bl	8007ff0 <SPI_EndRxTxTransaction>
 8007dc2:	4603      	mov	r3, r0
 8007dc4:	2b00      	cmp	r3, #0
 8007dc6:	d006      	beq.n	8007dd6 <HAL_SPI_TransmitReceive+0x306>
 8007dc8:	2301      	movs	r3, #1
 8007dca:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	2220      	movs	r2, #32
 8007dd2:	655a      	str	r2, [r3, #84]	; 0x54
 8007dd4:	e010      	b.n	8007df8 <HAL_SPI_TransmitReceive+0x328>
 8007dd6:	68fb      	ldr	r3, [r7, #12]
 8007dd8:	689b      	ldr	r3, [r3, #8]
 8007dda:	2b00      	cmp	r3, #0
 8007ddc:	d10b      	bne.n	8007df6 <HAL_SPI_TransmitReceive+0x326>
 8007dde:	2300      	movs	r3, #0
 8007de0:	617b      	str	r3, [r7, #20]
 8007de2:	68fb      	ldr	r3, [r7, #12]
 8007de4:	681b      	ldr	r3, [r3, #0]
 8007de6:	68db      	ldr	r3, [r3, #12]
 8007de8:	617b      	str	r3, [r7, #20]
 8007dea:	68fb      	ldr	r3, [r7, #12]
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	689b      	ldr	r3, [r3, #8]
 8007df0:	617b      	str	r3, [r7, #20]
 8007df2:	697b      	ldr	r3, [r7, #20]
 8007df4:	e000      	b.n	8007df8 <HAL_SPI_TransmitReceive+0x328>
 8007df6:	bf00      	nop
 8007df8:	68fb      	ldr	r3, [r7, #12]
 8007dfa:	2201      	movs	r2, #1
 8007dfc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8007e00:	68fb      	ldr	r3, [r7, #12]
 8007e02:	2200      	movs	r2, #0
 8007e04:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007e08:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8007e0c:	4618      	mov	r0, r3
 8007e0e:	3730      	adds	r7, #48	; 0x30
 8007e10:	46bd      	mov	sp, r7
 8007e12:	bd80      	pop	{r7, pc}

08007e14 <SPI_WaitFlagStateUntilTimeout>:
 8007e14:	b580      	push	{r7, lr}
 8007e16:	b088      	sub	sp, #32
 8007e18:	af00      	add	r7, sp, #0
 8007e1a:	60f8      	str	r0, [r7, #12]
 8007e1c:	60b9      	str	r1, [r7, #8]
 8007e1e:	603b      	str	r3, [r7, #0]
 8007e20:	4613      	mov	r3, r2
 8007e22:	71fb      	strb	r3, [r7, #7]
 8007e24:	f7fd f942 	bl	80050ac <HAL_GetTick>
 8007e28:	4602      	mov	r2, r0
 8007e2a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007e2c:	1a9b      	subs	r3, r3, r2
 8007e2e:	683a      	ldr	r2, [r7, #0]
 8007e30:	4413      	add	r3, r2
 8007e32:	61fb      	str	r3, [r7, #28]
 8007e34:	f7fd f93a 	bl	80050ac <HAL_GetTick>
 8007e38:	61b8      	str	r0, [r7, #24]
 8007e3a:	4b39      	ldr	r3, [pc, #228]	; (8007f20 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007e3c:	681b      	ldr	r3, [r3, #0]
 8007e3e:	015b      	lsls	r3, r3, #5
 8007e40:	0d1b      	lsrs	r3, r3, #20
 8007e42:	69fa      	ldr	r2, [r7, #28]
 8007e44:	fb02 f303 	mul.w	r3, r2, r3
 8007e48:	617b      	str	r3, [r7, #20]
 8007e4a:	e054      	b.n	8007ef6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8007e4c:	683b      	ldr	r3, [r7, #0]
 8007e4e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007e52:	d050      	beq.n	8007ef6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8007e54:	f7fd f92a 	bl	80050ac <HAL_GetTick>
 8007e58:	4602      	mov	r2, r0
 8007e5a:	69bb      	ldr	r3, [r7, #24]
 8007e5c:	1ad3      	subs	r3, r2, r3
 8007e5e:	69fa      	ldr	r2, [r7, #28]
 8007e60:	429a      	cmp	r2, r3
 8007e62:	d902      	bls.n	8007e6a <SPI_WaitFlagStateUntilTimeout+0x56>
 8007e64:	69fb      	ldr	r3, [r7, #28]
 8007e66:	2b00      	cmp	r3, #0
 8007e68:	d13d      	bne.n	8007ee6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8007e6a:	68fb      	ldr	r3, [r7, #12]
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	685a      	ldr	r2, [r3, #4]
 8007e70:	68fb      	ldr	r3, [r7, #12]
 8007e72:	681b      	ldr	r3, [r3, #0]
 8007e74:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007e78:	605a      	str	r2, [r3, #4]
 8007e7a:	68fb      	ldr	r3, [r7, #12]
 8007e7c:	685b      	ldr	r3, [r3, #4]
 8007e7e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007e82:	d111      	bne.n	8007ea8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007e84:	68fb      	ldr	r3, [r7, #12]
 8007e86:	689b      	ldr	r3, [r3, #8]
 8007e88:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007e8c:	d004      	beq.n	8007e98 <SPI_WaitFlagStateUntilTimeout+0x84>
 8007e8e:	68fb      	ldr	r3, [r7, #12]
 8007e90:	689b      	ldr	r3, [r3, #8]
 8007e92:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e96:	d107      	bne.n	8007ea8 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007e98:	68fb      	ldr	r3, [r7, #12]
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	681a      	ldr	r2, [r3, #0]
 8007e9e:	68fb      	ldr	r3, [r7, #12]
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007ea6:	601a      	str	r2, [r3, #0]
 8007ea8:	68fb      	ldr	r3, [r7, #12]
 8007eaa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007eac:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007eb0:	d10f      	bne.n	8007ed2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8007eb2:	68fb      	ldr	r3, [r7, #12]
 8007eb4:	681b      	ldr	r3, [r3, #0]
 8007eb6:	681a      	ldr	r2, [r3, #0]
 8007eb8:	68fb      	ldr	r3, [r7, #12]
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007ec0:	601a      	str	r2, [r3, #0]
 8007ec2:	68fb      	ldr	r3, [r7, #12]
 8007ec4:	681b      	ldr	r3, [r3, #0]
 8007ec6:	681a      	ldr	r2, [r3, #0]
 8007ec8:	68fb      	ldr	r3, [r7, #12]
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007ed0:	601a      	str	r2, [r3, #0]
 8007ed2:	68fb      	ldr	r3, [r7, #12]
 8007ed4:	2201      	movs	r2, #1
 8007ed6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8007eda:	68fb      	ldr	r3, [r7, #12]
 8007edc:	2200      	movs	r2, #0
 8007ede:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8007ee2:	2303      	movs	r3, #3
 8007ee4:	e017      	b.n	8007f16 <SPI_WaitFlagStateUntilTimeout+0x102>
 8007ee6:	697b      	ldr	r3, [r7, #20]
 8007ee8:	2b00      	cmp	r3, #0
 8007eea:	d101      	bne.n	8007ef0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8007eec:	2300      	movs	r3, #0
 8007eee:	61fb      	str	r3, [r7, #28]
 8007ef0:	697b      	ldr	r3, [r7, #20]
 8007ef2:	3b01      	subs	r3, #1
 8007ef4:	617b      	str	r3, [r7, #20]
 8007ef6:	68fb      	ldr	r3, [r7, #12]
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	689a      	ldr	r2, [r3, #8]
 8007efc:	68bb      	ldr	r3, [r7, #8]
 8007efe:	4013      	ands	r3, r2
 8007f00:	68ba      	ldr	r2, [r7, #8]
 8007f02:	429a      	cmp	r2, r3
 8007f04:	bf0c      	ite	eq
 8007f06:	2301      	moveq	r3, #1
 8007f08:	2300      	movne	r3, #0
 8007f0a:	b2db      	uxtb	r3, r3
 8007f0c:	461a      	mov	r2, r3
 8007f0e:	79fb      	ldrb	r3, [r7, #7]
 8007f10:	429a      	cmp	r2, r3
 8007f12:	d19b      	bne.n	8007e4c <SPI_WaitFlagStateUntilTimeout+0x38>
 8007f14:	2300      	movs	r3, #0
 8007f16:	4618      	mov	r0, r3
 8007f18:	3720      	adds	r7, #32
 8007f1a:	46bd      	mov	sp, r7
 8007f1c:	bd80      	pop	{r7, pc}
 8007f1e:	bf00      	nop
 8007f20:	200023f0 	.word	0x200023f0

08007f24 <SPI_EndRxTransaction>:
 8007f24:	b580      	push	{r7, lr}
 8007f26:	b086      	sub	sp, #24
 8007f28:	af02      	add	r7, sp, #8
 8007f2a:	60f8      	str	r0, [r7, #12]
 8007f2c:	60b9      	str	r1, [r7, #8]
 8007f2e:	607a      	str	r2, [r7, #4]
 8007f30:	68fb      	ldr	r3, [r7, #12]
 8007f32:	685b      	ldr	r3, [r3, #4]
 8007f34:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007f38:	d111      	bne.n	8007f5e <SPI_EndRxTransaction+0x3a>
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	689b      	ldr	r3, [r3, #8]
 8007f3e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007f42:	d004      	beq.n	8007f4e <SPI_EndRxTransaction+0x2a>
 8007f44:	68fb      	ldr	r3, [r7, #12]
 8007f46:	689b      	ldr	r3, [r3, #8]
 8007f48:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007f4c:	d107      	bne.n	8007f5e <SPI_EndRxTransaction+0x3a>
 8007f4e:	68fb      	ldr	r3, [r7, #12]
 8007f50:	681b      	ldr	r3, [r3, #0]
 8007f52:	681a      	ldr	r2, [r3, #0]
 8007f54:	68fb      	ldr	r3, [r7, #12]
 8007f56:	681b      	ldr	r3, [r3, #0]
 8007f58:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007f5c:	601a      	str	r2, [r3, #0]
 8007f5e:	68fb      	ldr	r3, [r7, #12]
 8007f60:	685b      	ldr	r3, [r3, #4]
 8007f62:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8007f66:	d12a      	bne.n	8007fbe <SPI_EndRxTransaction+0x9a>
 8007f68:	68fb      	ldr	r3, [r7, #12]
 8007f6a:	689b      	ldr	r3, [r3, #8]
 8007f6c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007f70:	d012      	beq.n	8007f98 <SPI_EndRxTransaction+0x74>
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	9300      	str	r3, [sp, #0]
 8007f76:	68bb      	ldr	r3, [r7, #8]
 8007f78:	2200      	movs	r2, #0
 8007f7a:	2180      	movs	r1, #128	; 0x80
 8007f7c:	68f8      	ldr	r0, [r7, #12]
 8007f7e:	f7ff ff49 	bl	8007e14 <SPI_WaitFlagStateUntilTimeout>
 8007f82:	4603      	mov	r3, r0
 8007f84:	2b00      	cmp	r3, #0
 8007f86:	d02d      	beq.n	8007fe4 <SPI_EndRxTransaction+0xc0>
 8007f88:	68fb      	ldr	r3, [r7, #12]
 8007f8a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007f8c:	f043 0220 	orr.w	r2, r3, #32
 8007f90:	68fb      	ldr	r3, [r7, #12]
 8007f92:	655a      	str	r2, [r3, #84]	; 0x54
 8007f94:	2303      	movs	r3, #3
 8007f96:	e026      	b.n	8007fe6 <SPI_EndRxTransaction+0xc2>
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	9300      	str	r3, [sp, #0]
 8007f9c:	68bb      	ldr	r3, [r7, #8]
 8007f9e:	2200      	movs	r2, #0
 8007fa0:	2101      	movs	r1, #1
 8007fa2:	68f8      	ldr	r0, [r7, #12]
 8007fa4:	f7ff ff36 	bl	8007e14 <SPI_WaitFlagStateUntilTimeout>
 8007fa8:	4603      	mov	r3, r0
 8007faa:	2b00      	cmp	r3, #0
 8007fac:	d01a      	beq.n	8007fe4 <SPI_EndRxTransaction+0xc0>
 8007fae:	68fb      	ldr	r3, [r7, #12]
 8007fb0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007fb2:	f043 0220 	orr.w	r2, r3, #32
 8007fb6:	68fb      	ldr	r3, [r7, #12]
 8007fb8:	655a      	str	r2, [r3, #84]	; 0x54
 8007fba:	2303      	movs	r3, #3
 8007fbc:	e013      	b.n	8007fe6 <SPI_EndRxTransaction+0xc2>
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	9300      	str	r3, [sp, #0]
 8007fc2:	68bb      	ldr	r3, [r7, #8]
 8007fc4:	2200      	movs	r2, #0
 8007fc6:	2101      	movs	r1, #1
 8007fc8:	68f8      	ldr	r0, [r7, #12]
 8007fca:	f7ff ff23 	bl	8007e14 <SPI_WaitFlagStateUntilTimeout>
 8007fce:	4603      	mov	r3, r0
 8007fd0:	2b00      	cmp	r3, #0
 8007fd2:	d007      	beq.n	8007fe4 <SPI_EndRxTransaction+0xc0>
 8007fd4:	68fb      	ldr	r3, [r7, #12]
 8007fd6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007fd8:	f043 0220 	orr.w	r2, r3, #32
 8007fdc:	68fb      	ldr	r3, [r7, #12]
 8007fde:	655a      	str	r2, [r3, #84]	; 0x54
 8007fe0:	2303      	movs	r3, #3
 8007fe2:	e000      	b.n	8007fe6 <SPI_EndRxTransaction+0xc2>
 8007fe4:	2300      	movs	r3, #0
 8007fe6:	4618      	mov	r0, r3
 8007fe8:	3710      	adds	r7, #16
 8007fea:	46bd      	mov	sp, r7
 8007fec:	bd80      	pop	{r7, pc}
	...

08007ff0 <SPI_EndRxTxTransaction>:
 8007ff0:	b580      	push	{r7, lr}
 8007ff2:	b088      	sub	sp, #32
 8007ff4:	af02      	add	r7, sp, #8
 8007ff6:	60f8      	str	r0, [r7, #12]
 8007ff8:	60b9      	str	r1, [r7, #8]
 8007ffa:	607a      	str	r2, [r7, #4]
 8007ffc:	4b1b      	ldr	r3, [pc, #108]	; (800806c <SPI_EndRxTxTransaction+0x7c>)
 8007ffe:	681b      	ldr	r3, [r3, #0]
 8008000:	4a1b      	ldr	r2, [pc, #108]	; (8008070 <SPI_EndRxTxTransaction+0x80>)
 8008002:	fba2 2303 	umull	r2, r3, r2, r3
 8008006:	0d5b      	lsrs	r3, r3, #21
 8008008:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800800c:	fb02 f303 	mul.w	r3, r2, r3
 8008010:	617b      	str	r3, [r7, #20]
 8008012:	68fb      	ldr	r3, [r7, #12]
 8008014:	685b      	ldr	r3, [r3, #4]
 8008016:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800801a:	d112      	bne.n	8008042 <SPI_EndRxTxTransaction+0x52>
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	9300      	str	r3, [sp, #0]
 8008020:	68bb      	ldr	r3, [r7, #8]
 8008022:	2200      	movs	r2, #0
 8008024:	2180      	movs	r1, #128	; 0x80
 8008026:	68f8      	ldr	r0, [r7, #12]
 8008028:	f7ff fef4 	bl	8007e14 <SPI_WaitFlagStateUntilTimeout>
 800802c:	4603      	mov	r3, r0
 800802e:	2b00      	cmp	r3, #0
 8008030:	d016      	beq.n	8008060 <SPI_EndRxTxTransaction+0x70>
 8008032:	68fb      	ldr	r3, [r7, #12]
 8008034:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008036:	f043 0220 	orr.w	r2, r3, #32
 800803a:	68fb      	ldr	r3, [r7, #12]
 800803c:	655a      	str	r2, [r3, #84]	; 0x54
 800803e:	2303      	movs	r3, #3
 8008040:	e00f      	b.n	8008062 <SPI_EndRxTxTransaction+0x72>
 8008042:	697b      	ldr	r3, [r7, #20]
 8008044:	2b00      	cmp	r3, #0
 8008046:	d00a      	beq.n	800805e <SPI_EndRxTxTransaction+0x6e>
 8008048:	697b      	ldr	r3, [r7, #20]
 800804a:	3b01      	subs	r3, #1
 800804c:	617b      	str	r3, [r7, #20]
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	681b      	ldr	r3, [r3, #0]
 8008052:	689b      	ldr	r3, [r3, #8]
 8008054:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008058:	2b80      	cmp	r3, #128	; 0x80
 800805a:	d0f2      	beq.n	8008042 <SPI_EndRxTxTransaction+0x52>
 800805c:	e000      	b.n	8008060 <SPI_EndRxTxTransaction+0x70>
 800805e:	bf00      	nop
 8008060:	2300      	movs	r3, #0
 8008062:	4618      	mov	r0, r3
 8008064:	3718      	adds	r7, #24
 8008066:	46bd      	mov	sp, r7
 8008068:	bd80      	pop	{r7, pc}
 800806a:	bf00      	nop
 800806c:	200023f0 	.word	0x200023f0
 8008070:	165e9f81 	.word	0x165e9f81

08008074 <HAL_TIM_Base_Init>:
 8008074:	b580      	push	{r7, lr}
 8008076:	b082      	sub	sp, #8
 8008078:	af00      	add	r7, sp, #0
 800807a:	6078      	str	r0, [r7, #4]
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	2b00      	cmp	r3, #0
 8008080:	d101      	bne.n	8008086 <HAL_TIM_Base_Init+0x12>
 8008082:	2301      	movs	r3, #1
 8008084:	e041      	b.n	800810a <HAL_TIM_Base_Init+0x96>
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800808c:	b2db      	uxtb	r3, r3
 800808e:	2b00      	cmp	r3, #0
 8008090:	d106      	bne.n	80080a0 <HAL_TIM_Base_Init+0x2c>
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	2200      	movs	r2, #0
 8008096:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800809a:	6878      	ldr	r0, [r7, #4]
 800809c:	f7fc fd5a 	bl	8004b54 <HAL_TIM_Base_MspInit>
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	2202      	movs	r2, #2
 80080a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	681a      	ldr	r2, [r3, #0]
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	3304      	adds	r3, #4
 80080b0:	4619      	mov	r1, r3
 80080b2:	4610      	mov	r0, r2
 80080b4:	f000 fb42 	bl	800873c <TIM_Base_SetConfig>
 80080b8:	687b      	ldr	r3, [r7, #4]
 80080ba:	2201      	movs	r2, #1
 80080bc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	2201      	movs	r2, #1
 80080c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	2201      	movs	r2, #1
 80080cc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	2201      	movs	r2, #1
 80080d4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	2201      	movs	r2, #1
 80080dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80080e0:	687b      	ldr	r3, [r7, #4]
 80080e2:	2201      	movs	r2, #1
 80080e4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	2201      	movs	r2, #1
 80080ec:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	2201      	movs	r2, #1
 80080f4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	2201      	movs	r2, #1
 80080fc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	2201      	movs	r2, #1
 8008104:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008108:	2300      	movs	r3, #0
 800810a:	4618      	mov	r0, r3
 800810c:	3708      	adds	r7, #8
 800810e:	46bd      	mov	sp, r7
 8008110:	bd80      	pop	{r7, pc}
	...

08008114 <HAL_TIM_Base_Start>:
 8008114:	b480      	push	{r7}
 8008116:	b085      	sub	sp, #20
 8008118:	af00      	add	r7, sp, #0
 800811a:	6078      	str	r0, [r7, #4]
 800811c:	687b      	ldr	r3, [r7, #4]
 800811e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008122:	b2db      	uxtb	r3, r3
 8008124:	2b01      	cmp	r3, #1
 8008126:	d001      	beq.n	800812c <HAL_TIM_Base_Start+0x18>
 8008128:	2301      	movs	r3, #1
 800812a:	e046      	b.n	80081ba <HAL_TIM_Base_Start+0xa6>
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	2202      	movs	r2, #2
 8008130:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	681b      	ldr	r3, [r3, #0]
 8008138:	4a23      	ldr	r2, [pc, #140]	; (80081c8 <HAL_TIM_Base_Start+0xb4>)
 800813a:	4293      	cmp	r3, r2
 800813c:	d022      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	681b      	ldr	r3, [r3, #0]
 8008142:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008146:	d01d      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 8008148:	687b      	ldr	r3, [r7, #4]
 800814a:	681b      	ldr	r3, [r3, #0]
 800814c:	4a1f      	ldr	r2, [pc, #124]	; (80081cc <HAL_TIM_Base_Start+0xb8>)
 800814e:	4293      	cmp	r3, r2
 8008150:	d018      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	681b      	ldr	r3, [r3, #0]
 8008156:	4a1e      	ldr	r2, [pc, #120]	; (80081d0 <HAL_TIM_Base_Start+0xbc>)
 8008158:	4293      	cmp	r3, r2
 800815a:	d013      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 800815c:	687b      	ldr	r3, [r7, #4]
 800815e:	681b      	ldr	r3, [r3, #0]
 8008160:	4a1c      	ldr	r2, [pc, #112]	; (80081d4 <HAL_TIM_Base_Start+0xc0>)
 8008162:	4293      	cmp	r3, r2
 8008164:	d00e      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 8008166:	687b      	ldr	r3, [r7, #4]
 8008168:	681b      	ldr	r3, [r3, #0]
 800816a:	4a1b      	ldr	r2, [pc, #108]	; (80081d8 <HAL_TIM_Base_Start+0xc4>)
 800816c:	4293      	cmp	r3, r2
 800816e:	d009      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	4a19      	ldr	r2, [pc, #100]	; (80081dc <HAL_TIM_Base_Start+0xc8>)
 8008176:	4293      	cmp	r3, r2
 8008178:	d004      	beq.n	8008184 <HAL_TIM_Base_Start+0x70>
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	4a18      	ldr	r2, [pc, #96]	; (80081e0 <HAL_TIM_Base_Start+0xcc>)
 8008180:	4293      	cmp	r3, r2
 8008182:	d111      	bne.n	80081a8 <HAL_TIM_Base_Start+0x94>
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	681b      	ldr	r3, [r3, #0]
 8008188:	689b      	ldr	r3, [r3, #8]
 800818a:	f003 0307 	and.w	r3, r3, #7
 800818e:	60fb      	str	r3, [r7, #12]
 8008190:	68fb      	ldr	r3, [r7, #12]
 8008192:	2b06      	cmp	r3, #6
 8008194:	d010      	beq.n	80081b8 <HAL_TIM_Base_Start+0xa4>
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	681b      	ldr	r3, [r3, #0]
 800819a:	681a      	ldr	r2, [r3, #0]
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	681b      	ldr	r3, [r3, #0]
 80081a0:	f042 0201 	orr.w	r2, r2, #1
 80081a4:	601a      	str	r2, [r3, #0]
 80081a6:	e007      	b.n	80081b8 <HAL_TIM_Base_Start+0xa4>
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	681a      	ldr	r2, [r3, #0]
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	681b      	ldr	r3, [r3, #0]
 80081b2:	f042 0201 	orr.w	r2, r2, #1
 80081b6:	601a      	str	r2, [r3, #0]
 80081b8:	2300      	movs	r3, #0
 80081ba:	4618      	mov	r0, r3
 80081bc:	3714      	adds	r7, #20
 80081be:	46bd      	mov	sp, r7
 80081c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081c4:	4770      	bx	lr
 80081c6:	bf00      	nop
 80081c8:	40010000 	.word	0x40010000
 80081cc:	40000400 	.word	0x40000400
 80081d0:	40000800 	.word	0x40000800
 80081d4:	40000c00 	.word	0x40000c00
 80081d8:	40010400 	.word	0x40010400
 80081dc:	40014000 	.word	0x40014000
 80081e0:	40001800 	.word	0x40001800

080081e4 <HAL_TIM_PWM_Init>:
 80081e4:	b580      	push	{r7, lr}
 80081e6:	b082      	sub	sp, #8
 80081e8:	af00      	add	r7, sp, #0
 80081ea:	6078      	str	r0, [r7, #4]
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	d101      	bne.n	80081f6 <HAL_TIM_PWM_Init+0x12>
 80081f2:	2301      	movs	r3, #1
 80081f4:	e041      	b.n	800827a <HAL_TIM_PWM_Init+0x96>
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80081fc:	b2db      	uxtb	r3, r3
 80081fe:	2b00      	cmp	r3, #0
 8008200:	d106      	bne.n	8008210 <HAL_TIM_PWM_Init+0x2c>
 8008202:	687b      	ldr	r3, [r7, #4]
 8008204:	2200      	movs	r2, #0
 8008206:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800820a:	6878      	ldr	r0, [r7, #4]
 800820c:	f000 f839 	bl	8008282 <HAL_TIM_PWM_MspInit>
 8008210:	687b      	ldr	r3, [r7, #4]
 8008212:	2202      	movs	r2, #2
 8008214:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	681a      	ldr	r2, [r3, #0]
 800821c:	687b      	ldr	r3, [r7, #4]
 800821e:	3304      	adds	r3, #4
 8008220:	4619      	mov	r1, r3
 8008222:	4610      	mov	r0, r2
 8008224:	f000 fa8a 	bl	800873c <TIM_Base_SetConfig>
 8008228:	687b      	ldr	r3, [r7, #4]
 800822a:	2201      	movs	r2, #1
 800822c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	2201      	movs	r2, #1
 8008234:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008238:	687b      	ldr	r3, [r7, #4]
 800823a:	2201      	movs	r2, #1
 800823c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	2201      	movs	r2, #1
 8008244:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	2201      	movs	r2, #1
 800824c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008250:	687b      	ldr	r3, [r7, #4]
 8008252:	2201      	movs	r2, #1
 8008254:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008258:	687b      	ldr	r3, [r7, #4]
 800825a:	2201      	movs	r2, #1
 800825c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8008260:	687b      	ldr	r3, [r7, #4]
 8008262:	2201      	movs	r2, #1
 8008264:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8008268:	687b      	ldr	r3, [r7, #4]
 800826a:	2201      	movs	r2, #1
 800826c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	2201      	movs	r2, #1
 8008274:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008278:	2300      	movs	r3, #0
 800827a:	4618      	mov	r0, r3
 800827c:	3708      	adds	r7, #8
 800827e:	46bd      	mov	sp, r7
 8008280:	bd80      	pop	{r7, pc}

08008282 <HAL_TIM_PWM_MspInit>:
 8008282:	b480      	push	{r7}
 8008284:	b083      	sub	sp, #12
 8008286:	af00      	add	r7, sp, #0
 8008288:	6078      	str	r0, [r7, #4]
 800828a:	bf00      	nop
 800828c:	370c      	adds	r7, #12
 800828e:	46bd      	mov	sp, r7
 8008290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008294:	4770      	bx	lr
	...

08008298 <HAL_TIM_PWM_Start>:
 8008298:	b580      	push	{r7, lr}
 800829a:	b084      	sub	sp, #16
 800829c:	af00      	add	r7, sp, #0
 800829e:	6078      	str	r0, [r7, #4]
 80082a0:	6039      	str	r1, [r7, #0]
 80082a2:	683b      	ldr	r3, [r7, #0]
 80082a4:	2b00      	cmp	r3, #0
 80082a6:	d109      	bne.n	80082bc <HAL_TIM_PWM_Start+0x24>
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80082ae:	b2db      	uxtb	r3, r3
 80082b0:	2b01      	cmp	r3, #1
 80082b2:	bf14      	ite	ne
 80082b4:	2301      	movne	r3, #1
 80082b6:	2300      	moveq	r3, #0
 80082b8:	b2db      	uxtb	r3, r3
 80082ba:	e022      	b.n	8008302 <HAL_TIM_PWM_Start+0x6a>
 80082bc:	683b      	ldr	r3, [r7, #0]
 80082be:	2b04      	cmp	r3, #4
 80082c0:	d109      	bne.n	80082d6 <HAL_TIM_PWM_Start+0x3e>
 80082c2:	687b      	ldr	r3, [r7, #4]
 80082c4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80082c8:	b2db      	uxtb	r3, r3
 80082ca:	2b01      	cmp	r3, #1
 80082cc:	bf14      	ite	ne
 80082ce:	2301      	movne	r3, #1
 80082d0:	2300      	moveq	r3, #0
 80082d2:	b2db      	uxtb	r3, r3
 80082d4:	e015      	b.n	8008302 <HAL_TIM_PWM_Start+0x6a>
 80082d6:	683b      	ldr	r3, [r7, #0]
 80082d8:	2b08      	cmp	r3, #8
 80082da:	d109      	bne.n	80082f0 <HAL_TIM_PWM_Start+0x58>
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80082e2:	b2db      	uxtb	r3, r3
 80082e4:	2b01      	cmp	r3, #1
 80082e6:	bf14      	ite	ne
 80082e8:	2301      	movne	r3, #1
 80082ea:	2300      	moveq	r3, #0
 80082ec:	b2db      	uxtb	r3, r3
 80082ee:	e008      	b.n	8008302 <HAL_TIM_PWM_Start+0x6a>
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80082f6:	b2db      	uxtb	r3, r3
 80082f8:	2b01      	cmp	r3, #1
 80082fa:	bf14      	ite	ne
 80082fc:	2301      	movne	r3, #1
 80082fe:	2300      	moveq	r3, #0
 8008300:	b2db      	uxtb	r3, r3
 8008302:	2b00      	cmp	r3, #0
 8008304:	d001      	beq.n	800830a <HAL_TIM_PWM_Start+0x72>
 8008306:	2301      	movs	r3, #1
 8008308:	e07c      	b.n	8008404 <HAL_TIM_PWM_Start+0x16c>
 800830a:	683b      	ldr	r3, [r7, #0]
 800830c:	2b00      	cmp	r3, #0
 800830e:	d104      	bne.n	800831a <HAL_TIM_PWM_Start+0x82>
 8008310:	687b      	ldr	r3, [r7, #4]
 8008312:	2202      	movs	r2, #2
 8008314:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008318:	e013      	b.n	8008342 <HAL_TIM_PWM_Start+0xaa>
 800831a:	683b      	ldr	r3, [r7, #0]
 800831c:	2b04      	cmp	r3, #4
 800831e:	d104      	bne.n	800832a <HAL_TIM_PWM_Start+0x92>
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	2202      	movs	r2, #2
 8008324:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008328:	e00b      	b.n	8008342 <HAL_TIM_PWM_Start+0xaa>
 800832a:	683b      	ldr	r3, [r7, #0]
 800832c:	2b08      	cmp	r3, #8
 800832e:	d104      	bne.n	800833a <HAL_TIM_PWM_Start+0xa2>
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	2202      	movs	r2, #2
 8008334:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008338:	e003      	b.n	8008342 <HAL_TIM_PWM_Start+0xaa>
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	2202      	movs	r2, #2
 800833e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	681b      	ldr	r3, [r3, #0]
 8008346:	2201      	movs	r2, #1
 8008348:	6839      	ldr	r1, [r7, #0]
 800834a:	4618      	mov	r0, r3
 800834c:	f000 fce0 	bl	8008d10 <TIM_CCxChannelCmd>
 8008350:	687b      	ldr	r3, [r7, #4]
 8008352:	681b      	ldr	r3, [r3, #0]
 8008354:	4a2d      	ldr	r2, [pc, #180]	; (800840c <HAL_TIM_PWM_Start+0x174>)
 8008356:	4293      	cmp	r3, r2
 8008358:	d004      	beq.n	8008364 <HAL_TIM_PWM_Start+0xcc>
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	681b      	ldr	r3, [r3, #0]
 800835e:	4a2c      	ldr	r2, [pc, #176]	; (8008410 <HAL_TIM_PWM_Start+0x178>)
 8008360:	4293      	cmp	r3, r2
 8008362:	d101      	bne.n	8008368 <HAL_TIM_PWM_Start+0xd0>
 8008364:	2301      	movs	r3, #1
 8008366:	e000      	b.n	800836a <HAL_TIM_PWM_Start+0xd2>
 8008368:	2300      	movs	r3, #0
 800836a:	2b00      	cmp	r3, #0
 800836c:	d007      	beq.n	800837e <HAL_TIM_PWM_Start+0xe6>
 800836e:	687b      	ldr	r3, [r7, #4]
 8008370:	681b      	ldr	r3, [r3, #0]
 8008372:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	681b      	ldr	r3, [r3, #0]
 8008378:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800837c:	645a      	str	r2, [r3, #68]	; 0x44
 800837e:	687b      	ldr	r3, [r7, #4]
 8008380:	681b      	ldr	r3, [r3, #0]
 8008382:	4a22      	ldr	r2, [pc, #136]	; (800840c <HAL_TIM_PWM_Start+0x174>)
 8008384:	4293      	cmp	r3, r2
 8008386:	d022      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 8008388:	687b      	ldr	r3, [r7, #4]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008390:	d01d      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 8008392:	687b      	ldr	r3, [r7, #4]
 8008394:	681b      	ldr	r3, [r3, #0]
 8008396:	4a1f      	ldr	r2, [pc, #124]	; (8008414 <HAL_TIM_PWM_Start+0x17c>)
 8008398:	4293      	cmp	r3, r2
 800839a:	d018      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 800839c:	687b      	ldr	r3, [r7, #4]
 800839e:	681b      	ldr	r3, [r3, #0]
 80083a0:	4a1d      	ldr	r2, [pc, #116]	; (8008418 <HAL_TIM_PWM_Start+0x180>)
 80083a2:	4293      	cmp	r3, r2
 80083a4:	d013      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 80083a6:	687b      	ldr	r3, [r7, #4]
 80083a8:	681b      	ldr	r3, [r3, #0]
 80083aa:	4a1c      	ldr	r2, [pc, #112]	; (800841c <HAL_TIM_PWM_Start+0x184>)
 80083ac:	4293      	cmp	r3, r2
 80083ae:	d00e      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 80083b0:	687b      	ldr	r3, [r7, #4]
 80083b2:	681b      	ldr	r3, [r3, #0]
 80083b4:	4a16      	ldr	r2, [pc, #88]	; (8008410 <HAL_TIM_PWM_Start+0x178>)
 80083b6:	4293      	cmp	r3, r2
 80083b8:	d009      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	681b      	ldr	r3, [r3, #0]
 80083be:	4a18      	ldr	r2, [pc, #96]	; (8008420 <HAL_TIM_PWM_Start+0x188>)
 80083c0:	4293      	cmp	r3, r2
 80083c2:	d004      	beq.n	80083ce <HAL_TIM_PWM_Start+0x136>
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	681b      	ldr	r3, [r3, #0]
 80083c8:	4a16      	ldr	r2, [pc, #88]	; (8008424 <HAL_TIM_PWM_Start+0x18c>)
 80083ca:	4293      	cmp	r3, r2
 80083cc:	d111      	bne.n	80083f2 <HAL_TIM_PWM_Start+0x15a>
 80083ce:	687b      	ldr	r3, [r7, #4]
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	689b      	ldr	r3, [r3, #8]
 80083d4:	f003 0307 	and.w	r3, r3, #7
 80083d8:	60fb      	str	r3, [r7, #12]
 80083da:	68fb      	ldr	r3, [r7, #12]
 80083dc:	2b06      	cmp	r3, #6
 80083de:	d010      	beq.n	8008402 <HAL_TIM_PWM_Start+0x16a>
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	681b      	ldr	r3, [r3, #0]
 80083e4:	681a      	ldr	r2, [r3, #0]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	681b      	ldr	r3, [r3, #0]
 80083ea:	f042 0201 	orr.w	r2, r2, #1
 80083ee:	601a      	str	r2, [r3, #0]
 80083f0:	e007      	b.n	8008402 <HAL_TIM_PWM_Start+0x16a>
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	681a      	ldr	r2, [r3, #0]
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	f042 0201 	orr.w	r2, r2, #1
 8008400:	601a      	str	r2, [r3, #0]
 8008402:	2300      	movs	r3, #0
 8008404:	4618      	mov	r0, r3
 8008406:	3710      	adds	r7, #16
 8008408:	46bd      	mov	sp, r7
 800840a:	bd80      	pop	{r7, pc}
 800840c:	40010000 	.word	0x40010000
 8008410:	40010400 	.word	0x40010400
 8008414:	40000400 	.word	0x40000400
 8008418:	40000800 	.word	0x40000800
 800841c:	40000c00 	.word	0x40000c00
 8008420:	40014000 	.word	0x40014000
 8008424:	40001800 	.word	0x40001800

08008428 <HAL_TIM_PWM_ConfigChannel>:
 8008428:	b580      	push	{r7, lr}
 800842a:	b086      	sub	sp, #24
 800842c:	af00      	add	r7, sp, #0
 800842e:	60f8      	str	r0, [r7, #12]
 8008430:	60b9      	str	r1, [r7, #8]
 8008432:	607a      	str	r2, [r7, #4]
 8008434:	2300      	movs	r3, #0
 8008436:	75fb      	strb	r3, [r7, #23]
 8008438:	68fb      	ldr	r3, [r7, #12]
 800843a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800843e:	2b01      	cmp	r3, #1
 8008440:	d101      	bne.n	8008446 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8008442:	2302      	movs	r3, #2
 8008444:	e0ae      	b.n	80085a4 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8008446:	68fb      	ldr	r3, [r7, #12]
 8008448:	2201      	movs	r2, #1
 800844a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	2b0c      	cmp	r3, #12
 8008452:	f200 809f 	bhi.w	8008594 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8008456:	a201      	add	r2, pc, #4	; (adr r2, 800845c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8008458:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800845c:	08008491 	.word	0x08008491
 8008460:	08008595 	.word	0x08008595
 8008464:	08008595 	.word	0x08008595
 8008468:	08008595 	.word	0x08008595
 800846c:	080084d1 	.word	0x080084d1
 8008470:	08008595 	.word	0x08008595
 8008474:	08008595 	.word	0x08008595
 8008478:	08008595 	.word	0x08008595
 800847c:	08008513 	.word	0x08008513
 8008480:	08008595 	.word	0x08008595
 8008484:	08008595 	.word	0x08008595
 8008488:	08008595 	.word	0x08008595
 800848c:	08008553 	.word	0x08008553
 8008490:	68fb      	ldr	r3, [r7, #12]
 8008492:	681b      	ldr	r3, [r3, #0]
 8008494:	68b9      	ldr	r1, [r7, #8]
 8008496:	4618      	mov	r0, r3
 8008498:	f000 f9f0 	bl	800887c <TIM_OC1_SetConfig>
 800849c:	68fb      	ldr	r3, [r7, #12]
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	699a      	ldr	r2, [r3, #24]
 80084a2:	68fb      	ldr	r3, [r7, #12]
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	f042 0208 	orr.w	r2, r2, #8
 80084aa:	619a      	str	r2, [r3, #24]
 80084ac:	68fb      	ldr	r3, [r7, #12]
 80084ae:	681b      	ldr	r3, [r3, #0]
 80084b0:	699a      	ldr	r2, [r3, #24]
 80084b2:	68fb      	ldr	r3, [r7, #12]
 80084b4:	681b      	ldr	r3, [r3, #0]
 80084b6:	f022 0204 	bic.w	r2, r2, #4
 80084ba:	619a      	str	r2, [r3, #24]
 80084bc:	68fb      	ldr	r3, [r7, #12]
 80084be:	681b      	ldr	r3, [r3, #0]
 80084c0:	6999      	ldr	r1, [r3, #24]
 80084c2:	68bb      	ldr	r3, [r7, #8]
 80084c4:	691a      	ldr	r2, [r3, #16]
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	681b      	ldr	r3, [r3, #0]
 80084ca:	430a      	orrs	r2, r1
 80084cc:	619a      	str	r2, [r3, #24]
 80084ce:	e064      	b.n	800859a <HAL_TIM_PWM_ConfigChannel+0x172>
 80084d0:	68fb      	ldr	r3, [r7, #12]
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	68b9      	ldr	r1, [r7, #8]
 80084d6:	4618      	mov	r0, r3
 80084d8:	f000 fa40 	bl	800895c <TIM_OC2_SetConfig>
 80084dc:	68fb      	ldr	r3, [r7, #12]
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	699a      	ldr	r2, [r3, #24]
 80084e2:	68fb      	ldr	r3, [r7, #12]
 80084e4:	681b      	ldr	r3, [r3, #0]
 80084e6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80084ea:	619a      	str	r2, [r3, #24]
 80084ec:	68fb      	ldr	r3, [r7, #12]
 80084ee:	681b      	ldr	r3, [r3, #0]
 80084f0:	699a      	ldr	r2, [r3, #24]
 80084f2:	68fb      	ldr	r3, [r7, #12]
 80084f4:	681b      	ldr	r3, [r3, #0]
 80084f6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80084fa:	619a      	str	r2, [r3, #24]
 80084fc:	68fb      	ldr	r3, [r7, #12]
 80084fe:	681b      	ldr	r3, [r3, #0]
 8008500:	6999      	ldr	r1, [r3, #24]
 8008502:	68bb      	ldr	r3, [r7, #8]
 8008504:	691b      	ldr	r3, [r3, #16]
 8008506:	021a      	lsls	r2, r3, #8
 8008508:	68fb      	ldr	r3, [r7, #12]
 800850a:	681b      	ldr	r3, [r3, #0]
 800850c:	430a      	orrs	r2, r1
 800850e:	619a      	str	r2, [r3, #24]
 8008510:	e043      	b.n	800859a <HAL_TIM_PWM_ConfigChannel+0x172>
 8008512:	68fb      	ldr	r3, [r7, #12]
 8008514:	681b      	ldr	r3, [r3, #0]
 8008516:	68b9      	ldr	r1, [r7, #8]
 8008518:	4618      	mov	r0, r3
 800851a:	f000 fa95 	bl	8008a48 <TIM_OC3_SetConfig>
 800851e:	68fb      	ldr	r3, [r7, #12]
 8008520:	681b      	ldr	r3, [r3, #0]
 8008522:	69da      	ldr	r2, [r3, #28]
 8008524:	68fb      	ldr	r3, [r7, #12]
 8008526:	681b      	ldr	r3, [r3, #0]
 8008528:	f042 0208 	orr.w	r2, r2, #8
 800852c:	61da      	str	r2, [r3, #28]
 800852e:	68fb      	ldr	r3, [r7, #12]
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	69da      	ldr	r2, [r3, #28]
 8008534:	68fb      	ldr	r3, [r7, #12]
 8008536:	681b      	ldr	r3, [r3, #0]
 8008538:	f022 0204 	bic.w	r2, r2, #4
 800853c:	61da      	str	r2, [r3, #28]
 800853e:	68fb      	ldr	r3, [r7, #12]
 8008540:	681b      	ldr	r3, [r3, #0]
 8008542:	69d9      	ldr	r1, [r3, #28]
 8008544:	68bb      	ldr	r3, [r7, #8]
 8008546:	691a      	ldr	r2, [r3, #16]
 8008548:	68fb      	ldr	r3, [r7, #12]
 800854a:	681b      	ldr	r3, [r3, #0]
 800854c:	430a      	orrs	r2, r1
 800854e:	61da      	str	r2, [r3, #28]
 8008550:	e023      	b.n	800859a <HAL_TIM_PWM_ConfigChannel+0x172>
 8008552:	68fb      	ldr	r3, [r7, #12]
 8008554:	681b      	ldr	r3, [r3, #0]
 8008556:	68b9      	ldr	r1, [r7, #8]
 8008558:	4618      	mov	r0, r3
 800855a:	f000 fae9 	bl	8008b30 <TIM_OC4_SetConfig>
 800855e:	68fb      	ldr	r3, [r7, #12]
 8008560:	681b      	ldr	r3, [r3, #0]
 8008562:	69da      	ldr	r2, [r3, #28]
 8008564:	68fb      	ldr	r3, [r7, #12]
 8008566:	681b      	ldr	r3, [r3, #0]
 8008568:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800856c:	61da      	str	r2, [r3, #28]
 800856e:	68fb      	ldr	r3, [r7, #12]
 8008570:	681b      	ldr	r3, [r3, #0]
 8008572:	69da      	ldr	r2, [r3, #28]
 8008574:	68fb      	ldr	r3, [r7, #12]
 8008576:	681b      	ldr	r3, [r3, #0]
 8008578:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800857c:	61da      	str	r2, [r3, #28]
 800857e:	68fb      	ldr	r3, [r7, #12]
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	69d9      	ldr	r1, [r3, #28]
 8008584:	68bb      	ldr	r3, [r7, #8]
 8008586:	691b      	ldr	r3, [r3, #16]
 8008588:	021a      	lsls	r2, r3, #8
 800858a:	68fb      	ldr	r3, [r7, #12]
 800858c:	681b      	ldr	r3, [r3, #0]
 800858e:	430a      	orrs	r2, r1
 8008590:	61da      	str	r2, [r3, #28]
 8008592:	e002      	b.n	800859a <HAL_TIM_PWM_ConfigChannel+0x172>
 8008594:	2301      	movs	r3, #1
 8008596:	75fb      	strb	r3, [r7, #23]
 8008598:	bf00      	nop
 800859a:	68fb      	ldr	r3, [r7, #12]
 800859c:	2200      	movs	r2, #0
 800859e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80085a2:	7dfb      	ldrb	r3, [r7, #23]
 80085a4:	4618      	mov	r0, r3
 80085a6:	3718      	adds	r7, #24
 80085a8:	46bd      	mov	sp, r7
 80085aa:	bd80      	pop	{r7, pc}

080085ac <HAL_TIM_ConfigClockSource>:
 80085ac:	b580      	push	{r7, lr}
 80085ae:	b084      	sub	sp, #16
 80085b0:	af00      	add	r7, sp, #0
 80085b2:	6078      	str	r0, [r7, #4]
 80085b4:	6039      	str	r1, [r7, #0]
 80085b6:	2300      	movs	r3, #0
 80085b8:	73fb      	strb	r3, [r7, #15]
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80085c0:	2b01      	cmp	r3, #1
 80085c2:	d101      	bne.n	80085c8 <HAL_TIM_ConfigClockSource+0x1c>
 80085c4:	2302      	movs	r3, #2
 80085c6:	e0b4      	b.n	8008732 <HAL_TIM_ConfigClockSource+0x186>
 80085c8:	687b      	ldr	r3, [r7, #4]
 80085ca:	2201      	movs	r2, #1
 80085cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80085d0:	687b      	ldr	r3, [r7, #4]
 80085d2:	2202      	movs	r2, #2
 80085d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80085d8:	687b      	ldr	r3, [r7, #4]
 80085da:	681b      	ldr	r3, [r3, #0]
 80085dc:	689b      	ldr	r3, [r3, #8]
 80085de:	60bb      	str	r3, [r7, #8]
 80085e0:	68bb      	ldr	r3, [r7, #8]
 80085e2:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80085e6:	60bb      	str	r3, [r7, #8]
 80085e8:	68bb      	ldr	r3, [r7, #8]
 80085ea:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80085ee:	60bb      	str	r3, [r7, #8]
 80085f0:	687b      	ldr	r3, [r7, #4]
 80085f2:	681b      	ldr	r3, [r3, #0]
 80085f4:	68ba      	ldr	r2, [r7, #8]
 80085f6:	609a      	str	r2, [r3, #8]
 80085f8:	683b      	ldr	r3, [r7, #0]
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008600:	d03e      	beq.n	8008680 <HAL_TIM_ConfigClockSource+0xd4>
 8008602:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008606:	f200 8087 	bhi.w	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 800860a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800860e:	f000 8086 	beq.w	800871e <HAL_TIM_ConfigClockSource+0x172>
 8008612:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008616:	d87f      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008618:	2b70      	cmp	r3, #112	; 0x70
 800861a:	d01a      	beq.n	8008652 <HAL_TIM_ConfigClockSource+0xa6>
 800861c:	2b70      	cmp	r3, #112	; 0x70
 800861e:	d87b      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008620:	2b60      	cmp	r3, #96	; 0x60
 8008622:	d050      	beq.n	80086c6 <HAL_TIM_ConfigClockSource+0x11a>
 8008624:	2b60      	cmp	r3, #96	; 0x60
 8008626:	d877      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008628:	2b50      	cmp	r3, #80	; 0x50
 800862a:	d03c      	beq.n	80086a6 <HAL_TIM_ConfigClockSource+0xfa>
 800862c:	2b50      	cmp	r3, #80	; 0x50
 800862e:	d873      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008630:	2b40      	cmp	r3, #64	; 0x40
 8008632:	d058      	beq.n	80086e6 <HAL_TIM_ConfigClockSource+0x13a>
 8008634:	2b40      	cmp	r3, #64	; 0x40
 8008636:	d86f      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008638:	2b30      	cmp	r3, #48	; 0x30
 800863a:	d064      	beq.n	8008706 <HAL_TIM_ConfigClockSource+0x15a>
 800863c:	2b30      	cmp	r3, #48	; 0x30
 800863e:	d86b      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008640:	2b20      	cmp	r3, #32
 8008642:	d060      	beq.n	8008706 <HAL_TIM_ConfigClockSource+0x15a>
 8008644:	2b20      	cmp	r3, #32
 8008646:	d867      	bhi.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008648:	2b00      	cmp	r3, #0
 800864a:	d05c      	beq.n	8008706 <HAL_TIM_ConfigClockSource+0x15a>
 800864c:	2b10      	cmp	r3, #16
 800864e:	d05a      	beq.n	8008706 <HAL_TIM_ConfigClockSource+0x15a>
 8008650:	e062      	b.n	8008718 <HAL_TIM_ConfigClockSource+0x16c>
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	6818      	ldr	r0, [r3, #0]
 8008656:	683b      	ldr	r3, [r7, #0]
 8008658:	6899      	ldr	r1, [r3, #8]
 800865a:	683b      	ldr	r3, [r7, #0]
 800865c:	685a      	ldr	r2, [r3, #4]
 800865e:	683b      	ldr	r3, [r7, #0]
 8008660:	68db      	ldr	r3, [r3, #12]
 8008662:	f000 fb35 	bl	8008cd0 <TIM_ETR_SetConfig>
 8008666:	687b      	ldr	r3, [r7, #4]
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	689b      	ldr	r3, [r3, #8]
 800866c:	60bb      	str	r3, [r7, #8]
 800866e:	68bb      	ldr	r3, [r7, #8]
 8008670:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8008674:	60bb      	str	r3, [r7, #8]
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	681b      	ldr	r3, [r3, #0]
 800867a:	68ba      	ldr	r2, [r7, #8]
 800867c:	609a      	str	r2, [r3, #8]
 800867e:	e04f      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 8008680:	687b      	ldr	r3, [r7, #4]
 8008682:	6818      	ldr	r0, [r3, #0]
 8008684:	683b      	ldr	r3, [r7, #0]
 8008686:	6899      	ldr	r1, [r3, #8]
 8008688:	683b      	ldr	r3, [r7, #0]
 800868a:	685a      	ldr	r2, [r3, #4]
 800868c:	683b      	ldr	r3, [r7, #0]
 800868e:	68db      	ldr	r3, [r3, #12]
 8008690:	f000 fb1e 	bl	8008cd0 <TIM_ETR_SetConfig>
 8008694:	687b      	ldr	r3, [r7, #4]
 8008696:	681b      	ldr	r3, [r3, #0]
 8008698:	689a      	ldr	r2, [r3, #8]
 800869a:	687b      	ldr	r3, [r7, #4]
 800869c:	681b      	ldr	r3, [r3, #0]
 800869e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80086a2:	609a      	str	r2, [r3, #8]
 80086a4:	e03c      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	6818      	ldr	r0, [r3, #0]
 80086aa:	683b      	ldr	r3, [r7, #0]
 80086ac:	6859      	ldr	r1, [r3, #4]
 80086ae:	683b      	ldr	r3, [r7, #0]
 80086b0:	68db      	ldr	r3, [r3, #12]
 80086b2:	461a      	mov	r2, r3
 80086b4:	f000 fa92 	bl	8008bdc <TIM_TI1_ConfigInputStage>
 80086b8:	687b      	ldr	r3, [r7, #4]
 80086ba:	681b      	ldr	r3, [r3, #0]
 80086bc:	2150      	movs	r1, #80	; 0x50
 80086be:	4618      	mov	r0, r3
 80086c0:	f000 faeb 	bl	8008c9a <TIM_ITRx_SetConfig>
 80086c4:	e02c      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	6818      	ldr	r0, [r3, #0]
 80086ca:	683b      	ldr	r3, [r7, #0]
 80086cc:	6859      	ldr	r1, [r3, #4]
 80086ce:	683b      	ldr	r3, [r7, #0]
 80086d0:	68db      	ldr	r3, [r3, #12]
 80086d2:	461a      	mov	r2, r3
 80086d4:	f000 fab1 	bl	8008c3a <TIM_TI2_ConfigInputStage>
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	2160      	movs	r1, #96	; 0x60
 80086de:	4618      	mov	r0, r3
 80086e0:	f000 fadb 	bl	8008c9a <TIM_ITRx_SetConfig>
 80086e4:	e01c      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 80086e6:	687b      	ldr	r3, [r7, #4]
 80086e8:	6818      	ldr	r0, [r3, #0]
 80086ea:	683b      	ldr	r3, [r7, #0]
 80086ec:	6859      	ldr	r1, [r3, #4]
 80086ee:	683b      	ldr	r3, [r7, #0]
 80086f0:	68db      	ldr	r3, [r3, #12]
 80086f2:	461a      	mov	r2, r3
 80086f4:	f000 fa72 	bl	8008bdc <TIM_TI1_ConfigInputStage>
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	2140      	movs	r1, #64	; 0x40
 80086fe:	4618      	mov	r0, r3
 8008700:	f000 facb 	bl	8008c9a <TIM_ITRx_SetConfig>
 8008704:	e00c      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	681a      	ldr	r2, [r3, #0]
 800870a:	683b      	ldr	r3, [r7, #0]
 800870c:	681b      	ldr	r3, [r3, #0]
 800870e:	4619      	mov	r1, r3
 8008710:	4610      	mov	r0, r2
 8008712:	f000 fac2 	bl	8008c9a <TIM_ITRx_SetConfig>
 8008716:	e003      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 8008718:	2301      	movs	r3, #1
 800871a:	73fb      	strb	r3, [r7, #15]
 800871c:	e000      	b.n	8008720 <HAL_TIM_ConfigClockSource+0x174>
 800871e:	bf00      	nop
 8008720:	687b      	ldr	r3, [r7, #4]
 8008722:	2201      	movs	r2, #1
 8008724:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008728:	687b      	ldr	r3, [r7, #4]
 800872a:	2200      	movs	r2, #0
 800872c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008730:	7bfb      	ldrb	r3, [r7, #15]
 8008732:	4618      	mov	r0, r3
 8008734:	3710      	adds	r7, #16
 8008736:	46bd      	mov	sp, r7
 8008738:	bd80      	pop	{r7, pc}
	...

0800873c <TIM_Base_SetConfig>:
 800873c:	b480      	push	{r7}
 800873e:	b085      	sub	sp, #20
 8008740:	af00      	add	r7, sp, #0
 8008742:	6078      	str	r0, [r7, #4]
 8008744:	6039      	str	r1, [r7, #0]
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	60fb      	str	r3, [r7, #12]
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	4a40      	ldr	r2, [pc, #256]	; (8008850 <TIM_Base_SetConfig+0x114>)
 8008750:	4293      	cmp	r3, r2
 8008752:	d013      	beq.n	800877c <TIM_Base_SetConfig+0x40>
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800875a:	d00f      	beq.n	800877c <TIM_Base_SetConfig+0x40>
 800875c:	687b      	ldr	r3, [r7, #4]
 800875e:	4a3d      	ldr	r2, [pc, #244]	; (8008854 <TIM_Base_SetConfig+0x118>)
 8008760:	4293      	cmp	r3, r2
 8008762:	d00b      	beq.n	800877c <TIM_Base_SetConfig+0x40>
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	4a3c      	ldr	r2, [pc, #240]	; (8008858 <TIM_Base_SetConfig+0x11c>)
 8008768:	4293      	cmp	r3, r2
 800876a:	d007      	beq.n	800877c <TIM_Base_SetConfig+0x40>
 800876c:	687b      	ldr	r3, [r7, #4]
 800876e:	4a3b      	ldr	r2, [pc, #236]	; (800885c <TIM_Base_SetConfig+0x120>)
 8008770:	4293      	cmp	r3, r2
 8008772:	d003      	beq.n	800877c <TIM_Base_SetConfig+0x40>
 8008774:	687b      	ldr	r3, [r7, #4]
 8008776:	4a3a      	ldr	r2, [pc, #232]	; (8008860 <TIM_Base_SetConfig+0x124>)
 8008778:	4293      	cmp	r3, r2
 800877a:	d108      	bne.n	800878e <TIM_Base_SetConfig+0x52>
 800877c:	68fb      	ldr	r3, [r7, #12]
 800877e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008782:	60fb      	str	r3, [r7, #12]
 8008784:	683b      	ldr	r3, [r7, #0]
 8008786:	685b      	ldr	r3, [r3, #4]
 8008788:	68fa      	ldr	r2, [r7, #12]
 800878a:	4313      	orrs	r3, r2
 800878c:	60fb      	str	r3, [r7, #12]
 800878e:	687b      	ldr	r3, [r7, #4]
 8008790:	4a2f      	ldr	r2, [pc, #188]	; (8008850 <TIM_Base_SetConfig+0x114>)
 8008792:	4293      	cmp	r3, r2
 8008794:	d02b      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 8008796:	687b      	ldr	r3, [r7, #4]
 8008798:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800879c:	d027      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 800879e:	687b      	ldr	r3, [r7, #4]
 80087a0:	4a2c      	ldr	r2, [pc, #176]	; (8008854 <TIM_Base_SetConfig+0x118>)
 80087a2:	4293      	cmp	r3, r2
 80087a4:	d023      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	4a2b      	ldr	r2, [pc, #172]	; (8008858 <TIM_Base_SetConfig+0x11c>)
 80087aa:	4293      	cmp	r3, r2
 80087ac:	d01f      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	4a2a      	ldr	r2, [pc, #168]	; (800885c <TIM_Base_SetConfig+0x120>)
 80087b2:	4293      	cmp	r3, r2
 80087b4:	d01b      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087b6:	687b      	ldr	r3, [r7, #4]
 80087b8:	4a29      	ldr	r2, [pc, #164]	; (8008860 <TIM_Base_SetConfig+0x124>)
 80087ba:	4293      	cmp	r3, r2
 80087bc:	d017      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087be:	687b      	ldr	r3, [r7, #4]
 80087c0:	4a28      	ldr	r2, [pc, #160]	; (8008864 <TIM_Base_SetConfig+0x128>)
 80087c2:	4293      	cmp	r3, r2
 80087c4:	d013      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087c6:	687b      	ldr	r3, [r7, #4]
 80087c8:	4a27      	ldr	r2, [pc, #156]	; (8008868 <TIM_Base_SetConfig+0x12c>)
 80087ca:	4293      	cmp	r3, r2
 80087cc:	d00f      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087ce:	687b      	ldr	r3, [r7, #4]
 80087d0:	4a26      	ldr	r2, [pc, #152]	; (800886c <TIM_Base_SetConfig+0x130>)
 80087d2:	4293      	cmp	r3, r2
 80087d4:	d00b      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	4a25      	ldr	r2, [pc, #148]	; (8008870 <TIM_Base_SetConfig+0x134>)
 80087da:	4293      	cmp	r3, r2
 80087dc:	d007      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	4a24      	ldr	r2, [pc, #144]	; (8008874 <TIM_Base_SetConfig+0x138>)
 80087e2:	4293      	cmp	r3, r2
 80087e4:	d003      	beq.n	80087ee <TIM_Base_SetConfig+0xb2>
 80087e6:	687b      	ldr	r3, [r7, #4]
 80087e8:	4a23      	ldr	r2, [pc, #140]	; (8008878 <TIM_Base_SetConfig+0x13c>)
 80087ea:	4293      	cmp	r3, r2
 80087ec:	d108      	bne.n	8008800 <TIM_Base_SetConfig+0xc4>
 80087ee:	68fb      	ldr	r3, [r7, #12]
 80087f0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80087f4:	60fb      	str	r3, [r7, #12]
 80087f6:	683b      	ldr	r3, [r7, #0]
 80087f8:	68db      	ldr	r3, [r3, #12]
 80087fa:	68fa      	ldr	r2, [r7, #12]
 80087fc:	4313      	orrs	r3, r2
 80087fe:	60fb      	str	r3, [r7, #12]
 8008800:	68fb      	ldr	r3, [r7, #12]
 8008802:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8008806:	683b      	ldr	r3, [r7, #0]
 8008808:	695b      	ldr	r3, [r3, #20]
 800880a:	4313      	orrs	r3, r2
 800880c:	60fb      	str	r3, [r7, #12]
 800880e:	687b      	ldr	r3, [r7, #4]
 8008810:	68fa      	ldr	r2, [r7, #12]
 8008812:	601a      	str	r2, [r3, #0]
 8008814:	683b      	ldr	r3, [r7, #0]
 8008816:	689a      	ldr	r2, [r3, #8]
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	62da      	str	r2, [r3, #44]	; 0x2c
 800881c:	683b      	ldr	r3, [r7, #0]
 800881e:	681a      	ldr	r2, [r3, #0]
 8008820:	687b      	ldr	r3, [r7, #4]
 8008822:	629a      	str	r2, [r3, #40]	; 0x28
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	4a0a      	ldr	r2, [pc, #40]	; (8008850 <TIM_Base_SetConfig+0x114>)
 8008828:	4293      	cmp	r3, r2
 800882a:	d003      	beq.n	8008834 <TIM_Base_SetConfig+0xf8>
 800882c:	687b      	ldr	r3, [r7, #4]
 800882e:	4a0c      	ldr	r2, [pc, #48]	; (8008860 <TIM_Base_SetConfig+0x124>)
 8008830:	4293      	cmp	r3, r2
 8008832:	d103      	bne.n	800883c <TIM_Base_SetConfig+0x100>
 8008834:	683b      	ldr	r3, [r7, #0]
 8008836:	691a      	ldr	r2, [r3, #16]
 8008838:	687b      	ldr	r3, [r7, #4]
 800883a:	631a      	str	r2, [r3, #48]	; 0x30
 800883c:	687b      	ldr	r3, [r7, #4]
 800883e:	2201      	movs	r2, #1
 8008840:	615a      	str	r2, [r3, #20]
 8008842:	bf00      	nop
 8008844:	3714      	adds	r7, #20
 8008846:	46bd      	mov	sp, r7
 8008848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800884c:	4770      	bx	lr
 800884e:	bf00      	nop
 8008850:	40010000 	.word	0x40010000
 8008854:	40000400 	.word	0x40000400
 8008858:	40000800 	.word	0x40000800
 800885c:	40000c00 	.word	0x40000c00
 8008860:	40010400 	.word	0x40010400
 8008864:	40014000 	.word	0x40014000
 8008868:	40014400 	.word	0x40014400
 800886c:	40014800 	.word	0x40014800
 8008870:	40001800 	.word	0x40001800
 8008874:	40001c00 	.word	0x40001c00
 8008878:	40002000 	.word	0x40002000

0800887c <TIM_OC1_SetConfig>:
 800887c:	b480      	push	{r7}
 800887e:	b087      	sub	sp, #28
 8008880:	af00      	add	r7, sp, #0
 8008882:	6078      	str	r0, [r7, #4]
 8008884:	6039      	str	r1, [r7, #0]
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	6a1b      	ldr	r3, [r3, #32]
 800888a:	f023 0201 	bic.w	r2, r3, #1
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	621a      	str	r2, [r3, #32]
 8008892:	687b      	ldr	r3, [r7, #4]
 8008894:	6a1b      	ldr	r3, [r3, #32]
 8008896:	617b      	str	r3, [r7, #20]
 8008898:	687b      	ldr	r3, [r7, #4]
 800889a:	685b      	ldr	r3, [r3, #4]
 800889c:	613b      	str	r3, [r7, #16]
 800889e:	687b      	ldr	r3, [r7, #4]
 80088a0:	699b      	ldr	r3, [r3, #24]
 80088a2:	60fb      	str	r3, [r7, #12]
 80088a4:	68fb      	ldr	r3, [r7, #12]
 80088a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80088aa:	60fb      	str	r3, [r7, #12]
 80088ac:	68fb      	ldr	r3, [r7, #12]
 80088ae:	f023 0303 	bic.w	r3, r3, #3
 80088b2:	60fb      	str	r3, [r7, #12]
 80088b4:	683b      	ldr	r3, [r7, #0]
 80088b6:	681b      	ldr	r3, [r3, #0]
 80088b8:	68fa      	ldr	r2, [r7, #12]
 80088ba:	4313      	orrs	r3, r2
 80088bc:	60fb      	str	r3, [r7, #12]
 80088be:	697b      	ldr	r3, [r7, #20]
 80088c0:	f023 0302 	bic.w	r3, r3, #2
 80088c4:	617b      	str	r3, [r7, #20]
 80088c6:	683b      	ldr	r3, [r7, #0]
 80088c8:	689b      	ldr	r3, [r3, #8]
 80088ca:	697a      	ldr	r2, [r7, #20]
 80088cc:	4313      	orrs	r3, r2
 80088ce:	617b      	str	r3, [r7, #20]
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	4a20      	ldr	r2, [pc, #128]	; (8008954 <TIM_OC1_SetConfig+0xd8>)
 80088d4:	4293      	cmp	r3, r2
 80088d6:	d003      	beq.n	80088e0 <TIM_OC1_SetConfig+0x64>
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	4a1f      	ldr	r2, [pc, #124]	; (8008958 <TIM_OC1_SetConfig+0xdc>)
 80088dc:	4293      	cmp	r3, r2
 80088de:	d10c      	bne.n	80088fa <TIM_OC1_SetConfig+0x7e>
 80088e0:	697b      	ldr	r3, [r7, #20]
 80088e2:	f023 0308 	bic.w	r3, r3, #8
 80088e6:	617b      	str	r3, [r7, #20]
 80088e8:	683b      	ldr	r3, [r7, #0]
 80088ea:	68db      	ldr	r3, [r3, #12]
 80088ec:	697a      	ldr	r2, [r7, #20]
 80088ee:	4313      	orrs	r3, r2
 80088f0:	617b      	str	r3, [r7, #20]
 80088f2:	697b      	ldr	r3, [r7, #20]
 80088f4:	f023 0304 	bic.w	r3, r3, #4
 80088f8:	617b      	str	r3, [r7, #20]
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	4a15      	ldr	r2, [pc, #84]	; (8008954 <TIM_OC1_SetConfig+0xd8>)
 80088fe:	4293      	cmp	r3, r2
 8008900:	d003      	beq.n	800890a <TIM_OC1_SetConfig+0x8e>
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	4a14      	ldr	r2, [pc, #80]	; (8008958 <TIM_OC1_SetConfig+0xdc>)
 8008906:	4293      	cmp	r3, r2
 8008908:	d111      	bne.n	800892e <TIM_OC1_SetConfig+0xb2>
 800890a:	693b      	ldr	r3, [r7, #16]
 800890c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008910:	613b      	str	r3, [r7, #16]
 8008912:	693b      	ldr	r3, [r7, #16]
 8008914:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008918:	613b      	str	r3, [r7, #16]
 800891a:	683b      	ldr	r3, [r7, #0]
 800891c:	695b      	ldr	r3, [r3, #20]
 800891e:	693a      	ldr	r2, [r7, #16]
 8008920:	4313      	orrs	r3, r2
 8008922:	613b      	str	r3, [r7, #16]
 8008924:	683b      	ldr	r3, [r7, #0]
 8008926:	699b      	ldr	r3, [r3, #24]
 8008928:	693a      	ldr	r2, [r7, #16]
 800892a:	4313      	orrs	r3, r2
 800892c:	613b      	str	r3, [r7, #16]
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	693a      	ldr	r2, [r7, #16]
 8008932:	605a      	str	r2, [r3, #4]
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	68fa      	ldr	r2, [r7, #12]
 8008938:	619a      	str	r2, [r3, #24]
 800893a:	683b      	ldr	r3, [r7, #0]
 800893c:	685a      	ldr	r2, [r3, #4]
 800893e:	687b      	ldr	r3, [r7, #4]
 8008940:	635a      	str	r2, [r3, #52]	; 0x34
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	697a      	ldr	r2, [r7, #20]
 8008946:	621a      	str	r2, [r3, #32]
 8008948:	bf00      	nop
 800894a:	371c      	adds	r7, #28
 800894c:	46bd      	mov	sp, r7
 800894e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008952:	4770      	bx	lr
 8008954:	40010000 	.word	0x40010000
 8008958:	40010400 	.word	0x40010400

0800895c <TIM_OC2_SetConfig>:
 800895c:	b480      	push	{r7}
 800895e:	b087      	sub	sp, #28
 8008960:	af00      	add	r7, sp, #0
 8008962:	6078      	str	r0, [r7, #4]
 8008964:	6039      	str	r1, [r7, #0]
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	6a1b      	ldr	r3, [r3, #32]
 800896a:	f023 0210 	bic.w	r2, r3, #16
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	621a      	str	r2, [r3, #32]
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	6a1b      	ldr	r3, [r3, #32]
 8008976:	617b      	str	r3, [r7, #20]
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	685b      	ldr	r3, [r3, #4]
 800897c:	613b      	str	r3, [r7, #16]
 800897e:	687b      	ldr	r3, [r7, #4]
 8008980:	699b      	ldr	r3, [r3, #24]
 8008982:	60fb      	str	r3, [r7, #12]
 8008984:	68fb      	ldr	r3, [r7, #12]
 8008986:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800898a:	60fb      	str	r3, [r7, #12]
 800898c:	68fb      	ldr	r3, [r7, #12]
 800898e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008992:	60fb      	str	r3, [r7, #12]
 8008994:	683b      	ldr	r3, [r7, #0]
 8008996:	681b      	ldr	r3, [r3, #0]
 8008998:	021b      	lsls	r3, r3, #8
 800899a:	68fa      	ldr	r2, [r7, #12]
 800899c:	4313      	orrs	r3, r2
 800899e:	60fb      	str	r3, [r7, #12]
 80089a0:	697b      	ldr	r3, [r7, #20]
 80089a2:	f023 0320 	bic.w	r3, r3, #32
 80089a6:	617b      	str	r3, [r7, #20]
 80089a8:	683b      	ldr	r3, [r7, #0]
 80089aa:	689b      	ldr	r3, [r3, #8]
 80089ac:	011b      	lsls	r3, r3, #4
 80089ae:	697a      	ldr	r2, [r7, #20]
 80089b0:	4313      	orrs	r3, r2
 80089b2:	617b      	str	r3, [r7, #20]
 80089b4:	687b      	ldr	r3, [r7, #4]
 80089b6:	4a22      	ldr	r2, [pc, #136]	; (8008a40 <TIM_OC2_SetConfig+0xe4>)
 80089b8:	4293      	cmp	r3, r2
 80089ba:	d003      	beq.n	80089c4 <TIM_OC2_SetConfig+0x68>
 80089bc:	687b      	ldr	r3, [r7, #4]
 80089be:	4a21      	ldr	r2, [pc, #132]	; (8008a44 <TIM_OC2_SetConfig+0xe8>)
 80089c0:	4293      	cmp	r3, r2
 80089c2:	d10d      	bne.n	80089e0 <TIM_OC2_SetConfig+0x84>
 80089c4:	697b      	ldr	r3, [r7, #20]
 80089c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80089ca:	617b      	str	r3, [r7, #20]
 80089cc:	683b      	ldr	r3, [r7, #0]
 80089ce:	68db      	ldr	r3, [r3, #12]
 80089d0:	011b      	lsls	r3, r3, #4
 80089d2:	697a      	ldr	r2, [r7, #20]
 80089d4:	4313      	orrs	r3, r2
 80089d6:	617b      	str	r3, [r7, #20]
 80089d8:	697b      	ldr	r3, [r7, #20]
 80089da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80089de:	617b      	str	r3, [r7, #20]
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	4a17      	ldr	r2, [pc, #92]	; (8008a40 <TIM_OC2_SetConfig+0xe4>)
 80089e4:	4293      	cmp	r3, r2
 80089e6:	d003      	beq.n	80089f0 <TIM_OC2_SetConfig+0x94>
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	4a16      	ldr	r2, [pc, #88]	; (8008a44 <TIM_OC2_SetConfig+0xe8>)
 80089ec:	4293      	cmp	r3, r2
 80089ee:	d113      	bne.n	8008a18 <TIM_OC2_SetConfig+0xbc>
 80089f0:	693b      	ldr	r3, [r7, #16]
 80089f2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80089f6:	613b      	str	r3, [r7, #16]
 80089f8:	693b      	ldr	r3, [r7, #16]
 80089fa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80089fe:	613b      	str	r3, [r7, #16]
 8008a00:	683b      	ldr	r3, [r7, #0]
 8008a02:	695b      	ldr	r3, [r3, #20]
 8008a04:	009b      	lsls	r3, r3, #2
 8008a06:	693a      	ldr	r2, [r7, #16]
 8008a08:	4313      	orrs	r3, r2
 8008a0a:	613b      	str	r3, [r7, #16]
 8008a0c:	683b      	ldr	r3, [r7, #0]
 8008a0e:	699b      	ldr	r3, [r3, #24]
 8008a10:	009b      	lsls	r3, r3, #2
 8008a12:	693a      	ldr	r2, [r7, #16]
 8008a14:	4313      	orrs	r3, r2
 8008a16:	613b      	str	r3, [r7, #16]
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	693a      	ldr	r2, [r7, #16]
 8008a1c:	605a      	str	r2, [r3, #4]
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	68fa      	ldr	r2, [r7, #12]
 8008a22:	619a      	str	r2, [r3, #24]
 8008a24:	683b      	ldr	r3, [r7, #0]
 8008a26:	685a      	ldr	r2, [r3, #4]
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	639a      	str	r2, [r3, #56]	; 0x38
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	697a      	ldr	r2, [r7, #20]
 8008a30:	621a      	str	r2, [r3, #32]
 8008a32:	bf00      	nop
 8008a34:	371c      	adds	r7, #28
 8008a36:	46bd      	mov	sp, r7
 8008a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a3c:	4770      	bx	lr
 8008a3e:	bf00      	nop
 8008a40:	40010000 	.word	0x40010000
 8008a44:	40010400 	.word	0x40010400

08008a48 <TIM_OC3_SetConfig>:
 8008a48:	b480      	push	{r7}
 8008a4a:	b087      	sub	sp, #28
 8008a4c:	af00      	add	r7, sp, #0
 8008a4e:	6078      	str	r0, [r7, #4]
 8008a50:	6039      	str	r1, [r7, #0]
 8008a52:	687b      	ldr	r3, [r7, #4]
 8008a54:	6a1b      	ldr	r3, [r3, #32]
 8008a56:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	621a      	str	r2, [r3, #32]
 8008a5e:	687b      	ldr	r3, [r7, #4]
 8008a60:	6a1b      	ldr	r3, [r3, #32]
 8008a62:	617b      	str	r3, [r7, #20]
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	685b      	ldr	r3, [r3, #4]
 8008a68:	613b      	str	r3, [r7, #16]
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	69db      	ldr	r3, [r3, #28]
 8008a6e:	60fb      	str	r3, [r7, #12]
 8008a70:	68fb      	ldr	r3, [r7, #12]
 8008a72:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008a76:	60fb      	str	r3, [r7, #12]
 8008a78:	68fb      	ldr	r3, [r7, #12]
 8008a7a:	f023 0303 	bic.w	r3, r3, #3
 8008a7e:	60fb      	str	r3, [r7, #12]
 8008a80:	683b      	ldr	r3, [r7, #0]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	68fa      	ldr	r2, [r7, #12]
 8008a86:	4313      	orrs	r3, r2
 8008a88:	60fb      	str	r3, [r7, #12]
 8008a8a:	697b      	ldr	r3, [r7, #20]
 8008a8c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008a90:	617b      	str	r3, [r7, #20]
 8008a92:	683b      	ldr	r3, [r7, #0]
 8008a94:	689b      	ldr	r3, [r3, #8]
 8008a96:	021b      	lsls	r3, r3, #8
 8008a98:	697a      	ldr	r2, [r7, #20]
 8008a9a:	4313      	orrs	r3, r2
 8008a9c:	617b      	str	r3, [r7, #20]
 8008a9e:	687b      	ldr	r3, [r7, #4]
 8008aa0:	4a21      	ldr	r2, [pc, #132]	; (8008b28 <TIM_OC3_SetConfig+0xe0>)
 8008aa2:	4293      	cmp	r3, r2
 8008aa4:	d003      	beq.n	8008aae <TIM_OC3_SetConfig+0x66>
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	4a20      	ldr	r2, [pc, #128]	; (8008b2c <TIM_OC3_SetConfig+0xe4>)
 8008aaa:	4293      	cmp	r3, r2
 8008aac:	d10d      	bne.n	8008aca <TIM_OC3_SetConfig+0x82>
 8008aae:	697b      	ldr	r3, [r7, #20]
 8008ab0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008ab4:	617b      	str	r3, [r7, #20]
 8008ab6:	683b      	ldr	r3, [r7, #0]
 8008ab8:	68db      	ldr	r3, [r3, #12]
 8008aba:	021b      	lsls	r3, r3, #8
 8008abc:	697a      	ldr	r2, [r7, #20]
 8008abe:	4313      	orrs	r3, r2
 8008ac0:	617b      	str	r3, [r7, #20]
 8008ac2:	697b      	ldr	r3, [r7, #20]
 8008ac4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008ac8:	617b      	str	r3, [r7, #20]
 8008aca:	687b      	ldr	r3, [r7, #4]
 8008acc:	4a16      	ldr	r2, [pc, #88]	; (8008b28 <TIM_OC3_SetConfig+0xe0>)
 8008ace:	4293      	cmp	r3, r2
 8008ad0:	d003      	beq.n	8008ada <TIM_OC3_SetConfig+0x92>
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	4a15      	ldr	r2, [pc, #84]	; (8008b2c <TIM_OC3_SetConfig+0xe4>)
 8008ad6:	4293      	cmp	r3, r2
 8008ad8:	d113      	bne.n	8008b02 <TIM_OC3_SetConfig+0xba>
 8008ada:	693b      	ldr	r3, [r7, #16]
 8008adc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008ae0:	613b      	str	r3, [r7, #16]
 8008ae2:	693b      	ldr	r3, [r7, #16]
 8008ae4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008ae8:	613b      	str	r3, [r7, #16]
 8008aea:	683b      	ldr	r3, [r7, #0]
 8008aec:	695b      	ldr	r3, [r3, #20]
 8008aee:	011b      	lsls	r3, r3, #4
 8008af0:	693a      	ldr	r2, [r7, #16]
 8008af2:	4313      	orrs	r3, r2
 8008af4:	613b      	str	r3, [r7, #16]
 8008af6:	683b      	ldr	r3, [r7, #0]
 8008af8:	699b      	ldr	r3, [r3, #24]
 8008afa:	011b      	lsls	r3, r3, #4
 8008afc:	693a      	ldr	r2, [r7, #16]
 8008afe:	4313      	orrs	r3, r2
 8008b00:	613b      	str	r3, [r7, #16]
 8008b02:	687b      	ldr	r3, [r7, #4]
 8008b04:	693a      	ldr	r2, [r7, #16]
 8008b06:	605a      	str	r2, [r3, #4]
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	68fa      	ldr	r2, [r7, #12]
 8008b0c:	61da      	str	r2, [r3, #28]
 8008b0e:	683b      	ldr	r3, [r7, #0]
 8008b10:	685a      	ldr	r2, [r3, #4]
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	63da      	str	r2, [r3, #60]	; 0x3c
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	697a      	ldr	r2, [r7, #20]
 8008b1a:	621a      	str	r2, [r3, #32]
 8008b1c:	bf00      	nop
 8008b1e:	371c      	adds	r7, #28
 8008b20:	46bd      	mov	sp, r7
 8008b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b26:	4770      	bx	lr
 8008b28:	40010000 	.word	0x40010000
 8008b2c:	40010400 	.word	0x40010400

08008b30 <TIM_OC4_SetConfig>:
 8008b30:	b480      	push	{r7}
 8008b32:	b087      	sub	sp, #28
 8008b34:	af00      	add	r7, sp, #0
 8008b36:	6078      	str	r0, [r7, #4]
 8008b38:	6039      	str	r1, [r7, #0]
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	6a1b      	ldr	r3, [r3, #32]
 8008b3e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	621a      	str	r2, [r3, #32]
 8008b46:	687b      	ldr	r3, [r7, #4]
 8008b48:	6a1b      	ldr	r3, [r3, #32]
 8008b4a:	613b      	str	r3, [r7, #16]
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	685b      	ldr	r3, [r3, #4]
 8008b50:	617b      	str	r3, [r7, #20]
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	69db      	ldr	r3, [r3, #28]
 8008b56:	60fb      	str	r3, [r7, #12]
 8008b58:	68fb      	ldr	r3, [r7, #12]
 8008b5a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008b5e:	60fb      	str	r3, [r7, #12]
 8008b60:	68fb      	ldr	r3, [r7, #12]
 8008b62:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008b66:	60fb      	str	r3, [r7, #12]
 8008b68:	683b      	ldr	r3, [r7, #0]
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	021b      	lsls	r3, r3, #8
 8008b6e:	68fa      	ldr	r2, [r7, #12]
 8008b70:	4313      	orrs	r3, r2
 8008b72:	60fb      	str	r3, [r7, #12]
 8008b74:	693b      	ldr	r3, [r7, #16]
 8008b76:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008b7a:	613b      	str	r3, [r7, #16]
 8008b7c:	683b      	ldr	r3, [r7, #0]
 8008b7e:	689b      	ldr	r3, [r3, #8]
 8008b80:	031b      	lsls	r3, r3, #12
 8008b82:	693a      	ldr	r2, [r7, #16]
 8008b84:	4313      	orrs	r3, r2
 8008b86:	613b      	str	r3, [r7, #16]
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	4a12      	ldr	r2, [pc, #72]	; (8008bd4 <TIM_OC4_SetConfig+0xa4>)
 8008b8c:	4293      	cmp	r3, r2
 8008b8e:	d003      	beq.n	8008b98 <TIM_OC4_SetConfig+0x68>
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	4a11      	ldr	r2, [pc, #68]	; (8008bd8 <TIM_OC4_SetConfig+0xa8>)
 8008b94:	4293      	cmp	r3, r2
 8008b96:	d109      	bne.n	8008bac <TIM_OC4_SetConfig+0x7c>
 8008b98:	697b      	ldr	r3, [r7, #20]
 8008b9a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008b9e:	617b      	str	r3, [r7, #20]
 8008ba0:	683b      	ldr	r3, [r7, #0]
 8008ba2:	695b      	ldr	r3, [r3, #20]
 8008ba4:	019b      	lsls	r3, r3, #6
 8008ba6:	697a      	ldr	r2, [r7, #20]
 8008ba8:	4313      	orrs	r3, r2
 8008baa:	617b      	str	r3, [r7, #20]
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	697a      	ldr	r2, [r7, #20]
 8008bb0:	605a      	str	r2, [r3, #4]
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	68fa      	ldr	r2, [r7, #12]
 8008bb6:	61da      	str	r2, [r3, #28]
 8008bb8:	683b      	ldr	r3, [r7, #0]
 8008bba:	685a      	ldr	r2, [r3, #4]
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	641a      	str	r2, [r3, #64]	; 0x40
 8008bc0:	687b      	ldr	r3, [r7, #4]
 8008bc2:	693a      	ldr	r2, [r7, #16]
 8008bc4:	621a      	str	r2, [r3, #32]
 8008bc6:	bf00      	nop
 8008bc8:	371c      	adds	r7, #28
 8008bca:	46bd      	mov	sp, r7
 8008bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bd0:	4770      	bx	lr
 8008bd2:	bf00      	nop
 8008bd4:	40010000 	.word	0x40010000
 8008bd8:	40010400 	.word	0x40010400

08008bdc <TIM_TI1_ConfigInputStage>:
 8008bdc:	b480      	push	{r7}
 8008bde:	b087      	sub	sp, #28
 8008be0:	af00      	add	r7, sp, #0
 8008be2:	60f8      	str	r0, [r7, #12]
 8008be4:	60b9      	str	r1, [r7, #8]
 8008be6:	607a      	str	r2, [r7, #4]
 8008be8:	68fb      	ldr	r3, [r7, #12]
 8008bea:	6a1b      	ldr	r3, [r3, #32]
 8008bec:	617b      	str	r3, [r7, #20]
 8008bee:	68fb      	ldr	r3, [r7, #12]
 8008bf0:	6a1b      	ldr	r3, [r3, #32]
 8008bf2:	f023 0201 	bic.w	r2, r3, #1
 8008bf6:	68fb      	ldr	r3, [r7, #12]
 8008bf8:	621a      	str	r2, [r3, #32]
 8008bfa:	68fb      	ldr	r3, [r7, #12]
 8008bfc:	699b      	ldr	r3, [r3, #24]
 8008bfe:	613b      	str	r3, [r7, #16]
 8008c00:	693b      	ldr	r3, [r7, #16]
 8008c02:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008c06:	613b      	str	r3, [r7, #16]
 8008c08:	687b      	ldr	r3, [r7, #4]
 8008c0a:	011b      	lsls	r3, r3, #4
 8008c0c:	693a      	ldr	r2, [r7, #16]
 8008c0e:	4313      	orrs	r3, r2
 8008c10:	613b      	str	r3, [r7, #16]
 8008c12:	697b      	ldr	r3, [r7, #20]
 8008c14:	f023 030a 	bic.w	r3, r3, #10
 8008c18:	617b      	str	r3, [r7, #20]
 8008c1a:	697a      	ldr	r2, [r7, #20]
 8008c1c:	68bb      	ldr	r3, [r7, #8]
 8008c1e:	4313      	orrs	r3, r2
 8008c20:	617b      	str	r3, [r7, #20]
 8008c22:	68fb      	ldr	r3, [r7, #12]
 8008c24:	693a      	ldr	r2, [r7, #16]
 8008c26:	619a      	str	r2, [r3, #24]
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	697a      	ldr	r2, [r7, #20]
 8008c2c:	621a      	str	r2, [r3, #32]
 8008c2e:	bf00      	nop
 8008c30:	371c      	adds	r7, #28
 8008c32:	46bd      	mov	sp, r7
 8008c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c38:	4770      	bx	lr

08008c3a <TIM_TI2_ConfigInputStage>:
 8008c3a:	b480      	push	{r7}
 8008c3c:	b087      	sub	sp, #28
 8008c3e:	af00      	add	r7, sp, #0
 8008c40:	60f8      	str	r0, [r7, #12]
 8008c42:	60b9      	str	r1, [r7, #8]
 8008c44:	607a      	str	r2, [r7, #4]
 8008c46:	68fb      	ldr	r3, [r7, #12]
 8008c48:	6a1b      	ldr	r3, [r3, #32]
 8008c4a:	f023 0210 	bic.w	r2, r3, #16
 8008c4e:	68fb      	ldr	r3, [r7, #12]
 8008c50:	621a      	str	r2, [r3, #32]
 8008c52:	68fb      	ldr	r3, [r7, #12]
 8008c54:	699b      	ldr	r3, [r3, #24]
 8008c56:	617b      	str	r3, [r7, #20]
 8008c58:	68fb      	ldr	r3, [r7, #12]
 8008c5a:	6a1b      	ldr	r3, [r3, #32]
 8008c5c:	613b      	str	r3, [r7, #16]
 8008c5e:	697b      	ldr	r3, [r7, #20]
 8008c60:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008c64:	617b      	str	r3, [r7, #20]
 8008c66:	687b      	ldr	r3, [r7, #4]
 8008c68:	031b      	lsls	r3, r3, #12
 8008c6a:	697a      	ldr	r2, [r7, #20]
 8008c6c:	4313      	orrs	r3, r2
 8008c6e:	617b      	str	r3, [r7, #20]
 8008c70:	693b      	ldr	r3, [r7, #16]
 8008c72:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008c76:	613b      	str	r3, [r7, #16]
 8008c78:	68bb      	ldr	r3, [r7, #8]
 8008c7a:	011b      	lsls	r3, r3, #4
 8008c7c:	693a      	ldr	r2, [r7, #16]
 8008c7e:	4313      	orrs	r3, r2
 8008c80:	613b      	str	r3, [r7, #16]
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	697a      	ldr	r2, [r7, #20]
 8008c86:	619a      	str	r2, [r3, #24]
 8008c88:	68fb      	ldr	r3, [r7, #12]
 8008c8a:	693a      	ldr	r2, [r7, #16]
 8008c8c:	621a      	str	r2, [r3, #32]
 8008c8e:	bf00      	nop
 8008c90:	371c      	adds	r7, #28
 8008c92:	46bd      	mov	sp, r7
 8008c94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c98:	4770      	bx	lr

08008c9a <TIM_ITRx_SetConfig>:
 8008c9a:	b480      	push	{r7}
 8008c9c:	b085      	sub	sp, #20
 8008c9e:	af00      	add	r7, sp, #0
 8008ca0:	6078      	str	r0, [r7, #4]
 8008ca2:	6039      	str	r1, [r7, #0]
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	689b      	ldr	r3, [r3, #8]
 8008ca8:	60fb      	str	r3, [r7, #12]
 8008caa:	68fb      	ldr	r3, [r7, #12]
 8008cac:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008cb0:	60fb      	str	r3, [r7, #12]
 8008cb2:	683a      	ldr	r2, [r7, #0]
 8008cb4:	68fb      	ldr	r3, [r7, #12]
 8008cb6:	4313      	orrs	r3, r2
 8008cb8:	f043 0307 	orr.w	r3, r3, #7
 8008cbc:	60fb      	str	r3, [r7, #12]
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	68fa      	ldr	r2, [r7, #12]
 8008cc2:	609a      	str	r2, [r3, #8]
 8008cc4:	bf00      	nop
 8008cc6:	3714      	adds	r7, #20
 8008cc8:	46bd      	mov	sp, r7
 8008cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cce:	4770      	bx	lr

08008cd0 <TIM_ETR_SetConfig>:
 8008cd0:	b480      	push	{r7}
 8008cd2:	b087      	sub	sp, #28
 8008cd4:	af00      	add	r7, sp, #0
 8008cd6:	60f8      	str	r0, [r7, #12]
 8008cd8:	60b9      	str	r1, [r7, #8]
 8008cda:	607a      	str	r2, [r7, #4]
 8008cdc:	603b      	str	r3, [r7, #0]
 8008cde:	68fb      	ldr	r3, [r7, #12]
 8008ce0:	689b      	ldr	r3, [r3, #8]
 8008ce2:	617b      	str	r3, [r7, #20]
 8008ce4:	697b      	ldr	r3, [r7, #20]
 8008ce6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008cea:	617b      	str	r3, [r7, #20]
 8008cec:	683b      	ldr	r3, [r7, #0]
 8008cee:	021a      	lsls	r2, r3, #8
 8008cf0:	687b      	ldr	r3, [r7, #4]
 8008cf2:	431a      	orrs	r2, r3
 8008cf4:	68bb      	ldr	r3, [r7, #8]
 8008cf6:	4313      	orrs	r3, r2
 8008cf8:	697a      	ldr	r2, [r7, #20]
 8008cfa:	4313      	orrs	r3, r2
 8008cfc:	617b      	str	r3, [r7, #20]
 8008cfe:	68fb      	ldr	r3, [r7, #12]
 8008d00:	697a      	ldr	r2, [r7, #20]
 8008d02:	609a      	str	r2, [r3, #8]
 8008d04:	bf00      	nop
 8008d06:	371c      	adds	r7, #28
 8008d08:	46bd      	mov	sp, r7
 8008d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d0e:	4770      	bx	lr

08008d10 <TIM_CCxChannelCmd>:
 8008d10:	b480      	push	{r7}
 8008d12:	b087      	sub	sp, #28
 8008d14:	af00      	add	r7, sp, #0
 8008d16:	60f8      	str	r0, [r7, #12]
 8008d18:	60b9      	str	r1, [r7, #8]
 8008d1a:	607a      	str	r2, [r7, #4]
 8008d1c:	68bb      	ldr	r3, [r7, #8]
 8008d1e:	f003 031f 	and.w	r3, r3, #31
 8008d22:	2201      	movs	r2, #1
 8008d24:	fa02 f303 	lsl.w	r3, r2, r3
 8008d28:	617b      	str	r3, [r7, #20]
 8008d2a:	68fb      	ldr	r3, [r7, #12]
 8008d2c:	6a1a      	ldr	r2, [r3, #32]
 8008d2e:	697b      	ldr	r3, [r7, #20]
 8008d30:	43db      	mvns	r3, r3
 8008d32:	401a      	ands	r2, r3
 8008d34:	68fb      	ldr	r3, [r7, #12]
 8008d36:	621a      	str	r2, [r3, #32]
 8008d38:	68fb      	ldr	r3, [r7, #12]
 8008d3a:	6a1a      	ldr	r2, [r3, #32]
 8008d3c:	68bb      	ldr	r3, [r7, #8]
 8008d3e:	f003 031f 	and.w	r3, r3, #31
 8008d42:	6879      	ldr	r1, [r7, #4]
 8008d44:	fa01 f303 	lsl.w	r3, r1, r3
 8008d48:	431a      	orrs	r2, r3
 8008d4a:	68fb      	ldr	r3, [r7, #12]
 8008d4c:	621a      	str	r2, [r3, #32]
 8008d4e:	bf00      	nop
 8008d50:	371c      	adds	r7, #28
 8008d52:	46bd      	mov	sp, r7
 8008d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d58:	4770      	bx	lr
	...

08008d5c <HAL_TIMEx_MasterConfigSynchronization>:
 8008d5c:	b480      	push	{r7}
 8008d5e:	b085      	sub	sp, #20
 8008d60:	af00      	add	r7, sp, #0
 8008d62:	6078      	str	r0, [r7, #4]
 8008d64:	6039      	str	r1, [r7, #0]
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008d6c:	2b01      	cmp	r3, #1
 8008d6e:	d101      	bne.n	8008d74 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008d70:	2302      	movs	r3, #2
 8008d72:	e05a      	b.n	8008e2a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	2201      	movs	r2, #1
 8008d78:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	2202      	movs	r2, #2
 8008d80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008d84:	687b      	ldr	r3, [r7, #4]
 8008d86:	681b      	ldr	r3, [r3, #0]
 8008d88:	685b      	ldr	r3, [r3, #4]
 8008d8a:	60fb      	str	r3, [r7, #12]
 8008d8c:	687b      	ldr	r3, [r7, #4]
 8008d8e:	681b      	ldr	r3, [r3, #0]
 8008d90:	689b      	ldr	r3, [r3, #8]
 8008d92:	60bb      	str	r3, [r7, #8]
 8008d94:	68fb      	ldr	r3, [r7, #12]
 8008d96:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008d9a:	60fb      	str	r3, [r7, #12]
 8008d9c:	683b      	ldr	r3, [r7, #0]
 8008d9e:	681b      	ldr	r3, [r3, #0]
 8008da0:	68fa      	ldr	r2, [r7, #12]
 8008da2:	4313      	orrs	r3, r2
 8008da4:	60fb      	str	r3, [r7, #12]
 8008da6:	687b      	ldr	r3, [r7, #4]
 8008da8:	681b      	ldr	r3, [r3, #0]
 8008daa:	68fa      	ldr	r2, [r7, #12]
 8008dac:	605a      	str	r2, [r3, #4]
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	4a21      	ldr	r2, [pc, #132]	; (8008e38 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8008db4:	4293      	cmp	r3, r2
 8008db6:	d022      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	681b      	ldr	r3, [r3, #0]
 8008dbc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008dc0:	d01d      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	4a1d      	ldr	r2, [pc, #116]	; (8008e3c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8008dc8:	4293      	cmp	r3, r2
 8008dca:	d018      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008dcc:	687b      	ldr	r3, [r7, #4]
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	4a1b      	ldr	r2, [pc, #108]	; (8008e40 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8008dd2:	4293      	cmp	r3, r2
 8008dd4:	d013      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	4a1a      	ldr	r2, [pc, #104]	; (8008e44 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8008ddc:	4293      	cmp	r3, r2
 8008dde:	d00e      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	4a18      	ldr	r2, [pc, #96]	; (8008e48 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8008de6:	4293      	cmp	r3, r2
 8008de8:	d009      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008dea:	687b      	ldr	r3, [r7, #4]
 8008dec:	681b      	ldr	r3, [r3, #0]
 8008dee:	4a17      	ldr	r2, [pc, #92]	; (8008e4c <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8008df0:	4293      	cmp	r3, r2
 8008df2:	d004      	beq.n	8008dfe <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8008df4:	687b      	ldr	r3, [r7, #4]
 8008df6:	681b      	ldr	r3, [r3, #0]
 8008df8:	4a15      	ldr	r2, [pc, #84]	; (8008e50 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8008dfa:	4293      	cmp	r3, r2
 8008dfc:	d10c      	bne.n	8008e18 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8008dfe:	68bb      	ldr	r3, [r7, #8]
 8008e00:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008e04:	60bb      	str	r3, [r7, #8]
 8008e06:	683b      	ldr	r3, [r7, #0]
 8008e08:	685b      	ldr	r3, [r3, #4]
 8008e0a:	68ba      	ldr	r2, [r7, #8]
 8008e0c:	4313      	orrs	r3, r2
 8008e0e:	60bb      	str	r3, [r7, #8]
 8008e10:	687b      	ldr	r3, [r7, #4]
 8008e12:	681b      	ldr	r3, [r3, #0]
 8008e14:	68ba      	ldr	r2, [r7, #8]
 8008e16:	609a      	str	r2, [r3, #8]
 8008e18:	687b      	ldr	r3, [r7, #4]
 8008e1a:	2201      	movs	r2, #1
 8008e1c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008e20:	687b      	ldr	r3, [r7, #4]
 8008e22:	2200      	movs	r2, #0
 8008e24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008e28:	2300      	movs	r3, #0
 8008e2a:	4618      	mov	r0, r3
 8008e2c:	3714      	adds	r7, #20
 8008e2e:	46bd      	mov	sp, r7
 8008e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e34:	4770      	bx	lr
 8008e36:	bf00      	nop
 8008e38:	40010000 	.word	0x40010000
 8008e3c:	40000400 	.word	0x40000400
 8008e40:	40000800 	.word	0x40000800
 8008e44:	40000c00 	.word	0x40000c00
 8008e48:	40010400 	.word	0x40010400
 8008e4c:	40014000 	.word	0x40014000
 8008e50:	40001800 	.word	0x40001800

08008e54 <HAL_TIMEx_ConfigBreakDeadTime>:
 8008e54:	b480      	push	{r7}
 8008e56:	b085      	sub	sp, #20
 8008e58:	af00      	add	r7, sp, #0
 8008e5a:	6078      	str	r0, [r7, #4]
 8008e5c:	6039      	str	r1, [r7, #0]
 8008e5e:	2300      	movs	r3, #0
 8008e60:	60fb      	str	r3, [r7, #12]
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008e68:	2b01      	cmp	r3, #1
 8008e6a:	d101      	bne.n	8008e70 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8008e6c:	2302      	movs	r3, #2
 8008e6e:	e03d      	b.n	8008eec <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8008e70:	687b      	ldr	r3, [r7, #4]
 8008e72:	2201      	movs	r2, #1
 8008e74:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008e78:	68fb      	ldr	r3, [r7, #12]
 8008e7a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8008e7e:	683b      	ldr	r3, [r7, #0]
 8008e80:	68db      	ldr	r3, [r3, #12]
 8008e82:	4313      	orrs	r3, r2
 8008e84:	60fb      	str	r3, [r7, #12]
 8008e86:	68fb      	ldr	r3, [r7, #12]
 8008e88:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8008e8c:	683b      	ldr	r3, [r7, #0]
 8008e8e:	689b      	ldr	r3, [r3, #8]
 8008e90:	4313      	orrs	r3, r2
 8008e92:	60fb      	str	r3, [r7, #12]
 8008e94:	68fb      	ldr	r3, [r7, #12]
 8008e96:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8008e9a:	683b      	ldr	r3, [r7, #0]
 8008e9c:	685b      	ldr	r3, [r3, #4]
 8008e9e:	4313      	orrs	r3, r2
 8008ea0:	60fb      	str	r3, [r7, #12]
 8008ea2:	68fb      	ldr	r3, [r7, #12]
 8008ea4:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8008ea8:	683b      	ldr	r3, [r7, #0]
 8008eaa:	681b      	ldr	r3, [r3, #0]
 8008eac:	4313      	orrs	r3, r2
 8008eae:	60fb      	str	r3, [r7, #12]
 8008eb0:	68fb      	ldr	r3, [r7, #12]
 8008eb2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008eb6:	683b      	ldr	r3, [r7, #0]
 8008eb8:	691b      	ldr	r3, [r3, #16]
 8008eba:	4313      	orrs	r3, r2
 8008ebc:	60fb      	str	r3, [r7, #12]
 8008ebe:	68fb      	ldr	r3, [r7, #12]
 8008ec0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8008ec4:	683b      	ldr	r3, [r7, #0]
 8008ec6:	695b      	ldr	r3, [r3, #20]
 8008ec8:	4313      	orrs	r3, r2
 8008eca:	60fb      	str	r3, [r7, #12]
 8008ecc:	68fb      	ldr	r3, [r7, #12]
 8008ece:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8008ed2:	683b      	ldr	r3, [r7, #0]
 8008ed4:	69db      	ldr	r3, [r3, #28]
 8008ed6:	4313      	orrs	r3, r2
 8008ed8:	60fb      	str	r3, [r7, #12]
 8008eda:	687b      	ldr	r3, [r7, #4]
 8008edc:	681b      	ldr	r3, [r3, #0]
 8008ede:	68fa      	ldr	r2, [r7, #12]
 8008ee0:	645a      	str	r2, [r3, #68]	; 0x44
 8008ee2:	687b      	ldr	r3, [r7, #4]
 8008ee4:	2200      	movs	r2, #0
 8008ee6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008eea:	2300      	movs	r3, #0
 8008eec:	4618      	mov	r0, r3
 8008eee:	3714      	adds	r7, #20
 8008ef0:	46bd      	mov	sp, r7
 8008ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ef6:	4770      	bx	lr

08008ef8 <HAL_UART_Init>:
 8008ef8:	b580      	push	{r7, lr}
 8008efa:	b082      	sub	sp, #8
 8008efc:	af00      	add	r7, sp, #0
 8008efe:	6078      	str	r0, [r7, #4]
 8008f00:	687b      	ldr	r3, [r7, #4]
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d101      	bne.n	8008f0a <HAL_UART_Init+0x12>
 8008f06:	2301      	movs	r3, #1
 8008f08:	e03f      	b.n	8008f8a <HAL_UART_Init+0x92>
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008f10:	b2db      	uxtb	r3, r3
 8008f12:	2b00      	cmp	r3, #0
 8008f14:	d106      	bne.n	8008f24 <HAL_UART_Init+0x2c>
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	2200      	movs	r2, #0
 8008f1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008f1e:	6878      	ldr	r0, [r7, #4]
 8008f20:	f7fb fec2 	bl	8004ca8 <HAL_UART_MspInit>
 8008f24:	687b      	ldr	r3, [r7, #4]
 8008f26:	2224      	movs	r2, #36	; 0x24
 8008f28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	681b      	ldr	r3, [r3, #0]
 8008f30:	68da      	ldr	r2, [r3, #12]
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	681b      	ldr	r3, [r3, #0]
 8008f36:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008f3a:	60da      	str	r2, [r3, #12]
 8008f3c:	6878      	ldr	r0, [r7, #4]
 8008f3e:	f000 f929 	bl	8009194 <UART_SetConfig>
 8008f42:	687b      	ldr	r3, [r7, #4]
 8008f44:	681b      	ldr	r3, [r3, #0]
 8008f46:	691a      	ldr	r2, [r3, #16]
 8008f48:	687b      	ldr	r3, [r7, #4]
 8008f4a:	681b      	ldr	r3, [r3, #0]
 8008f4c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8008f50:	611a      	str	r2, [r3, #16]
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	695a      	ldr	r2, [r3, #20]
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8008f60:	615a      	str	r2, [r3, #20]
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	68da      	ldr	r2, [r3, #12]
 8008f68:	687b      	ldr	r3, [r7, #4]
 8008f6a:	681b      	ldr	r3, [r3, #0]
 8008f6c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8008f70:	60da      	str	r2, [r3, #12]
 8008f72:	687b      	ldr	r3, [r7, #4]
 8008f74:	2200      	movs	r2, #0
 8008f76:	641a      	str	r2, [r3, #64]	; 0x40
 8008f78:	687b      	ldr	r3, [r7, #4]
 8008f7a:	2220      	movs	r2, #32
 8008f7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008f80:	687b      	ldr	r3, [r7, #4]
 8008f82:	2220      	movs	r2, #32
 8008f84:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008f88:	2300      	movs	r3, #0
 8008f8a:	4618      	mov	r0, r3
 8008f8c:	3708      	adds	r7, #8
 8008f8e:	46bd      	mov	sp, r7
 8008f90:	bd80      	pop	{r7, pc}

08008f92 <HAL_UART_Transmit>:
 8008f92:	b580      	push	{r7, lr}
 8008f94:	b08a      	sub	sp, #40	; 0x28
 8008f96:	af02      	add	r7, sp, #8
 8008f98:	60f8      	str	r0, [r7, #12]
 8008f9a:	60b9      	str	r1, [r7, #8]
 8008f9c:	603b      	str	r3, [r7, #0]
 8008f9e:	4613      	mov	r3, r2
 8008fa0:	80fb      	strh	r3, [r7, #6]
 8008fa2:	2300      	movs	r3, #0
 8008fa4:	617b      	str	r3, [r7, #20]
 8008fa6:	68fb      	ldr	r3, [r7, #12]
 8008fa8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008fac:	b2db      	uxtb	r3, r3
 8008fae:	2b20      	cmp	r3, #32
 8008fb0:	d17c      	bne.n	80090ac <HAL_UART_Transmit+0x11a>
 8008fb2:	68bb      	ldr	r3, [r7, #8]
 8008fb4:	2b00      	cmp	r3, #0
 8008fb6:	d002      	beq.n	8008fbe <HAL_UART_Transmit+0x2c>
 8008fb8:	88fb      	ldrh	r3, [r7, #6]
 8008fba:	2b00      	cmp	r3, #0
 8008fbc:	d101      	bne.n	8008fc2 <HAL_UART_Transmit+0x30>
 8008fbe:	2301      	movs	r3, #1
 8008fc0:	e075      	b.n	80090ae <HAL_UART_Transmit+0x11c>
 8008fc2:	68fb      	ldr	r3, [r7, #12]
 8008fc4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008fc8:	2b01      	cmp	r3, #1
 8008fca:	d101      	bne.n	8008fd0 <HAL_UART_Transmit+0x3e>
 8008fcc:	2302      	movs	r3, #2
 8008fce:	e06e      	b.n	80090ae <HAL_UART_Transmit+0x11c>
 8008fd0:	68fb      	ldr	r3, [r7, #12]
 8008fd2:	2201      	movs	r2, #1
 8008fd4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008fd8:	68fb      	ldr	r3, [r7, #12]
 8008fda:	2200      	movs	r2, #0
 8008fdc:	641a      	str	r2, [r3, #64]	; 0x40
 8008fde:	68fb      	ldr	r3, [r7, #12]
 8008fe0:	2221      	movs	r2, #33	; 0x21
 8008fe2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008fe6:	f7fc f861 	bl	80050ac <HAL_GetTick>
 8008fea:	6178      	str	r0, [r7, #20]
 8008fec:	68fb      	ldr	r3, [r7, #12]
 8008fee:	88fa      	ldrh	r2, [r7, #6]
 8008ff0:	849a      	strh	r2, [r3, #36]	; 0x24
 8008ff2:	68fb      	ldr	r3, [r7, #12]
 8008ff4:	88fa      	ldrh	r2, [r7, #6]
 8008ff6:	84da      	strh	r2, [r3, #38]	; 0x26
 8008ff8:	68fb      	ldr	r3, [r7, #12]
 8008ffa:	689b      	ldr	r3, [r3, #8]
 8008ffc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009000:	d108      	bne.n	8009014 <HAL_UART_Transmit+0x82>
 8009002:	68fb      	ldr	r3, [r7, #12]
 8009004:	691b      	ldr	r3, [r3, #16]
 8009006:	2b00      	cmp	r3, #0
 8009008:	d104      	bne.n	8009014 <HAL_UART_Transmit+0x82>
 800900a:	2300      	movs	r3, #0
 800900c:	61fb      	str	r3, [r7, #28]
 800900e:	68bb      	ldr	r3, [r7, #8]
 8009010:	61bb      	str	r3, [r7, #24]
 8009012:	e003      	b.n	800901c <HAL_UART_Transmit+0x8a>
 8009014:	68bb      	ldr	r3, [r7, #8]
 8009016:	61fb      	str	r3, [r7, #28]
 8009018:	2300      	movs	r3, #0
 800901a:	61bb      	str	r3, [r7, #24]
 800901c:	68fb      	ldr	r3, [r7, #12]
 800901e:	2200      	movs	r2, #0
 8009020:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009024:	e02a      	b.n	800907c <HAL_UART_Transmit+0xea>
 8009026:	683b      	ldr	r3, [r7, #0]
 8009028:	9300      	str	r3, [sp, #0]
 800902a:	697b      	ldr	r3, [r7, #20]
 800902c:	2200      	movs	r2, #0
 800902e:	2180      	movs	r1, #128	; 0x80
 8009030:	68f8      	ldr	r0, [r7, #12]
 8009032:	f000 f840 	bl	80090b6 <UART_WaitOnFlagUntilTimeout>
 8009036:	4603      	mov	r3, r0
 8009038:	2b00      	cmp	r3, #0
 800903a:	d001      	beq.n	8009040 <HAL_UART_Transmit+0xae>
 800903c:	2303      	movs	r3, #3
 800903e:	e036      	b.n	80090ae <HAL_UART_Transmit+0x11c>
 8009040:	69fb      	ldr	r3, [r7, #28]
 8009042:	2b00      	cmp	r3, #0
 8009044:	d10b      	bne.n	800905e <HAL_UART_Transmit+0xcc>
 8009046:	69bb      	ldr	r3, [r7, #24]
 8009048:	881b      	ldrh	r3, [r3, #0]
 800904a:	461a      	mov	r2, r3
 800904c:	68fb      	ldr	r3, [r7, #12]
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009054:	605a      	str	r2, [r3, #4]
 8009056:	69bb      	ldr	r3, [r7, #24]
 8009058:	3302      	adds	r3, #2
 800905a:	61bb      	str	r3, [r7, #24]
 800905c:	e007      	b.n	800906e <HAL_UART_Transmit+0xdc>
 800905e:	69fb      	ldr	r3, [r7, #28]
 8009060:	781a      	ldrb	r2, [r3, #0]
 8009062:	68fb      	ldr	r3, [r7, #12]
 8009064:	681b      	ldr	r3, [r3, #0]
 8009066:	605a      	str	r2, [r3, #4]
 8009068:	69fb      	ldr	r3, [r7, #28]
 800906a:	3301      	adds	r3, #1
 800906c:	61fb      	str	r3, [r7, #28]
 800906e:	68fb      	ldr	r3, [r7, #12]
 8009070:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009072:	b29b      	uxth	r3, r3
 8009074:	3b01      	subs	r3, #1
 8009076:	b29a      	uxth	r2, r3
 8009078:	68fb      	ldr	r3, [r7, #12]
 800907a:	84da      	strh	r2, [r3, #38]	; 0x26
 800907c:	68fb      	ldr	r3, [r7, #12]
 800907e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009080:	b29b      	uxth	r3, r3
 8009082:	2b00      	cmp	r3, #0
 8009084:	d1cf      	bne.n	8009026 <HAL_UART_Transmit+0x94>
 8009086:	683b      	ldr	r3, [r7, #0]
 8009088:	9300      	str	r3, [sp, #0]
 800908a:	697b      	ldr	r3, [r7, #20]
 800908c:	2200      	movs	r2, #0
 800908e:	2140      	movs	r1, #64	; 0x40
 8009090:	68f8      	ldr	r0, [r7, #12]
 8009092:	f000 f810 	bl	80090b6 <UART_WaitOnFlagUntilTimeout>
 8009096:	4603      	mov	r3, r0
 8009098:	2b00      	cmp	r3, #0
 800909a:	d001      	beq.n	80090a0 <HAL_UART_Transmit+0x10e>
 800909c:	2303      	movs	r3, #3
 800909e:	e006      	b.n	80090ae <HAL_UART_Transmit+0x11c>
 80090a0:	68fb      	ldr	r3, [r7, #12]
 80090a2:	2220      	movs	r2, #32
 80090a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80090a8:	2300      	movs	r3, #0
 80090aa:	e000      	b.n	80090ae <HAL_UART_Transmit+0x11c>
 80090ac:	2302      	movs	r3, #2
 80090ae:	4618      	mov	r0, r3
 80090b0:	3720      	adds	r7, #32
 80090b2:	46bd      	mov	sp, r7
 80090b4:	bd80      	pop	{r7, pc}

080090b6 <UART_WaitOnFlagUntilTimeout>:
 80090b6:	b580      	push	{r7, lr}
 80090b8:	b090      	sub	sp, #64	; 0x40
 80090ba:	af00      	add	r7, sp, #0
 80090bc:	60f8      	str	r0, [r7, #12]
 80090be:	60b9      	str	r1, [r7, #8]
 80090c0:	603b      	str	r3, [r7, #0]
 80090c2:	4613      	mov	r3, r2
 80090c4:	71fb      	strb	r3, [r7, #7]
 80090c6:	e050      	b.n	800916a <UART_WaitOnFlagUntilTimeout+0xb4>
 80090c8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80090ca:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80090ce:	d04c      	beq.n	800916a <UART_WaitOnFlagUntilTimeout+0xb4>
 80090d0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80090d2:	2b00      	cmp	r3, #0
 80090d4:	d007      	beq.n	80090e6 <UART_WaitOnFlagUntilTimeout+0x30>
 80090d6:	f7fb ffe9 	bl	80050ac <HAL_GetTick>
 80090da:	4602      	mov	r2, r0
 80090dc:	683b      	ldr	r3, [r7, #0]
 80090de:	1ad3      	subs	r3, r2, r3
 80090e0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80090e2:	429a      	cmp	r2, r3
 80090e4:	d241      	bcs.n	800916a <UART_WaitOnFlagUntilTimeout+0xb4>
 80090e6:	68fb      	ldr	r3, [r7, #12]
 80090e8:	681b      	ldr	r3, [r3, #0]
 80090ea:	330c      	adds	r3, #12
 80090ec:	62bb      	str	r3, [r7, #40]	; 0x28
 80090ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80090f0:	e853 3f00 	ldrex	r3, [r3]
 80090f4:	627b      	str	r3, [r7, #36]	; 0x24
 80090f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80090f8:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80090fc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80090fe:	68fb      	ldr	r3, [r7, #12]
 8009100:	681b      	ldr	r3, [r3, #0]
 8009102:	330c      	adds	r3, #12
 8009104:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8009106:	637a      	str	r2, [r7, #52]	; 0x34
 8009108:	633b      	str	r3, [r7, #48]	; 0x30
 800910a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800910c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800910e:	e841 2300 	strex	r3, r2, [r1]
 8009112:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009114:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009116:	2b00      	cmp	r3, #0
 8009118:	d1e5      	bne.n	80090e6 <UART_WaitOnFlagUntilTimeout+0x30>
 800911a:	68fb      	ldr	r3, [r7, #12]
 800911c:	681b      	ldr	r3, [r3, #0]
 800911e:	3314      	adds	r3, #20
 8009120:	617b      	str	r3, [r7, #20]
 8009122:	697b      	ldr	r3, [r7, #20]
 8009124:	e853 3f00 	ldrex	r3, [r3]
 8009128:	613b      	str	r3, [r7, #16]
 800912a:	693b      	ldr	r3, [r7, #16]
 800912c:	f023 0301 	bic.w	r3, r3, #1
 8009130:	63bb      	str	r3, [r7, #56]	; 0x38
 8009132:	68fb      	ldr	r3, [r7, #12]
 8009134:	681b      	ldr	r3, [r3, #0]
 8009136:	3314      	adds	r3, #20
 8009138:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800913a:	623a      	str	r2, [r7, #32]
 800913c:	61fb      	str	r3, [r7, #28]
 800913e:	69f9      	ldr	r1, [r7, #28]
 8009140:	6a3a      	ldr	r2, [r7, #32]
 8009142:	e841 2300 	strex	r3, r2, [r1]
 8009146:	61bb      	str	r3, [r7, #24]
 8009148:	69bb      	ldr	r3, [r7, #24]
 800914a:	2b00      	cmp	r3, #0
 800914c:	d1e5      	bne.n	800911a <UART_WaitOnFlagUntilTimeout+0x64>
 800914e:	68fb      	ldr	r3, [r7, #12]
 8009150:	2220      	movs	r2, #32
 8009152:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009156:	68fb      	ldr	r3, [r7, #12]
 8009158:	2220      	movs	r2, #32
 800915a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800915e:	68fb      	ldr	r3, [r7, #12]
 8009160:	2200      	movs	r2, #0
 8009162:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009166:	2303      	movs	r3, #3
 8009168:	e00f      	b.n	800918a <UART_WaitOnFlagUntilTimeout+0xd4>
 800916a:	68fb      	ldr	r3, [r7, #12]
 800916c:	681b      	ldr	r3, [r3, #0]
 800916e:	681a      	ldr	r2, [r3, #0]
 8009170:	68bb      	ldr	r3, [r7, #8]
 8009172:	4013      	ands	r3, r2
 8009174:	68ba      	ldr	r2, [r7, #8]
 8009176:	429a      	cmp	r2, r3
 8009178:	bf0c      	ite	eq
 800917a:	2301      	moveq	r3, #1
 800917c:	2300      	movne	r3, #0
 800917e:	b2db      	uxtb	r3, r3
 8009180:	461a      	mov	r2, r3
 8009182:	79fb      	ldrb	r3, [r7, #7]
 8009184:	429a      	cmp	r2, r3
 8009186:	d09f      	beq.n	80090c8 <UART_WaitOnFlagUntilTimeout+0x12>
 8009188:	2300      	movs	r3, #0
 800918a:	4618      	mov	r0, r3
 800918c:	3740      	adds	r7, #64	; 0x40
 800918e:	46bd      	mov	sp, r7
 8009190:	bd80      	pop	{r7, pc}
	...

08009194 <UART_SetConfig>:
 8009194:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009198:	b0c0      	sub	sp, #256	; 0x100
 800919a:	af00      	add	r7, sp, #0
 800919c:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 80091a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091a4:	681b      	ldr	r3, [r3, #0]
 80091a6:	691b      	ldr	r3, [r3, #16]
 80091a8:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80091ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091b0:	68d9      	ldr	r1, [r3, #12]
 80091b2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091b6:	681a      	ldr	r2, [r3, #0]
 80091b8:	ea40 0301 	orr.w	r3, r0, r1
 80091bc:	6113      	str	r3, [r2, #16]
 80091be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091c2:	689a      	ldr	r2, [r3, #8]
 80091c4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091c8:	691b      	ldr	r3, [r3, #16]
 80091ca:	431a      	orrs	r2, r3
 80091cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091d0:	695b      	ldr	r3, [r3, #20]
 80091d2:	431a      	orrs	r2, r3
 80091d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091d8:	69db      	ldr	r3, [r3, #28]
 80091da:	4313      	orrs	r3, r2
 80091dc:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80091e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091e4:	681b      	ldr	r3, [r3, #0]
 80091e6:	68db      	ldr	r3, [r3, #12]
 80091e8:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 80091ec:	f021 010c 	bic.w	r1, r1, #12
 80091f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80091f4:	681a      	ldr	r2, [r3, #0]
 80091f6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80091fa:	430b      	orrs	r3, r1
 80091fc:	60d3      	str	r3, [r2, #12]
 80091fe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009202:	681b      	ldr	r3, [r3, #0]
 8009204:	695b      	ldr	r3, [r3, #20]
 8009206:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800920a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800920e:	6999      	ldr	r1, [r3, #24]
 8009210:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009214:	681a      	ldr	r2, [r3, #0]
 8009216:	ea40 0301 	orr.w	r3, r0, r1
 800921a:	6153      	str	r3, [r2, #20]
 800921c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009220:	681a      	ldr	r2, [r3, #0]
 8009222:	4b8f      	ldr	r3, [pc, #572]	; (8009460 <UART_SetConfig+0x2cc>)
 8009224:	429a      	cmp	r2, r3
 8009226:	d005      	beq.n	8009234 <UART_SetConfig+0xa0>
 8009228:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800922c:	681a      	ldr	r2, [r3, #0]
 800922e:	4b8d      	ldr	r3, [pc, #564]	; (8009464 <UART_SetConfig+0x2d0>)
 8009230:	429a      	cmp	r2, r3
 8009232:	d104      	bne.n	800923e <UART_SetConfig+0xaa>
 8009234:	f7fd fc94 	bl	8006b60 <HAL_RCC_GetPCLK2Freq>
 8009238:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800923c:	e003      	b.n	8009246 <UART_SetConfig+0xb2>
 800923e:	f7fd fc7b 	bl	8006b38 <HAL_RCC_GetPCLK1Freq>
 8009242:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8009246:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800924a:	69db      	ldr	r3, [r3, #28]
 800924c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009250:	f040 810c 	bne.w	800946c <UART_SetConfig+0x2d8>
 8009254:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8009258:	2200      	movs	r2, #0
 800925a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800925e:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8009262:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8009266:	4622      	mov	r2, r4
 8009268:	462b      	mov	r3, r5
 800926a:	1891      	adds	r1, r2, r2
 800926c:	65b9      	str	r1, [r7, #88]	; 0x58
 800926e:	415b      	adcs	r3, r3
 8009270:	65fb      	str	r3, [r7, #92]	; 0x5c
 8009272:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009276:	4621      	mov	r1, r4
 8009278:	eb12 0801 	adds.w	r8, r2, r1
 800927c:	4629      	mov	r1, r5
 800927e:	eb43 0901 	adc.w	r9, r3, r1
 8009282:	f04f 0200 	mov.w	r2, #0
 8009286:	f04f 0300 	mov.w	r3, #0
 800928a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800928e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8009292:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8009296:	4690      	mov	r8, r2
 8009298:	4699      	mov	r9, r3
 800929a:	4623      	mov	r3, r4
 800929c:	eb18 0303 	adds.w	r3, r8, r3
 80092a0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80092a4:	462b      	mov	r3, r5
 80092a6:	eb49 0303 	adc.w	r3, r9, r3
 80092aa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80092ae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80092b2:	685b      	ldr	r3, [r3, #4]
 80092b4:	2200      	movs	r2, #0
 80092b6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80092ba:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 80092be:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 80092c2:	460b      	mov	r3, r1
 80092c4:	18db      	adds	r3, r3, r3
 80092c6:	653b      	str	r3, [r7, #80]	; 0x50
 80092c8:	4613      	mov	r3, r2
 80092ca:	eb42 0303 	adc.w	r3, r2, r3
 80092ce:	657b      	str	r3, [r7, #84]	; 0x54
 80092d0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80092d4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80092d8:	f7f7 fcf6 	bl	8000cc8 <__aeabi_uldivmod>
 80092dc:	4602      	mov	r2, r0
 80092de:	460b      	mov	r3, r1
 80092e0:	4b61      	ldr	r3, [pc, #388]	; (8009468 <UART_SetConfig+0x2d4>)
 80092e2:	fba3 2302 	umull	r2, r3, r3, r2
 80092e6:	095b      	lsrs	r3, r3, #5
 80092e8:	011c      	lsls	r4, r3, #4
 80092ea:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80092ee:	2200      	movs	r2, #0
 80092f0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80092f4:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80092f8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 80092fc:	4642      	mov	r2, r8
 80092fe:	464b      	mov	r3, r9
 8009300:	1891      	adds	r1, r2, r2
 8009302:	64b9      	str	r1, [r7, #72]	; 0x48
 8009304:	415b      	adcs	r3, r3
 8009306:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009308:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800930c:	4641      	mov	r1, r8
 800930e:	eb12 0a01 	adds.w	sl, r2, r1
 8009312:	4649      	mov	r1, r9
 8009314:	eb43 0b01 	adc.w	fp, r3, r1
 8009318:	f04f 0200 	mov.w	r2, #0
 800931c:	f04f 0300 	mov.w	r3, #0
 8009320:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8009324:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8009328:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800932c:	4692      	mov	sl, r2
 800932e:	469b      	mov	fp, r3
 8009330:	4643      	mov	r3, r8
 8009332:	eb1a 0303 	adds.w	r3, sl, r3
 8009336:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800933a:	464b      	mov	r3, r9
 800933c:	eb4b 0303 	adc.w	r3, fp, r3
 8009340:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8009344:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009348:	685b      	ldr	r3, [r3, #4]
 800934a:	2200      	movs	r2, #0
 800934c:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8009350:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8009354:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8009358:	460b      	mov	r3, r1
 800935a:	18db      	adds	r3, r3, r3
 800935c:	643b      	str	r3, [r7, #64]	; 0x40
 800935e:	4613      	mov	r3, r2
 8009360:	eb42 0303 	adc.w	r3, r2, r3
 8009364:	647b      	str	r3, [r7, #68]	; 0x44
 8009366:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800936a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800936e:	f7f7 fcab 	bl	8000cc8 <__aeabi_uldivmod>
 8009372:	4602      	mov	r2, r0
 8009374:	460b      	mov	r3, r1
 8009376:	4611      	mov	r1, r2
 8009378:	4b3b      	ldr	r3, [pc, #236]	; (8009468 <UART_SetConfig+0x2d4>)
 800937a:	fba3 2301 	umull	r2, r3, r3, r1
 800937e:	095b      	lsrs	r3, r3, #5
 8009380:	2264      	movs	r2, #100	; 0x64
 8009382:	fb02 f303 	mul.w	r3, r2, r3
 8009386:	1acb      	subs	r3, r1, r3
 8009388:	00db      	lsls	r3, r3, #3
 800938a:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800938e:	4b36      	ldr	r3, [pc, #216]	; (8009468 <UART_SetConfig+0x2d4>)
 8009390:	fba3 2302 	umull	r2, r3, r3, r2
 8009394:	095b      	lsrs	r3, r3, #5
 8009396:	005b      	lsls	r3, r3, #1
 8009398:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800939c:	441c      	add	r4, r3
 800939e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80093a2:	2200      	movs	r2, #0
 80093a4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80093a8:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 80093ac:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 80093b0:	4642      	mov	r2, r8
 80093b2:	464b      	mov	r3, r9
 80093b4:	1891      	adds	r1, r2, r2
 80093b6:	63b9      	str	r1, [r7, #56]	; 0x38
 80093b8:	415b      	adcs	r3, r3
 80093ba:	63fb      	str	r3, [r7, #60]	; 0x3c
 80093bc:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 80093c0:	4641      	mov	r1, r8
 80093c2:	1851      	adds	r1, r2, r1
 80093c4:	6339      	str	r1, [r7, #48]	; 0x30
 80093c6:	4649      	mov	r1, r9
 80093c8:	414b      	adcs	r3, r1
 80093ca:	637b      	str	r3, [r7, #52]	; 0x34
 80093cc:	f04f 0200 	mov.w	r2, #0
 80093d0:	f04f 0300 	mov.w	r3, #0
 80093d4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 80093d8:	4659      	mov	r1, fp
 80093da:	00cb      	lsls	r3, r1, #3
 80093dc:	4651      	mov	r1, sl
 80093de:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80093e2:	4651      	mov	r1, sl
 80093e4:	00ca      	lsls	r2, r1, #3
 80093e6:	4610      	mov	r0, r2
 80093e8:	4619      	mov	r1, r3
 80093ea:	4603      	mov	r3, r0
 80093ec:	4642      	mov	r2, r8
 80093ee:	189b      	adds	r3, r3, r2
 80093f0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80093f4:	464b      	mov	r3, r9
 80093f6:	460a      	mov	r2, r1
 80093f8:	eb42 0303 	adc.w	r3, r2, r3
 80093fc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009400:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009404:	685b      	ldr	r3, [r3, #4]
 8009406:	2200      	movs	r2, #0
 8009408:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800940c:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8009410:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8009414:	460b      	mov	r3, r1
 8009416:	18db      	adds	r3, r3, r3
 8009418:	62bb      	str	r3, [r7, #40]	; 0x28
 800941a:	4613      	mov	r3, r2
 800941c:	eb42 0303 	adc.w	r3, r2, r3
 8009420:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009422:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8009426:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800942a:	f7f7 fc4d 	bl	8000cc8 <__aeabi_uldivmod>
 800942e:	4602      	mov	r2, r0
 8009430:	460b      	mov	r3, r1
 8009432:	4b0d      	ldr	r3, [pc, #52]	; (8009468 <UART_SetConfig+0x2d4>)
 8009434:	fba3 1302 	umull	r1, r3, r3, r2
 8009438:	095b      	lsrs	r3, r3, #5
 800943a:	2164      	movs	r1, #100	; 0x64
 800943c:	fb01 f303 	mul.w	r3, r1, r3
 8009440:	1ad3      	subs	r3, r2, r3
 8009442:	00db      	lsls	r3, r3, #3
 8009444:	3332      	adds	r3, #50	; 0x32
 8009446:	4a08      	ldr	r2, [pc, #32]	; (8009468 <UART_SetConfig+0x2d4>)
 8009448:	fba2 2303 	umull	r2, r3, r2, r3
 800944c:	095b      	lsrs	r3, r3, #5
 800944e:	f003 0207 	and.w	r2, r3, #7
 8009452:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009456:	681b      	ldr	r3, [r3, #0]
 8009458:	4422      	add	r2, r4
 800945a:	609a      	str	r2, [r3, #8]
 800945c:	e105      	b.n	800966a <UART_SetConfig+0x4d6>
 800945e:	bf00      	nop
 8009460:	40011000 	.word	0x40011000
 8009464:	40011400 	.word	0x40011400
 8009468:	51eb851f 	.word	0x51eb851f
 800946c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8009470:	2200      	movs	r2, #0
 8009472:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8009476:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800947a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800947e:	4642      	mov	r2, r8
 8009480:	464b      	mov	r3, r9
 8009482:	1891      	adds	r1, r2, r2
 8009484:	6239      	str	r1, [r7, #32]
 8009486:	415b      	adcs	r3, r3
 8009488:	627b      	str	r3, [r7, #36]	; 0x24
 800948a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800948e:	4641      	mov	r1, r8
 8009490:	1854      	adds	r4, r2, r1
 8009492:	4649      	mov	r1, r9
 8009494:	eb43 0501 	adc.w	r5, r3, r1
 8009498:	f04f 0200 	mov.w	r2, #0
 800949c:	f04f 0300 	mov.w	r3, #0
 80094a0:	00eb      	lsls	r3, r5, #3
 80094a2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80094a6:	00e2      	lsls	r2, r4, #3
 80094a8:	4614      	mov	r4, r2
 80094aa:	461d      	mov	r5, r3
 80094ac:	4643      	mov	r3, r8
 80094ae:	18e3      	adds	r3, r4, r3
 80094b0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80094b4:	464b      	mov	r3, r9
 80094b6:	eb45 0303 	adc.w	r3, r5, r3
 80094ba:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80094be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80094c2:	685b      	ldr	r3, [r3, #4]
 80094c4:	2200      	movs	r2, #0
 80094c6:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80094ca:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80094ce:	f04f 0200 	mov.w	r2, #0
 80094d2:	f04f 0300 	mov.w	r3, #0
 80094d6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80094da:	4629      	mov	r1, r5
 80094dc:	008b      	lsls	r3, r1, #2
 80094de:	4621      	mov	r1, r4
 80094e0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80094e4:	4621      	mov	r1, r4
 80094e6:	008a      	lsls	r2, r1, #2
 80094e8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 80094ec:	f7f7 fbec 	bl	8000cc8 <__aeabi_uldivmod>
 80094f0:	4602      	mov	r2, r0
 80094f2:	460b      	mov	r3, r1
 80094f4:	4b60      	ldr	r3, [pc, #384]	; (8009678 <UART_SetConfig+0x4e4>)
 80094f6:	fba3 2302 	umull	r2, r3, r3, r2
 80094fa:	095b      	lsrs	r3, r3, #5
 80094fc:	011c      	lsls	r4, r3, #4
 80094fe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8009502:	2200      	movs	r2, #0
 8009504:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8009508:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800950c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8009510:	4642      	mov	r2, r8
 8009512:	464b      	mov	r3, r9
 8009514:	1891      	adds	r1, r2, r2
 8009516:	61b9      	str	r1, [r7, #24]
 8009518:	415b      	adcs	r3, r3
 800951a:	61fb      	str	r3, [r7, #28]
 800951c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8009520:	4641      	mov	r1, r8
 8009522:	1851      	adds	r1, r2, r1
 8009524:	6139      	str	r1, [r7, #16]
 8009526:	4649      	mov	r1, r9
 8009528:	414b      	adcs	r3, r1
 800952a:	617b      	str	r3, [r7, #20]
 800952c:	f04f 0200 	mov.w	r2, #0
 8009530:	f04f 0300 	mov.w	r3, #0
 8009534:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8009538:	4659      	mov	r1, fp
 800953a:	00cb      	lsls	r3, r1, #3
 800953c:	4651      	mov	r1, sl
 800953e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8009542:	4651      	mov	r1, sl
 8009544:	00ca      	lsls	r2, r1, #3
 8009546:	4610      	mov	r0, r2
 8009548:	4619      	mov	r1, r3
 800954a:	4603      	mov	r3, r0
 800954c:	4642      	mov	r2, r8
 800954e:	189b      	adds	r3, r3, r2
 8009550:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8009554:	464b      	mov	r3, r9
 8009556:	460a      	mov	r2, r1
 8009558:	eb42 0303 	adc.w	r3, r2, r3
 800955c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8009560:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009564:	685b      	ldr	r3, [r3, #4]
 8009566:	2200      	movs	r2, #0
 8009568:	67bb      	str	r3, [r7, #120]	; 0x78
 800956a:	67fa      	str	r2, [r7, #124]	; 0x7c
 800956c:	f04f 0200 	mov.w	r2, #0
 8009570:	f04f 0300 	mov.w	r3, #0
 8009574:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8009578:	4649      	mov	r1, r9
 800957a:	008b      	lsls	r3, r1, #2
 800957c:	4641      	mov	r1, r8
 800957e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8009582:	4641      	mov	r1, r8
 8009584:	008a      	lsls	r2, r1, #2
 8009586:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800958a:	f7f7 fb9d 	bl	8000cc8 <__aeabi_uldivmod>
 800958e:	4602      	mov	r2, r0
 8009590:	460b      	mov	r3, r1
 8009592:	4b39      	ldr	r3, [pc, #228]	; (8009678 <UART_SetConfig+0x4e4>)
 8009594:	fba3 1302 	umull	r1, r3, r3, r2
 8009598:	095b      	lsrs	r3, r3, #5
 800959a:	2164      	movs	r1, #100	; 0x64
 800959c:	fb01 f303 	mul.w	r3, r1, r3
 80095a0:	1ad3      	subs	r3, r2, r3
 80095a2:	011b      	lsls	r3, r3, #4
 80095a4:	3332      	adds	r3, #50	; 0x32
 80095a6:	4a34      	ldr	r2, [pc, #208]	; (8009678 <UART_SetConfig+0x4e4>)
 80095a8:	fba2 2303 	umull	r2, r3, r2, r3
 80095ac:	095b      	lsrs	r3, r3, #5
 80095ae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80095b2:	441c      	add	r4, r3
 80095b4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80095b8:	2200      	movs	r2, #0
 80095ba:	673b      	str	r3, [r7, #112]	; 0x70
 80095bc:	677a      	str	r2, [r7, #116]	; 0x74
 80095be:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 80095c2:	4642      	mov	r2, r8
 80095c4:	464b      	mov	r3, r9
 80095c6:	1891      	adds	r1, r2, r2
 80095c8:	60b9      	str	r1, [r7, #8]
 80095ca:	415b      	adcs	r3, r3
 80095cc:	60fb      	str	r3, [r7, #12]
 80095ce:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80095d2:	4641      	mov	r1, r8
 80095d4:	1851      	adds	r1, r2, r1
 80095d6:	6039      	str	r1, [r7, #0]
 80095d8:	4649      	mov	r1, r9
 80095da:	414b      	adcs	r3, r1
 80095dc:	607b      	str	r3, [r7, #4]
 80095de:	f04f 0200 	mov.w	r2, #0
 80095e2:	f04f 0300 	mov.w	r3, #0
 80095e6:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80095ea:	4659      	mov	r1, fp
 80095ec:	00cb      	lsls	r3, r1, #3
 80095ee:	4651      	mov	r1, sl
 80095f0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80095f4:	4651      	mov	r1, sl
 80095f6:	00ca      	lsls	r2, r1, #3
 80095f8:	4610      	mov	r0, r2
 80095fa:	4619      	mov	r1, r3
 80095fc:	4603      	mov	r3, r0
 80095fe:	4642      	mov	r2, r8
 8009600:	189b      	adds	r3, r3, r2
 8009602:	66bb      	str	r3, [r7, #104]	; 0x68
 8009604:	464b      	mov	r3, r9
 8009606:	460a      	mov	r2, r1
 8009608:	eb42 0303 	adc.w	r3, r2, r3
 800960c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800960e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009612:	685b      	ldr	r3, [r3, #4]
 8009614:	2200      	movs	r2, #0
 8009616:	663b      	str	r3, [r7, #96]	; 0x60
 8009618:	667a      	str	r2, [r7, #100]	; 0x64
 800961a:	f04f 0200 	mov.w	r2, #0
 800961e:	f04f 0300 	mov.w	r3, #0
 8009622:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8009626:	4649      	mov	r1, r9
 8009628:	008b      	lsls	r3, r1, #2
 800962a:	4641      	mov	r1, r8
 800962c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8009630:	4641      	mov	r1, r8
 8009632:	008a      	lsls	r2, r1, #2
 8009634:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8009638:	f7f7 fb46 	bl	8000cc8 <__aeabi_uldivmod>
 800963c:	4602      	mov	r2, r0
 800963e:	460b      	mov	r3, r1
 8009640:	4b0d      	ldr	r3, [pc, #52]	; (8009678 <UART_SetConfig+0x4e4>)
 8009642:	fba3 1302 	umull	r1, r3, r3, r2
 8009646:	095b      	lsrs	r3, r3, #5
 8009648:	2164      	movs	r1, #100	; 0x64
 800964a:	fb01 f303 	mul.w	r3, r1, r3
 800964e:	1ad3      	subs	r3, r2, r3
 8009650:	011b      	lsls	r3, r3, #4
 8009652:	3332      	adds	r3, #50	; 0x32
 8009654:	4a08      	ldr	r2, [pc, #32]	; (8009678 <UART_SetConfig+0x4e4>)
 8009656:	fba2 2303 	umull	r2, r3, r2, r3
 800965a:	095b      	lsrs	r3, r3, #5
 800965c:	f003 020f 	and.w	r2, r3, #15
 8009660:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009664:	681b      	ldr	r3, [r3, #0]
 8009666:	4422      	add	r2, r4
 8009668:	609a      	str	r2, [r3, #8]
 800966a:	bf00      	nop
 800966c:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8009670:	46bd      	mov	sp, r7
 8009672:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009676:	bf00      	nop
 8009678:	51eb851f 	.word	0x51eb851f

0800967c <__errno>:
 800967c:	4b01      	ldr	r3, [pc, #4]	; (8009684 <__errno+0x8>)
 800967e:	6818      	ldr	r0, [r3, #0]
 8009680:	4770      	bx	lr
 8009682:	bf00      	nop
 8009684:	200023fc 	.word	0x200023fc

08009688 <__libc_init_array>:
 8009688:	b570      	push	{r4, r5, r6, lr}
 800968a:	4d0d      	ldr	r5, [pc, #52]	; (80096c0 <__libc_init_array+0x38>)
 800968c:	4c0d      	ldr	r4, [pc, #52]	; (80096c4 <__libc_init_array+0x3c>)
 800968e:	1b64      	subs	r4, r4, r5
 8009690:	10a4      	asrs	r4, r4, #2
 8009692:	2600      	movs	r6, #0
 8009694:	42a6      	cmp	r6, r4
 8009696:	d109      	bne.n	80096ac <__libc_init_array+0x24>
 8009698:	4d0b      	ldr	r5, [pc, #44]	; (80096c8 <__libc_init_array+0x40>)
 800969a:	4c0c      	ldr	r4, [pc, #48]	; (80096cc <__libc_init_array+0x44>)
 800969c:	f002 ff62 	bl	800c564 <_init>
 80096a0:	1b64      	subs	r4, r4, r5
 80096a2:	10a4      	asrs	r4, r4, #2
 80096a4:	2600      	movs	r6, #0
 80096a6:	42a6      	cmp	r6, r4
 80096a8:	d105      	bne.n	80096b6 <__libc_init_array+0x2e>
 80096aa:	bd70      	pop	{r4, r5, r6, pc}
 80096ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80096b0:	4798      	blx	r3
 80096b2:	3601      	adds	r6, #1
 80096b4:	e7ee      	b.n	8009694 <__libc_init_array+0xc>
 80096b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80096ba:	4798      	blx	r3
 80096bc:	3601      	adds	r6, #1
 80096be:	e7f2      	b.n	80096a6 <__libc_init_array+0x1e>
 80096c0:	0800ce2c 	.word	0x0800ce2c
 80096c4:	0800ce2c 	.word	0x0800ce2c
 80096c8:	0800ce2c 	.word	0x0800ce2c
 80096cc:	0800ce30 	.word	0x0800ce30

080096d0 <malloc>:
 80096d0:	4b02      	ldr	r3, [pc, #8]	; (80096dc <malloc+0xc>)
 80096d2:	4601      	mov	r1, r0
 80096d4:	6818      	ldr	r0, [r3, #0]
 80096d6:	f000 b87f 	b.w	80097d8 <_malloc_r>
 80096da:	bf00      	nop
 80096dc:	200023fc 	.word	0x200023fc

080096e0 <free>:
 80096e0:	4b02      	ldr	r3, [pc, #8]	; (80096ec <free+0xc>)
 80096e2:	4601      	mov	r1, r0
 80096e4:	6818      	ldr	r0, [r3, #0]
 80096e6:	f000 b80b 	b.w	8009700 <_free_r>
 80096ea:	bf00      	nop
 80096ec:	200023fc 	.word	0x200023fc

080096f0 <memset>:
 80096f0:	4402      	add	r2, r0
 80096f2:	4603      	mov	r3, r0
 80096f4:	4293      	cmp	r3, r2
 80096f6:	d100      	bne.n	80096fa <memset+0xa>
 80096f8:	4770      	bx	lr
 80096fa:	f803 1b01 	strb.w	r1, [r3], #1
 80096fe:	e7f9      	b.n	80096f4 <memset+0x4>

08009700 <_free_r>:
 8009700:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009702:	2900      	cmp	r1, #0
 8009704:	d044      	beq.n	8009790 <_free_r+0x90>
 8009706:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800970a:	9001      	str	r0, [sp, #4]
 800970c:	2b00      	cmp	r3, #0
 800970e:	f1a1 0404 	sub.w	r4, r1, #4
 8009712:	bfb8      	it	lt
 8009714:	18e4      	addlt	r4, r4, r3
 8009716:	f001 fc0b 	bl	800af30 <__malloc_lock>
 800971a:	4a1e      	ldr	r2, [pc, #120]	; (8009794 <_free_r+0x94>)
 800971c:	9801      	ldr	r0, [sp, #4]
 800971e:	6813      	ldr	r3, [r2, #0]
 8009720:	b933      	cbnz	r3, 8009730 <_free_r+0x30>
 8009722:	6063      	str	r3, [r4, #4]
 8009724:	6014      	str	r4, [r2, #0]
 8009726:	b003      	add	sp, #12
 8009728:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800972c:	f001 bc06 	b.w	800af3c <__malloc_unlock>
 8009730:	42a3      	cmp	r3, r4
 8009732:	d908      	bls.n	8009746 <_free_r+0x46>
 8009734:	6825      	ldr	r5, [r4, #0]
 8009736:	1961      	adds	r1, r4, r5
 8009738:	428b      	cmp	r3, r1
 800973a:	bf01      	itttt	eq
 800973c:	6819      	ldreq	r1, [r3, #0]
 800973e:	685b      	ldreq	r3, [r3, #4]
 8009740:	1949      	addeq	r1, r1, r5
 8009742:	6021      	streq	r1, [r4, #0]
 8009744:	e7ed      	b.n	8009722 <_free_r+0x22>
 8009746:	461a      	mov	r2, r3
 8009748:	685b      	ldr	r3, [r3, #4]
 800974a:	b10b      	cbz	r3, 8009750 <_free_r+0x50>
 800974c:	42a3      	cmp	r3, r4
 800974e:	d9fa      	bls.n	8009746 <_free_r+0x46>
 8009750:	6811      	ldr	r1, [r2, #0]
 8009752:	1855      	adds	r5, r2, r1
 8009754:	42a5      	cmp	r5, r4
 8009756:	d10b      	bne.n	8009770 <_free_r+0x70>
 8009758:	6824      	ldr	r4, [r4, #0]
 800975a:	4421      	add	r1, r4
 800975c:	1854      	adds	r4, r2, r1
 800975e:	42a3      	cmp	r3, r4
 8009760:	6011      	str	r1, [r2, #0]
 8009762:	d1e0      	bne.n	8009726 <_free_r+0x26>
 8009764:	681c      	ldr	r4, [r3, #0]
 8009766:	685b      	ldr	r3, [r3, #4]
 8009768:	6053      	str	r3, [r2, #4]
 800976a:	4421      	add	r1, r4
 800976c:	6011      	str	r1, [r2, #0]
 800976e:	e7da      	b.n	8009726 <_free_r+0x26>
 8009770:	d902      	bls.n	8009778 <_free_r+0x78>
 8009772:	230c      	movs	r3, #12
 8009774:	6003      	str	r3, [r0, #0]
 8009776:	e7d6      	b.n	8009726 <_free_r+0x26>
 8009778:	6825      	ldr	r5, [r4, #0]
 800977a:	1961      	adds	r1, r4, r5
 800977c:	428b      	cmp	r3, r1
 800977e:	bf04      	itt	eq
 8009780:	6819      	ldreq	r1, [r3, #0]
 8009782:	685b      	ldreq	r3, [r3, #4]
 8009784:	6063      	str	r3, [r4, #4]
 8009786:	bf04      	itt	eq
 8009788:	1949      	addeq	r1, r1, r5
 800978a:	6021      	streq	r1, [r4, #0]
 800978c:	6054      	str	r4, [r2, #4]
 800978e:	e7ca      	b.n	8009726 <_free_r+0x26>
 8009790:	b003      	add	sp, #12
 8009792:	bd30      	pop	{r4, r5, pc}
 8009794:	20003270 	.word	0x20003270

08009798 <sbrk_aligned>:
 8009798:	b570      	push	{r4, r5, r6, lr}
 800979a:	4e0e      	ldr	r6, [pc, #56]	; (80097d4 <sbrk_aligned+0x3c>)
 800979c:	460c      	mov	r4, r1
 800979e:	6831      	ldr	r1, [r6, #0]
 80097a0:	4605      	mov	r5, r0
 80097a2:	b911      	cbnz	r1, 80097aa <sbrk_aligned+0x12>
 80097a4:	f000 fcf6 	bl	800a194 <_sbrk_r>
 80097a8:	6030      	str	r0, [r6, #0]
 80097aa:	4621      	mov	r1, r4
 80097ac:	4628      	mov	r0, r5
 80097ae:	f000 fcf1 	bl	800a194 <_sbrk_r>
 80097b2:	1c43      	adds	r3, r0, #1
 80097b4:	d00a      	beq.n	80097cc <sbrk_aligned+0x34>
 80097b6:	1cc4      	adds	r4, r0, #3
 80097b8:	f024 0403 	bic.w	r4, r4, #3
 80097bc:	42a0      	cmp	r0, r4
 80097be:	d007      	beq.n	80097d0 <sbrk_aligned+0x38>
 80097c0:	1a21      	subs	r1, r4, r0
 80097c2:	4628      	mov	r0, r5
 80097c4:	f000 fce6 	bl	800a194 <_sbrk_r>
 80097c8:	3001      	adds	r0, #1
 80097ca:	d101      	bne.n	80097d0 <sbrk_aligned+0x38>
 80097cc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80097d0:	4620      	mov	r0, r4
 80097d2:	bd70      	pop	{r4, r5, r6, pc}
 80097d4:	20003274 	.word	0x20003274

080097d8 <_malloc_r>:
 80097d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097dc:	1ccd      	adds	r5, r1, #3
 80097de:	f025 0503 	bic.w	r5, r5, #3
 80097e2:	3508      	adds	r5, #8
 80097e4:	2d0c      	cmp	r5, #12
 80097e6:	bf38      	it	cc
 80097e8:	250c      	movcc	r5, #12
 80097ea:	2d00      	cmp	r5, #0
 80097ec:	4607      	mov	r7, r0
 80097ee:	db01      	blt.n	80097f4 <_malloc_r+0x1c>
 80097f0:	42a9      	cmp	r1, r5
 80097f2:	d905      	bls.n	8009800 <_malloc_r+0x28>
 80097f4:	230c      	movs	r3, #12
 80097f6:	603b      	str	r3, [r7, #0]
 80097f8:	2600      	movs	r6, #0
 80097fa:	4630      	mov	r0, r6
 80097fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009800:	4e2e      	ldr	r6, [pc, #184]	; (80098bc <_malloc_r+0xe4>)
 8009802:	f001 fb95 	bl	800af30 <__malloc_lock>
 8009806:	6833      	ldr	r3, [r6, #0]
 8009808:	461c      	mov	r4, r3
 800980a:	bb34      	cbnz	r4, 800985a <_malloc_r+0x82>
 800980c:	4629      	mov	r1, r5
 800980e:	4638      	mov	r0, r7
 8009810:	f7ff ffc2 	bl	8009798 <sbrk_aligned>
 8009814:	1c43      	adds	r3, r0, #1
 8009816:	4604      	mov	r4, r0
 8009818:	d14d      	bne.n	80098b6 <_malloc_r+0xde>
 800981a:	6834      	ldr	r4, [r6, #0]
 800981c:	4626      	mov	r6, r4
 800981e:	2e00      	cmp	r6, #0
 8009820:	d140      	bne.n	80098a4 <_malloc_r+0xcc>
 8009822:	6823      	ldr	r3, [r4, #0]
 8009824:	4631      	mov	r1, r6
 8009826:	4638      	mov	r0, r7
 8009828:	eb04 0803 	add.w	r8, r4, r3
 800982c:	f000 fcb2 	bl	800a194 <_sbrk_r>
 8009830:	4580      	cmp	r8, r0
 8009832:	d13a      	bne.n	80098aa <_malloc_r+0xd2>
 8009834:	6821      	ldr	r1, [r4, #0]
 8009836:	3503      	adds	r5, #3
 8009838:	1a6d      	subs	r5, r5, r1
 800983a:	f025 0503 	bic.w	r5, r5, #3
 800983e:	3508      	adds	r5, #8
 8009840:	2d0c      	cmp	r5, #12
 8009842:	bf38      	it	cc
 8009844:	250c      	movcc	r5, #12
 8009846:	4629      	mov	r1, r5
 8009848:	4638      	mov	r0, r7
 800984a:	f7ff ffa5 	bl	8009798 <sbrk_aligned>
 800984e:	3001      	adds	r0, #1
 8009850:	d02b      	beq.n	80098aa <_malloc_r+0xd2>
 8009852:	6823      	ldr	r3, [r4, #0]
 8009854:	442b      	add	r3, r5
 8009856:	6023      	str	r3, [r4, #0]
 8009858:	e00e      	b.n	8009878 <_malloc_r+0xa0>
 800985a:	6822      	ldr	r2, [r4, #0]
 800985c:	1b52      	subs	r2, r2, r5
 800985e:	d41e      	bmi.n	800989e <_malloc_r+0xc6>
 8009860:	2a0b      	cmp	r2, #11
 8009862:	d916      	bls.n	8009892 <_malloc_r+0xba>
 8009864:	1961      	adds	r1, r4, r5
 8009866:	42a3      	cmp	r3, r4
 8009868:	6025      	str	r5, [r4, #0]
 800986a:	bf18      	it	ne
 800986c:	6059      	strne	r1, [r3, #4]
 800986e:	6863      	ldr	r3, [r4, #4]
 8009870:	bf08      	it	eq
 8009872:	6031      	streq	r1, [r6, #0]
 8009874:	5162      	str	r2, [r4, r5]
 8009876:	604b      	str	r3, [r1, #4]
 8009878:	4638      	mov	r0, r7
 800987a:	f104 060b 	add.w	r6, r4, #11
 800987e:	f001 fb5d 	bl	800af3c <__malloc_unlock>
 8009882:	f026 0607 	bic.w	r6, r6, #7
 8009886:	1d23      	adds	r3, r4, #4
 8009888:	1af2      	subs	r2, r6, r3
 800988a:	d0b6      	beq.n	80097fa <_malloc_r+0x22>
 800988c:	1b9b      	subs	r3, r3, r6
 800988e:	50a3      	str	r3, [r4, r2]
 8009890:	e7b3      	b.n	80097fa <_malloc_r+0x22>
 8009892:	6862      	ldr	r2, [r4, #4]
 8009894:	42a3      	cmp	r3, r4
 8009896:	bf0c      	ite	eq
 8009898:	6032      	streq	r2, [r6, #0]
 800989a:	605a      	strne	r2, [r3, #4]
 800989c:	e7ec      	b.n	8009878 <_malloc_r+0xa0>
 800989e:	4623      	mov	r3, r4
 80098a0:	6864      	ldr	r4, [r4, #4]
 80098a2:	e7b2      	b.n	800980a <_malloc_r+0x32>
 80098a4:	4634      	mov	r4, r6
 80098a6:	6876      	ldr	r6, [r6, #4]
 80098a8:	e7b9      	b.n	800981e <_malloc_r+0x46>
 80098aa:	230c      	movs	r3, #12
 80098ac:	603b      	str	r3, [r7, #0]
 80098ae:	4638      	mov	r0, r7
 80098b0:	f001 fb44 	bl	800af3c <__malloc_unlock>
 80098b4:	e7a1      	b.n	80097fa <_malloc_r+0x22>
 80098b6:	6025      	str	r5, [r4, #0]
 80098b8:	e7de      	b.n	8009878 <_malloc_r+0xa0>
 80098ba:	bf00      	nop
 80098bc:	20003270 	.word	0x20003270

080098c0 <__cvt>:
 80098c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80098c4:	ec55 4b10 	vmov	r4, r5, d0
 80098c8:	2d00      	cmp	r5, #0
 80098ca:	460e      	mov	r6, r1
 80098cc:	4619      	mov	r1, r3
 80098ce:	462b      	mov	r3, r5
 80098d0:	bfbb      	ittet	lt
 80098d2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80098d6:	461d      	movlt	r5, r3
 80098d8:	2300      	movge	r3, #0
 80098da:	232d      	movlt	r3, #45	; 0x2d
 80098dc:	700b      	strb	r3, [r1, #0]
 80098de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80098e0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80098e4:	4691      	mov	r9, r2
 80098e6:	f023 0820 	bic.w	r8, r3, #32
 80098ea:	bfbc      	itt	lt
 80098ec:	4622      	movlt	r2, r4
 80098ee:	4614      	movlt	r4, r2
 80098f0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80098f4:	d005      	beq.n	8009902 <__cvt+0x42>
 80098f6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80098fa:	d100      	bne.n	80098fe <__cvt+0x3e>
 80098fc:	3601      	adds	r6, #1
 80098fe:	2102      	movs	r1, #2
 8009900:	e000      	b.n	8009904 <__cvt+0x44>
 8009902:	2103      	movs	r1, #3
 8009904:	ab03      	add	r3, sp, #12
 8009906:	9301      	str	r3, [sp, #4]
 8009908:	ab02      	add	r3, sp, #8
 800990a:	9300      	str	r3, [sp, #0]
 800990c:	ec45 4b10 	vmov	d0, r4, r5
 8009910:	4653      	mov	r3, sl
 8009912:	4632      	mov	r2, r6
 8009914:	f000 fd0c 	bl	800a330 <_dtoa_r>
 8009918:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800991c:	4607      	mov	r7, r0
 800991e:	d102      	bne.n	8009926 <__cvt+0x66>
 8009920:	f019 0f01 	tst.w	r9, #1
 8009924:	d022      	beq.n	800996c <__cvt+0xac>
 8009926:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800992a:	eb07 0906 	add.w	r9, r7, r6
 800992e:	d110      	bne.n	8009952 <__cvt+0x92>
 8009930:	783b      	ldrb	r3, [r7, #0]
 8009932:	2b30      	cmp	r3, #48	; 0x30
 8009934:	d10a      	bne.n	800994c <__cvt+0x8c>
 8009936:	2200      	movs	r2, #0
 8009938:	2300      	movs	r3, #0
 800993a:	4620      	mov	r0, r4
 800993c:	4629      	mov	r1, r5
 800993e:	f7f7 f8e3 	bl	8000b08 <__aeabi_dcmpeq>
 8009942:	b918      	cbnz	r0, 800994c <__cvt+0x8c>
 8009944:	f1c6 0601 	rsb	r6, r6, #1
 8009948:	f8ca 6000 	str.w	r6, [sl]
 800994c:	f8da 3000 	ldr.w	r3, [sl]
 8009950:	4499      	add	r9, r3
 8009952:	2200      	movs	r2, #0
 8009954:	2300      	movs	r3, #0
 8009956:	4620      	mov	r0, r4
 8009958:	4629      	mov	r1, r5
 800995a:	f7f7 f8d5 	bl	8000b08 <__aeabi_dcmpeq>
 800995e:	b108      	cbz	r0, 8009964 <__cvt+0xa4>
 8009960:	f8cd 900c 	str.w	r9, [sp, #12]
 8009964:	2230      	movs	r2, #48	; 0x30
 8009966:	9b03      	ldr	r3, [sp, #12]
 8009968:	454b      	cmp	r3, r9
 800996a:	d307      	bcc.n	800997c <__cvt+0xbc>
 800996c:	9b03      	ldr	r3, [sp, #12]
 800996e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009970:	1bdb      	subs	r3, r3, r7
 8009972:	4638      	mov	r0, r7
 8009974:	6013      	str	r3, [r2, #0]
 8009976:	b004      	add	sp, #16
 8009978:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800997c:	1c59      	adds	r1, r3, #1
 800997e:	9103      	str	r1, [sp, #12]
 8009980:	701a      	strb	r2, [r3, #0]
 8009982:	e7f0      	b.n	8009966 <__cvt+0xa6>

08009984 <__exponent>:
 8009984:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009986:	4603      	mov	r3, r0
 8009988:	2900      	cmp	r1, #0
 800998a:	bfb8      	it	lt
 800998c:	4249      	neglt	r1, r1
 800998e:	f803 2b02 	strb.w	r2, [r3], #2
 8009992:	bfb4      	ite	lt
 8009994:	222d      	movlt	r2, #45	; 0x2d
 8009996:	222b      	movge	r2, #43	; 0x2b
 8009998:	2909      	cmp	r1, #9
 800999a:	7042      	strb	r2, [r0, #1]
 800999c:	dd2a      	ble.n	80099f4 <__exponent+0x70>
 800999e:	f10d 0407 	add.w	r4, sp, #7
 80099a2:	46a4      	mov	ip, r4
 80099a4:	270a      	movs	r7, #10
 80099a6:	46a6      	mov	lr, r4
 80099a8:	460a      	mov	r2, r1
 80099aa:	fb91 f6f7 	sdiv	r6, r1, r7
 80099ae:	fb07 1516 	mls	r5, r7, r6, r1
 80099b2:	3530      	adds	r5, #48	; 0x30
 80099b4:	2a63      	cmp	r2, #99	; 0x63
 80099b6:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 80099ba:	f80e 5c01 	strb.w	r5, [lr, #-1]
 80099be:	4631      	mov	r1, r6
 80099c0:	dcf1      	bgt.n	80099a6 <__exponent+0x22>
 80099c2:	3130      	adds	r1, #48	; 0x30
 80099c4:	f1ae 0502 	sub.w	r5, lr, #2
 80099c8:	f804 1c01 	strb.w	r1, [r4, #-1]
 80099cc:	1c44      	adds	r4, r0, #1
 80099ce:	4629      	mov	r1, r5
 80099d0:	4561      	cmp	r1, ip
 80099d2:	d30a      	bcc.n	80099ea <__exponent+0x66>
 80099d4:	f10d 0209 	add.w	r2, sp, #9
 80099d8:	eba2 020e 	sub.w	r2, r2, lr
 80099dc:	4565      	cmp	r5, ip
 80099de:	bf88      	it	hi
 80099e0:	2200      	movhi	r2, #0
 80099e2:	4413      	add	r3, r2
 80099e4:	1a18      	subs	r0, r3, r0
 80099e6:	b003      	add	sp, #12
 80099e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099ea:	f811 2b01 	ldrb.w	r2, [r1], #1
 80099ee:	f804 2f01 	strb.w	r2, [r4, #1]!
 80099f2:	e7ed      	b.n	80099d0 <__exponent+0x4c>
 80099f4:	2330      	movs	r3, #48	; 0x30
 80099f6:	3130      	adds	r1, #48	; 0x30
 80099f8:	7083      	strb	r3, [r0, #2]
 80099fa:	70c1      	strb	r1, [r0, #3]
 80099fc:	1d03      	adds	r3, r0, #4
 80099fe:	e7f1      	b.n	80099e4 <__exponent+0x60>

08009a00 <_printf_float>:
 8009a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a04:	ed2d 8b02 	vpush	{d8}
 8009a08:	b08d      	sub	sp, #52	; 0x34
 8009a0a:	460c      	mov	r4, r1
 8009a0c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8009a10:	4616      	mov	r6, r2
 8009a12:	461f      	mov	r7, r3
 8009a14:	4605      	mov	r5, r0
 8009a16:	f001 fa79 	bl	800af0c <_localeconv_r>
 8009a1a:	f8d0 a000 	ldr.w	sl, [r0]
 8009a1e:	4650      	mov	r0, sl
 8009a20:	f7f6 fbf6 	bl	8000210 <strlen>
 8009a24:	2300      	movs	r3, #0
 8009a26:	930a      	str	r3, [sp, #40]	; 0x28
 8009a28:	6823      	ldr	r3, [r4, #0]
 8009a2a:	9305      	str	r3, [sp, #20]
 8009a2c:	f8d8 3000 	ldr.w	r3, [r8]
 8009a30:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009a34:	3307      	adds	r3, #7
 8009a36:	f023 0307 	bic.w	r3, r3, #7
 8009a3a:	f103 0208 	add.w	r2, r3, #8
 8009a3e:	f8c8 2000 	str.w	r2, [r8]
 8009a42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009a46:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8009a4a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8009a4e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8009a52:	9307      	str	r3, [sp, #28]
 8009a54:	f8cd 8018 	str.w	r8, [sp, #24]
 8009a58:	ee08 0a10 	vmov	s16, r0
 8009a5c:	4b9f      	ldr	r3, [pc, #636]	; (8009cdc <_printf_float+0x2dc>)
 8009a5e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009a62:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009a66:	f7f7 f881 	bl	8000b6c <__aeabi_dcmpun>
 8009a6a:	bb88      	cbnz	r0, 8009ad0 <_printf_float+0xd0>
 8009a6c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009a70:	4b9a      	ldr	r3, [pc, #616]	; (8009cdc <_printf_float+0x2dc>)
 8009a72:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009a76:	f7f7 f85b 	bl	8000b30 <__aeabi_dcmple>
 8009a7a:	bb48      	cbnz	r0, 8009ad0 <_printf_float+0xd0>
 8009a7c:	2200      	movs	r2, #0
 8009a7e:	2300      	movs	r3, #0
 8009a80:	4640      	mov	r0, r8
 8009a82:	4649      	mov	r1, r9
 8009a84:	f7f7 f84a 	bl	8000b1c <__aeabi_dcmplt>
 8009a88:	b110      	cbz	r0, 8009a90 <_printf_float+0x90>
 8009a8a:	232d      	movs	r3, #45	; 0x2d
 8009a8c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009a90:	4b93      	ldr	r3, [pc, #588]	; (8009ce0 <_printf_float+0x2e0>)
 8009a92:	4894      	ldr	r0, [pc, #592]	; (8009ce4 <_printf_float+0x2e4>)
 8009a94:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8009a98:	bf94      	ite	ls
 8009a9a:	4698      	movls	r8, r3
 8009a9c:	4680      	movhi	r8, r0
 8009a9e:	2303      	movs	r3, #3
 8009aa0:	6123      	str	r3, [r4, #16]
 8009aa2:	9b05      	ldr	r3, [sp, #20]
 8009aa4:	f023 0204 	bic.w	r2, r3, #4
 8009aa8:	6022      	str	r2, [r4, #0]
 8009aaa:	f04f 0900 	mov.w	r9, #0
 8009aae:	9700      	str	r7, [sp, #0]
 8009ab0:	4633      	mov	r3, r6
 8009ab2:	aa0b      	add	r2, sp, #44	; 0x2c
 8009ab4:	4621      	mov	r1, r4
 8009ab6:	4628      	mov	r0, r5
 8009ab8:	f000 f9d8 	bl	8009e6c <_printf_common>
 8009abc:	3001      	adds	r0, #1
 8009abe:	f040 8090 	bne.w	8009be2 <_printf_float+0x1e2>
 8009ac2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009ac6:	b00d      	add	sp, #52	; 0x34
 8009ac8:	ecbd 8b02 	vpop	{d8}
 8009acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ad0:	4642      	mov	r2, r8
 8009ad2:	464b      	mov	r3, r9
 8009ad4:	4640      	mov	r0, r8
 8009ad6:	4649      	mov	r1, r9
 8009ad8:	f7f7 f848 	bl	8000b6c <__aeabi_dcmpun>
 8009adc:	b140      	cbz	r0, 8009af0 <_printf_float+0xf0>
 8009ade:	464b      	mov	r3, r9
 8009ae0:	2b00      	cmp	r3, #0
 8009ae2:	bfbc      	itt	lt
 8009ae4:	232d      	movlt	r3, #45	; 0x2d
 8009ae6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8009aea:	487f      	ldr	r0, [pc, #508]	; (8009ce8 <_printf_float+0x2e8>)
 8009aec:	4b7f      	ldr	r3, [pc, #508]	; (8009cec <_printf_float+0x2ec>)
 8009aee:	e7d1      	b.n	8009a94 <_printf_float+0x94>
 8009af0:	6863      	ldr	r3, [r4, #4]
 8009af2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8009af6:	9206      	str	r2, [sp, #24]
 8009af8:	1c5a      	adds	r2, r3, #1
 8009afa:	d13f      	bne.n	8009b7c <_printf_float+0x17c>
 8009afc:	2306      	movs	r3, #6
 8009afe:	6063      	str	r3, [r4, #4]
 8009b00:	9b05      	ldr	r3, [sp, #20]
 8009b02:	6861      	ldr	r1, [r4, #4]
 8009b04:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8009b08:	2300      	movs	r3, #0
 8009b0a:	9303      	str	r3, [sp, #12]
 8009b0c:	ab0a      	add	r3, sp, #40	; 0x28
 8009b0e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8009b12:	ab09      	add	r3, sp, #36	; 0x24
 8009b14:	ec49 8b10 	vmov	d0, r8, r9
 8009b18:	9300      	str	r3, [sp, #0]
 8009b1a:	6022      	str	r2, [r4, #0]
 8009b1c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8009b20:	4628      	mov	r0, r5
 8009b22:	f7ff fecd 	bl	80098c0 <__cvt>
 8009b26:	9b06      	ldr	r3, [sp, #24]
 8009b28:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009b2a:	2b47      	cmp	r3, #71	; 0x47
 8009b2c:	4680      	mov	r8, r0
 8009b2e:	d108      	bne.n	8009b42 <_printf_float+0x142>
 8009b30:	1cc8      	adds	r0, r1, #3
 8009b32:	db02      	blt.n	8009b3a <_printf_float+0x13a>
 8009b34:	6863      	ldr	r3, [r4, #4]
 8009b36:	4299      	cmp	r1, r3
 8009b38:	dd41      	ble.n	8009bbe <_printf_float+0x1be>
 8009b3a:	f1ab 0b02 	sub.w	fp, fp, #2
 8009b3e:	fa5f fb8b 	uxtb.w	fp, fp
 8009b42:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8009b46:	d820      	bhi.n	8009b8a <_printf_float+0x18a>
 8009b48:	3901      	subs	r1, #1
 8009b4a:	465a      	mov	r2, fp
 8009b4c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8009b50:	9109      	str	r1, [sp, #36]	; 0x24
 8009b52:	f7ff ff17 	bl	8009984 <__exponent>
 8009b56:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009b58:	1813      	adds	r3, r2, r0
 8009b5a:	2a01      	cmp	r2, #1
 8009b5c:	4681      	mov	r9, r0
 8009b5e:	6123      	str	r3, [r4, #16]
 8009b60:	dc02      	bgt.n	8009b68 <_printf_float+0x168>
 8009b62:	6822      	ldr	r2, [r4, #0]
 8009b64:	07d2      	lsls	r2, r2, #31
 8009b66:	d501      	bpl.n	8009b6c <_printf_float+0x16c>
 8009b68:	3301      	adds	r3, #1
 8009b6a:	6123      	str	r3, [r4, #16]
 8009b6c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8009b70:	2b00      	cmp	r3, #0
 8009b72:	d09c      	beq.n	8009aae <_printf_float+0xae>
 8009b74:	232d      	movs	r3, #45	; 0x2d
 8009b76:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009b7a:	e798      	b.n	8009aae <_printf_float+0xae>
 8009b7c:	9a06      	ldr	r2, [sp, #24]
 8009b7e:	2a47      	cmp	r2, #71	; 0x47
 8009b80:	d1be      	bne.n	8009b00 <_printf_float+0x100>
 8009b82:	2b00      	cmp	r3, #0
 8009b84:	d1bc      	bne.n	8009b00 <_printf_float+0x100>
 8009b86:	2301      	movs	r3, #1
 8009b88:	e7b9      	b.n	8009afe <_printf_float+0xfe>
 8009b8a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8009b8e:	d118      	bne.n	8009bc2 <_printf_float+0x1c2>
 8009b90:	2900      	cmp	r1, #0
 8009b92:	6863      	ldr	r3, [r4, #4]
 8009b94:	dd0b      	ble.n	8009bae <_printf_float+0x1ae>
 8009b96:	6121      	str	r1, [r4, #16]
 8009b98:	b913      	cbnz	r3, 8009ba0 <_printf_float+0x1a0>
 8009b9a:	6822      	ldr	r2, [r4, #0]
 8009b9c:	07d0      	lsls	r0, r2, #31
 8009b9e:	d502      	bpl.n	8009ba6 <_printf_float+0x1a6>
 8009ba0:	3301      	adds	r3, #1
 8009ba2:	440b      	add	r3, r1
 8009ba4:	6123      	str	r3, [r4, #16]
 8009ba6:	65a1      	str	r1, [r4, #88]	; 0x58
 8009ba8:	f04f 0900 	mov.w	r9, #0
 8009bac:	e7de      	b.n	8009b6c <_printf_float+0x16c>
 8009bae:	b913      	cbnz	r3, 8009bb6 <_printf_float+0x1b6>
 8009bb0:	6822      	ldr	r2, [r4, #0]
 8009bb2:	07d2      	lsls	r2, r2, #31
 8009bb4:	d501      	bpl.n	8009bba <_printf_float+0x1ba>
 8009bb6:	3302      	adds	r3, #2
 8009bb8:	e7f4      	b.n	8009ba4 <_printf_float+0x1a4>
 8009bba:	2301      	movs	r3, #1
 8009bbc:	e7f2      	b.n	8009ba4 <_printf_float+0x1a4>
 8009bbe:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8009bc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009bc4:	4299      	cmp	r1, r3
 8009bc6:	db05      	blt.n	8009bd4 <_printf_float+0x1d4>
 8009bc8:	6823      	ldr	r3, [r4, #0]
 8009bca:	6121      	str	r1, [r4, #16]
 8009bcc:	07d8      	lsls	r0, r3, #31
 8009bce:	d5ea      	bpl.n	8009ba6 <_printf_float+0x1a6>
 8009bd0:	1c4b      	adds	r3, r1, #1
 8009bd2:	e7e7      	b.n	8009ba4 <_printf_float+0x1a4>
 8009bd4:	2900      	cmp	r1, #0
 8009bd6:	bfd4      	ite	le
 8009bd8:	f1c1 0202 	rsble	r2, r1, #2
 8009bdc:	2201      	movgt	r2, #1
 8009bde:	4413      	add	r3, r2
 8009be0:	e7e0      	b.n	8009ba4 <_printf_float+0x1a4>
 8009be2:	6823      	ldr	r3, [r4, #0]
 8009be4:	055a      	lsls	r2, r3, #21
 8009be6:	d407      	bmi.n	8009bf8 <_printf_float+0x1f8>
 8009be8:	6923      	ldr	r3, [r4, #16]
 8009bea:	4642      	mov	r2, r8
 8009bec:	4631      	mov	r1, r6
 8009bee:	4628      	mov	r0, r5
 8009bf0:	47b8      	blx	r7
 8009bf2:	3001      	adds	r0, #1
 8009bf4:	d12c      	bne.n	8009c50 <_printf_float+0x250>
 8009bf6:	e764      	b.n	8009ac2 <_printf_float+0xc2>
 8009bf8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8009bfc:	f240 80e0 	bls.w	8009dc0 <_printf_float+0x3c0>
 8009c00:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8009c04:	2200      	movs	r2, #0
 8009c06:	2300      	movs	r3, #0
 8009c08:	f7f6 ff7e 	bl	8000b08 <__aeabi_dcmpeq>
 8009c0c:	2800      	cmp	r0, #0
 8009c0e:	d034      	beq.n	8009c7a <_printf_float+0x27a>
 8009c10:	4a37      	ldr	r2, [pc, #220]	; (8009cf0 <_printf_float+0x2f0>)
 8009c12:	2301      	movs	r3, #1
 8009c14:	4631      	mov	r1, r6
 8009c16:	4628      	mov	r0, r5
 8009c18:	47b8      	blx	r7
 8009c1a:	3001      	adds	r0, #1
 8009c1c:	f43f af51 	beq.w	8009ac2 <_printf_float+0xc2>
 8009c20:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009c24:	429a      	cmp	r2, r3
 8009c26:	db02      	blt.n	8009c2e <_printf_float+0x22e>
 8009c28:	6823      	ldr	r3, [r4, #0]
 8009c2a:	07d8      	lsls	r0, r3, #31
 8009c2c:	d510      	bpl.n	8009c50 <_printf_float+0x250>
 8009c2e:	ee18 3a10 	vmov	r3, s16
 8009c32:	4652      	mov	r2, sl
 8009c34:	4631      	mov	r1, r6
 8009c36:	4628      	mov	r0, r5
 8009c38:	47b8      	blx	r7
 8009c3a:	3001      	adds	r0, #1
 8009c3c:	f43f af41 	beq.w	8009ac2 <_printf_float+0xc2>
 8009c40:	f04f 0800 	mov.w	r8, #0
 8009c44:	f104 091a 	add.w	r9, r4, #26
 8009c48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009c4a:	3b01      	subs	r3, #1
 8009c4c:	4543      	cmp	r3, r8
 8009c4e:	dc09      	bgt.n	8009c64 <_printf_float+0x264>
 8009c50:	6823      	ldr	r3, [r4, #0]
 8009c52:	079b      	lsls	r3, r3, #30
 8009c54:	f100 8105 	bmi.w	8009e62 <_printf_float+0x462>
 8009c58:	68e0      	ldr	r0, [r4, #12]
 8009c5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009c5c:	4298      	cmp	r0, r3
 8009c5e:	bfb8      	it	lt
 8009c60:	4618      	movlt	r0, r3
 8009c62:	e730      	b.n	8009ac6 <_printf_float+0xc6>
 8009c64:	2301      	movs	r3, #1
 8009c66:	464a      	mov	r2, r9
 8009c68:	4631      	mov	r1, r6
 8009c6a:	4628      	mov	r0, r5
 8009c6c:	47b8      	blx	r7
 8009c6e:	3001      	adds	r0, #1
 8009c70:	f43f af27 	beq.w	8009ac2 <_printf_float+0xc2>
 8009c74:	f108 0801 	add.w	r8, r8, #1
 8009c78:	e7e6      	b.n	8009c48 <_printf_float+0x248>
 8009c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c7c:	2b00      	cmp	r3, #0
 8009c7e:	dc39      	bgt.n	8009cf4 <_printf_float+0x2f4>
 8009c80:	4a1b      	ldr	r2, [pc, #108]	; (8009cf0 <_printf_float+0x2f0>)
 8009c82:	2301      	movs	r3, #1
 8009c84:	4631      	mov	r1, r6
 8009c86:	4628      	mov	r0, r5
 8009c88:	47b8      	blx	r7
 8009c8a:	3001      	adds	r0, #1
 8009c8c:	f43f af19 	beq.w	8009ac2 <_printf_float+0xc2>
 8009c90:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009c94:	4313      	orrs	r3, r2
 8009c96:	d102      	bne.n	8009c9e <_printf_float+0x29e>
 8009c98:	6823      	ldr	r3, [r4, #0]
 8009c9a:	07d9      	lsls	r1, r3, #31
 8009c9c:	d5d8      	bpl.n	8009c50 <_printf_float+0x250>
 8009c9e:	ee18 3a10 	vmov	r3, s16
 8009ca2:	4652      	mov	r2, sl
 8009ca4:	4631      	mov	r1, r6
 8009ca6:	4628      	mov	r0, r5
 8009ca8:	47b8      	blx	r7
 8009caa:	3001      	adds	r0, #1
 8009cac:	f43f af09 	beq.w	8009ac2 <_printf_float+0xc2>
 8009cb0:	f04f 0900 	mov.w	r9, #0
 8009cb4:	f104 0a1a 	add.w	sl, r4, #26
 8009cb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009cba:	425b      	negs	r3, r3
 8009cbc:	454b      	cmp	r3, r9
 8009cbe:	dc01      	bgt.n	8009cc4 <_printf_float+0x2c4>
 8009cc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009cc2:	e792      	b.n	8009bea <_printf_float+0x1ea>
 8009cc4:	2301      	movs	r3, #1
 8009cc6:	4652      	mov	r2, sl
 8009cc8:	4631      	mov	r1, r6
 8009cca:	4628      	mov	r0, r5
 8009ccc:	47b8      	blx	r7
 8009cce:	3001      	adds	r0, #1
 8009cd0:	f43f aef7 	beq.w	8009ac2 <_printf_float+0xc2>
 8009cd4:	f109 0901 	add.w	r9, r9, #1
 8009cd8:	e7ee      	b.n	8009cb8 <_printf_float+0x2b8>
 8009cda:	bf00      	nop
 8009cdc:	7fefffff 	.word	0x7fefffff
 8009ce0:	0800ca50 	.word	0x0800ca50
 8009ce4:	0800ca54 	.word	0x0800ca54
 8009ce8:	0800ca5c 	.word	0x0800ca5c
 8009cec:	0800ca58 	.word	0x0800ca58
 8009cf0:	0800ca60 	.word	0x0800ca60
 8009cf4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009cf6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8009cf8:	429a      	cmp	r2, r3
 8009cfa:	bfa8      	it	ge
 8009cfc:	461a      	movge	r2, r3
 8009cfe:	2a00      	cmp	r2, #0
 8009d00:	4691      	mov	r9, r2
 8009d02:	dc37      	bgt.n	8009d74 <_printf_float+0x374>
 8009d04:	f04f 0b00 	mov.w	fp, #0
 8009d08:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009d0c:	f104 021a 	add.w	r2, r4, #26
 8009d10:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8009d12:	9305      	str	r3, [sp, #20]
 8009d14:	eba3 0309 	sub.w	r3, r3, r9
 8009d18:	455b      	cmp	r3, fp
 8009d1a:	dc33      	bgt.n	8009d84 <_printf_float+0x384>
 8009d1c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009d20:	429a      	cmp	r2, r3
 8009d22:	db3b      	blt.n	8009d9c <_printf_float+0x39c>
 8009d24:	6823      	ldr	r3, [r4, #0]
 8009d26:	07da      	lsls	r2, r3, #31
 8009d28:	d438      	bmi.n	8009d9c <_printf_float+0x39c>
 8009d2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009d2c:	9a05      	ldr	r2, [sp, #20]
 8009d2e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009d30:	1a9a      	subs	r2, r3, r2
 8009d32:	eba3 0901 	sub.w	r9, r3, r1
 8009d36:	4591      	cmp	r9, r2
 8009d38:	bfa8      	it	ge
 8009d3a:	4691      	movge	r9, r2
 8009d3c:	f1b9 0f00 	cmp.w	r9, #0
 8009d40:	dc35      	bgt.n	8009dae <_printf_float+0x3ae>
 8009d42:	f04f 0800 	mov.w	r8, #0
 8009d46:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009d4a:	f104 0a1a 	add.w	sl, r4, #26
 8009d4e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009d52:	1a9b      	subs	r3, r3, r2
 8009d54:	eba3 0309 	sub.w	r3, r3, r9
 8009d58:	4543      	cmp	r3, r8
 8009d5a:	f77f af79 	ble.w	8009c50 <_printf_float+0x250>
 8009d5e:	2301      	movs	r3, #1
 8009d60:	4652      	mov	r2, sl
 8009d62:	4631      	mov	r1, r6
 8009d64:	4628      	mov	r0, r5
 8009d66:	47b8      	blx	r7
 8009d68:	3001      	adds	r0, #1
 8009d6a:	f43f aeaa 	beq.w	8009ac2 <_printf_float+0xc2>
 8009d6e:	f108 0801 	add.w	r8, r8, #1
 8009d72:	e7ec      	b.n	8009d4e <_printf_float+0x34e>
 8009d74:	4613      	mov	r3, r2
 8009d76:	4631      	mov	r1, r6
 8009d78:	4642      	mov	r2, r8
 8009d7a:	4628      	mov	r0, r5
 8009d7c:	47b8      	blx	r7
 8009d7e:	3001      	adds	r0, #1
 8009d80:	d1c0      	bne.n	8009d04 <_printf_float+0x304>
 8009d82:	e69e      	b.n	8009ac2 <_printf_float+0xc2>
 8009d84:	2301      	movs	r3, #1
 8009d86:	4631      	mov	r1, r6
 8009d88:	4628      	mov	r0, r5
 8009d8a:	9205      	str	r2, [sp, #20]
 8009d8c:	47b8      	blx	r7
 8009d8e:	3001      	adds	r0, #1
 8009d90:	f43f ae97 	beq.w	8009ac2 <_printf_float+0xc2>
 8009d94:	9a05      	ldr	r2, [sp, #20]
 8009d96:	f10b 0b01 	add.w	fp, fp, #1
 8009d9a:	e7b9      	b.n	8009d10 <_printf_float+0x310>
 8009d9c:	ee18 3a10 	vmov	r3, s16
 8009da0:	4652      	mov	r2, sl
 8009da2:	4631      	mov	r1, r6
 8009da4:	4628      	mov	r0, r5
 8009da6:	47b8      	blx	r7
 8009da8:	3001      	adds	r0, #1
 8009daa:	d1be      	bne.n	8009d2a <_printf_float+0x32a>
 8009dac:	e689      	b.n	8009ac2 <_printf_float+0xc2>
 8009dae:	9a05      	ldr	r2, [sp, #20]
 8009db0:	464b      	mov	r3, r9
 8009db2:	4442      	add	r2, r8
 8009db4:	4631      	mov	r1, r6
 8009db6:	4628      	mov	r0, r5
 8009db8:	47b8      	blx	r7
 8009dba:	3001      	adds	r0, #1
 8009dbc:	d1c1      	bne.n	8009d42 <_printf_float+0x342>
 8009dbe:	e680      	b.n	8009ac2 <_printf_float+0xc2>
 8009dc0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009dc2:	2a01      	cmp	r2, #1
 8009dc4:	dc01      	bgt.n	8009dca <_printf_float+0x3ca>
 8009dc6:	07db      	lsls	r3, r3, #31
 8009dc8:	d538      	bpl.n	8009e3c <_printf_float+0x43c>
 8009dca:	2301      	movs	r3, #1
 8009dcc:	4642      	mov	r2, r8
 8009dce:	4631      	mov	r1, r6
 8009dd0:	4628      	mov	r0, r5
 8009dd2:	47b8      	blx	r7
 8009dd4:	3001      	adds	r0, #1
 8009dd6:	f43f ae74 	beq.w	8009ac2 <_printf_float+0xc2>
 8009dda:	ee18 3a10 	vmov	r3, s16
 8009dde:	4652      	mov	r2, sl
 8009de0:	4631      	mov	r1, r6
 8009de2:	4628      	mov	r0, r5
 8009de4:	47b8      	blx	r7
 8009de6:	3001      	adds	r0, #1
 8009de8:	f43f ae6b 	beq.w	8009ac2 <_printf_float+0xc2>
 8009dec:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8009df0:	2200      	movs	r2, #0
 8009df2:	2300      	movs	r3, #0
 8009df4:	f7f6 fe88 	bl	8000b08 <__aeabi_dcmpeq>
 8009df8:	b9d8      	cbnz	r0, 8009e32 <_printf_float+0x432>
 8009dfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009dfc:	f108 0201 	add.w	r2, r8, #1
 8009e00:	3b01      	subs	r3, #1
 8009e02:	4631      	mov	r1, r6
 8009e04:	4628      	mov	r0, r5
 8009e06:	47b8      	blx	r7
 8009e08:	3001      	adds	r0, #1
 8009e0a:	d10e      	bne.n	8009e2a <_printf_float+0x42a>
 8009e0c:	e659      	b.n	8009ac2 <_printf_float+0xc2>
 8009e0e:	2301      	movs	r3, #1
 8009e10:	4652      	mov	r2, sl
 8009e12:	4631      	mov	r1, r6
 8009e14:	4628      	mov	r0, r5
 8009e16:	47b8      	blx	r7
 8009e18:	3001      	adds	r0, #1
 8009e1a:	f43f ae52 	beq.w	8009ac2 <_printf_float+0xc2>
 8009e1e:	f108 0801 	add.w	r8, r8, #1
 8009e22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009e24:	3b01      	subs	r3, #1
 8009e26:	4543      	cmp	r3, r8
 8009e28:	dcf1      	bgt.n	8009e0e <_printf_float+0x40e>
 8009e2a:	464b      	mov	r3, r9
 8009e2c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8009e30:	e6dc      	b.n	8009bec <_printf_float+0x1ec>
 8009e32:	f04f 0800 	mov.w	r8, #0
 8009e36:	f104 0a1a 	add.w	sl, r4, #26
 8009e3a:	e7f2      	b.n	8009e22 <_printf_float+0x422>
 8009e3c:	2301      	movs	r3, #1
 8009e3e:	4642      	mov	r2, r8
 8009e40:	e7df      	b.n	8009e02 <_printf_float+0x402>
 8009e42:	2301      	movs	r3, #1
 8009e44:	464a      	mov	r2, r9
 8009e46:	4631      	mov	r1, r6
 8009e48:	4628      	mov	r0, r5
 8009e4a:	47b8      	blx	r7
 8009e4c:	3001      	adds	r0, #1
 8009e4e:	f43f ae38 	beq.w	8009ac2 <_printf_float+0xc2>
 8009e52:	f108 0801 	add.w	r8, r8, #1
 8009e56:	68e3      	ldr	r3, [r4, #12]
 8009e58:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009e5a:	1a5b      	subs	r3, r3, r1
 8009e5c:	4543      	cmp	r3, r8
 8009e5e:	dcf0      	bgt.n	8009e42 <_printf_float+0x442>
 8009e60:	e6fa      	b.n	8009c58 <_printf_float+0x258>
 8009e62:	f04f 0800 	mov.w	r8, #0
 8009e66:	f104 0919 	add.w	r9, r4, #25
 8009e6a:	e7f4      	b.n	8009e56 <_printf_float+0x456>

08009e6c <_printf_common>:
 8009e6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009e70:	4616      	mov	r6, r2
 8009e72:	4699      	mov	r9, r3
 8009e74:	688a      	ldr	r2, [r1, #8]
 8009e76:	690b      	ldr	r3, [r1, #16]
 8009e78:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8009e7c:	4293      	cmp	r3, r2
 8009e7e:	bfb8      	it	lt
 8009e80:	4613      	movlt	r3, r2
 8009e82:	6033      	str	r3, [r6, #0]
 8009e84:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8009e88:	4607      	mov	r7, r0
 8009e8a:	460c      	mov	r4, r1
 8009e8c:	b10a      	cbz	r2, 8009e92 <_printf_common+0x26>
 8009e8e:	3301      	adds	r3, #1
 8009e90:	6033      	str	r3, [r6, #0]
 8009e92:	6823      	ldr	r3, [r4, #0]
 8009e94:	0699      	lsls	r1, r3, #26
 8009e96:	bf42      	ittt	mi
 8009e98:	6833      	ldrmi	r3, [r6, #0]
 8009e9a:	3302      	addmi	r3, #2
 8009e9c:	6033      	strmi	r3, [r6, #0]
 8009e9e:	6825      	ldr	r5, [r4, #0]
 8009ea0:	f015 0506 	ands.w	r5, r5, #6
 8009ea4:	d106      	bne.n	8009eb4 <_printf_common+0x48>
 8009ea6:	f104 0a19 	add.w	sl, r4, #25
 8009eaa:	68e3      	ldr	r3, [r4, #12]
 8009eac:	6832      	ldr	r2, [r6, #0]
 8009eae:	1a9b      	subs	r3, r3, r2
 8009eb0:	42ab      	cmp	r3, r5
 8009eb2:	dc26      	bgt.n	8009f02 <_printf_common+0x96>
 8009eb4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8009eb8:	1e13      	subs	r3, r2, #0
 8009eba:	6822      	ldr	r2, [r4, #0]
 8009ebc:	bf18      	it	ne
 8009ebe:	2301      	movne	r3, #1
 8009ec0:	0692      	lsls	r2, r2, #26
 8009ec2:	d42b      	bmi.n	8009f1c <_printf_common+0xb0>
 8009ec4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8009ec8:	4649      	mov	r1, r9
 8009eca:	4638      	mov	r0, r7
 8009ecc:	47c0      	blx	r8
 8009ece:	3001      	adds	r0, #1
 8009ed0:	d01e      	beq.n	8009f10 <_printf_common+0xa4>
 8009ed2:	6823      	ldr	r3, [r4, #0]
 8009ed4:	68e5      	ldr	r5, [r4, #12]
 8009ed6:	6832      	ldr	r2, [r6, #0]
 8009ed8:	f003 0306 	and.w	r3, r3, #6
 8009edc:	2b04      	cmp	r3, #4
 8009ede:	bf08      	it	eq
 8009ee0:	1aad      	subeq	r5, r5, r2
 8009ee2:	68a3      	ldr	r3, [r4, #8]
 8009ee4:	6922      	ldr	r2, [r4, #16]
 8009ee6:	bf0c      	ite	eq
 8009ee8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8009eec:	2500      	movne	r5, #0
 8009eee:	4293      	cmp	r3, r2
 8009ef0:	bfc4      	itt	gt
 8009ef2:	1a9b      	subgt	r3, r3, r2
 8009ef4:	18ed      	addgt	r5, r5, r3
 8009ef6:	2600      	movs	r6, #0
 8009ef8:	341a      	adds	r4, #26
 8009efa:	42b5      	cmp	r5, r6
 8009efc:	d11a      	bne.n	8009f34 <_printf_common+0xc8>
 8009efe:	2000      	movs	r0, #0
 8009f00:	e008      	b.n	8009f14 <_printf_common+0xa8>
 8009f02:	2301      	movs	r3, #1
 8009f04:	4652      	mov	r2, sl
 8009f06:	4649      	mov	r1, r9
 8009f08:	4638      	mov	r0, r7
 8009f0a:	47c0      	blx	r8
 8009f0c:	3001      	adds	r0, #1
 8009f0e:	d103      	bne.n	8009f18 <_printf_common+0xac>
 8009f10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009f14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f18:	3501      	adds	r5, #1
 8009f1a:	e7c6      	b.n	8009eaa <_printf_common+0x3e>
 8009f1c:	18e1      	adds	r1, r4, r3
 8009f1e:	1c5a      	adds	r2, r3, #1
 8009f20:	2030      	movs	r0, #48	; 0x30
 8009f22:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8009f26:	4422      	add	r2, r4
 8009f28:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8009f2c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8009f30:	3302      	adds	r3, #2
 8009f32:	e7c7      	b.n	8009ec4 <_printf_common+0x58>
 8009f34:	2301      	movs	r3, #1
 8009f36:	4622      	mov	r2, r4
 8009f38:	4649      	mov	r1, r9
 8009f3a:	4638      	mov	r0, r7
 8009f3c:	47c0      	blx	r8
 8009f3e:	3001      	adds	r0, #1
 8009f40:	d0e6      	beq.n	8009f10 <_printf_common+0xa4>
 8009f42:	3601      	adds	r6, #1
 8009f44:	e7d9      	b.n	8009efa <_printf_common+0x8e>
	...

08009f48 <_printf_i>:
 8009f48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009f4c:	7e0f      	ldrb	r7, [r1, #24]
 8009f4e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009f50:	2f78      	cmp	r7, #120	; 0x78
 8009f52:	4691      	mov	r9, r2
 8009f54:	4680      	mov	r8, r0
 8009f56:	460c      	mov	r4, r1
 8009f58:	469a      	mov	sl, r3
 8009f5a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8009f5e:	d807      	bhi.n	8009f70 <_printf_i+0x28>
 8009f60:	2f62      	cmp	r7, #98	; 0x62
 8009f62:	d80a      	bhi.n	8009f7a <_printf_i+0x32>
 8009f64:	2f00      	cmp	r7, #0
 8009f66:	f000 80d8 	beq.w	800a11a <_printf_i+0x1d2>
 8009f6a:	2f58      	cmp	r7, #88	; 0x58
 8009f6c:	f000 80a3 	beq.w	800a0b6 <_printf_i+0x16e>
 8009f70:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009f74:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8009f78:	e03a      	b.n	8009ff0 <_printf_i+0xa8>
 8009f7a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8009f7e:	2b15      	cmp	r3, #21
 8009f80:	d8f6      	bhi.n	8009f70 <_printf_i+0x28>
 8009f82:	a101      	add	r1, pc, #4	; (adr r1, 8009f88 <_printf_i+0x40>)
 8009f84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009f88:	08009fe1 	.word	0x08009fe1
 8009f8c:	08009ff5 	.word	0x08009ff5
 8009f90:	08009f71 	.word	0x08009f71
 8009f94:	08009f71 	.word	0x08009f71
 8009f98:	08009f71 	.word	0x08009f71
 8009f9c:	08009f71 	.word	0x08009f71
 8009fa0:	08009ff5 	.word	0x08009ff5
 8009fa4:	08009f71 	.word	0x08009f71
 8009fa8:	08009f71 	.word	0x08009f71
 8009fac:	08009f71 	.word	0x08009f71
 8009fb0:	08009f71 	.word	0x08009f71
 8009fb4:	0800a101 	.word	0x0800a101
 8009fb8:	0800a025 	.word	0x0800a025
 8009fbc:	0800a0e3 	.word	0x0800a0e3
 8009fc0:	08009f71 	.word	0x08009f71
 8009fc4:	08009f71 	.word	0x08009f71
 8009fc8:	0800a123 	.word	0x0800a123
 8009fcc:	08009f71 	.word	0x08009f71
 8009fd0:	0800a025 	.word	0x0800a025
 8009fd4:	08009f71 	.word	0x08009f71
 8009fd8:	08009f71 	.word	0x08009f71
 8009fdc:	0800a0eb 	.word	0x0800a0eb
 8009fe0:	682b      	ldr	r3, [r5, #0]
 8009fe2:	1d1a      	adds	r2, r3, #4
 8009fe4:	681b      	ldr	r3, [r3, #0]
 8009fe6:	602a      	str	r2, [r5, #0]
 8009fe8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009fec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009ff0:	2301      	movs	r3, #1
 8009ff2:	e0a3      	b.n	800a13c <_printf_i+0x1f4>
 8009ff4:	6820      	ldr	r0, [r4, #0]
 8009ff6:	6829      	ldr	r1, [r5, #0]
 8009ff8:	0606      	lsls	r6, r0, #24
 8009ffa:	f101 0304 	add.w	r3, r1, #4
 8009ffe:	d50a      	bpl.n	800a016 <_printf_i+0xce>
 800a000:	680e      	ldr	r6, [r1, #0]
 800a002:	602b      	str	r3, [r5, #0]
 800a004:	2e00      	cmp	r6, #0
 800a006:	da03      	bge.n	800a010 <_printf_i+0xc8>
 800a008:	232d      	movs	r3, #45	; 0x2d
 800a00a:	4276      	negs	r6, r6
 800a00c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a010:	485e      	ldr	r0, [pc, #376]	; (800a18c <_printf_i+0x244>)
 800a012:	230a      	movs	r3, #10
 800a014:	e019      	b.n	800a04a <_printf_i+0x102>
 800a016:	680e      	ldr	r6, [r1, #0]
 800a018:	602b      	str	r3, [r5, #0]
 800a01a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800a01e:	bf18      	it	ne
 800a020:	b236      	sxthne	r6, r6
 800a022:	e7ef      	b.n	800a004 <_printf_i+0xbc>
 800a024:	682b      	ldr	r3, [r5, #0]
 800a026:	6820      	ldr	r0, [r4, #0]
 800a028:	1d19      	adds	r1, r3, #4
 800a02a:	6029      	str	r1, [r5, #0]
 800a02c:	0601      	lsls	r1, r0, #24
 800a02e:	d501      	bpl.n	800a034 <_printf_i+0xec>
 800a030:	681e      	ldr	r6, [r3, #0]
 800a032:	e002      	b.n	800a03a <_printf_i+0xf2>
 800a034:	0646      	lsls	r6, r0, #25
 800a036:	d5fb      	bpl.n	800a030 <_printf_i+0xe8>
 800a038:	881e      	ldrh	r6, [r3, #0]
 800a03a:	4854      	ldr	r0, [pc, #336]	; (800a18c <_printf_i+0x244>)
 800a03c:	2f6f      	cmp	r7, #111	; 0x6f
 800a03e:	bf0c      	ite	eq
 800a040:	2308      	moveq	r3, #8
 800a042:	230a      	movne	r3, #10
 800a044:	2100      	movs	r1, #0
 800a046:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800a04a:	6865      	ldr	r5, [r4, #4]
 800a04c:	60a5      	str	r5, [r4, #8]
 800a04e:	2d00      	cmp	r5, #0
 800a050:	bfa2      	ittt	ge
 800a052:	6821      	ldrge	r1, [r4, #0]
 800a054:	f021 0104 	bicge.w	r1, r1, #4
 800a058:	6021      	strge	r1, [r4, #0]
 800a05a:	b90e      	cbnz	r6, 800a060 <_printf_i+0x118>
 800a05c:	2d00      	cmp	r5, #0
 800a05e:	d04d      	beq.n	800a0fc <_printf_i+0x1b4>
 800a060:	4615      	mov	r5, r2
 800a062:	fbb6 f1f3 	udiv	r1, r6, r3
 800a066:	fb03 6711 	mls	r7, r3, r1, r6
 800a06a:	5dc7      	ldrb	r7, [r0, r7]
 800a06c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800a070:	4637      	mov	r7, r6
 800a072:	42bb      	cmp	r3, r7
 800a074:	460e      	mov	r6, r1
 800a076:	d9f4      	bls.n	800a062 <_printf_i+0x11a>
 800a078:	2b08      	cmp	r3, #8
 800a07a:	d10b      	bne.n	800a094 <_printf_i+0x14c>
 800a07c:	6823      	ldr	r3, [r4, #0]
 800a07e:	07de      	lsls	r6, r3, #31
 800a080:	d508      	bpl.n	800a094 <_printf_i+0x14c>
 800a082:	6923      	ldr	r3, [r4, #16]
 800a084:	6861      	ldr	r1, [r4, #4]
 800a086:	4299      	cmp	r1, r3
 800a088:	bfde      	ittt	le
 800a08a:	2330      	movle	r3, #48	; 0x30
 800a08c:	f805 3c01 	strble.w	r3, [r5, #-1]
 800a090:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800a094:	1b52      	subs	r2, r2, r5
 800a096:	6122      	str	r2, [r4, #16]
 800a098:	f8cd a000 	str.w	sl, [sp]
 800a09c:	464b      	mov	r3, r9
 800a09e:	aa03      	add	r2, sp, #12
 800a0a0:	4621      	mov	r1, r4
 800a0a2:	4640      	mov	r0, r8
 800a0a4:	f7ff fee2 	bl	8009e6c <_printf_common>
 800a0a8:	3001      	adds	r0, #1
 800a0aa:	d14c      	bne.n	800a146 <_printf_i+0x1fe>
 800a0ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a0b0:	b004      	add	sp, #16
 800a0b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a0b6:	4835      	ldr	r0, [pc, #212]	; (800a18c <_printf_i+0x244>)
 800a0b8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800a0bc:	6829      	ldr	r1, [r5, #0]
 800a0be:	6823      	ldr	r3, [r4, #0]
 800a0c0:	f851 6b04 	ldr.w	r6, [r1], #4
 800a0c4:	6029      	str	r1, [r5, #0]
 800a0c6:	061d      	lsls	r5, r3, #24
 800a0c8:	d514      	bpl.n	800a0f4 <_printf_i+0x1ac>
 800a0ca:	07df      	lsls	r7, r3, #31
 800a0cc:	bf44      	itt	mi
 800a0ce:	f043 0320 	orrmi.w	r3, r3, #32
 800a0d2:	6023      	strmi	r3, [r4, #0]
 800a0d4:	b91e      	cbnz	r6, 800a0de <_printf_i+0x196>
 800a0d6:	6823      	ldr	r3, [r4, #0]
 800a0d8:	f023 0320 	bic.w	r3, r3, #32
 800a0dc:	6023      	str	r3, [r4, #0]
 800a0de:	2310      	movs	r3, #16
 800a0e0:	e7b0      	b.n	800a044 <_printf_i+0xfc>
 800a0e2:	6823      	ldr	r3, [r4, #0]
 800a0e4:	f043 0320 	orr.w	r3, r3, #32
 800a0e8:	6023      	str	r3, [r4, #0]
 800a0ea:	2378      	movs	r3, #120	; 0x78
 800a0ec:	4828      	ldr	r0, [pc, #160]	; (800a190 <_printf_i+0x248>)
 800a0ee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800a0f2:	e7e3      	b.n	800a0bc <_printf_i+0x174>
 800a0f4:	0659      	lsls	r1, r3, #25
 800a0f6:	bf48      	it	mi
 800a0f8:	b2b6      	uxthmi	r6, r6
 800a0fa:	e7e6      	b.n	800a0ca <_printf_i+0x182>
 800a0fc:	4615      	mov	r5, r2
 800a0fe:	e7bb      	b.n	800a078 <_printf_i+0x130>
 800a100:	682b      	ldr	r3, [r5, #0]
 800a102:	6826      	ldr	r6, [r4, #0]
 800a104:	6961      	ldr	r1, [r4, #20]
 800a106:	1d18      	adds	r0, r3, #4
 800a108:	6028      	str	r0, [r5, #0]
 800a10a:	0635      	lsls	r5, r6, #24
 800a10c:	681b      	ldr	r3, [r3, #0]
 800a10e:	d501      	bpl.n	800a114 <_printf_i+0x1cc>
 800a110:	6019      	str	r1, [r3, #0]
 800a112:	e002      	b.n	800a11a <_printf_i+0x1d2>
 800a114:	0670      	lsls	r0, r6, #25
 800a116:	d5fb      	bpl.n	800a110 <_printf_i+0x1c8>
 800a118:	8019      	strh	r1, [r3, #0]
 800a11a:	2300      	movs	r3, #0
 800a11c:	6123      	str	r3, [r4, #16]
 800a11e:	4615      	mov	r5, r2
 800a120:	e7ba      	b.n	800a098 <_printf_i+0x150>
 800a122:	682b      	ldr	r3, [r5, #0]
 800a124:	1d1a      	adds	r2, r3, #4
 800a126:	602a      	str	r2, [r5, #0]
 800a128:	681d      	ldr	r5, [r3, #0]
 800a12a:	6862      	ldr	r2, [r4, #4]
 800a12c:	2100      	movs	r1, #0
 800a12e:	4628      	mov	r0, r5
 800a130:	f7f6 f876 	bl	8000220 <memchr>
 800a134:	b108      	cbz	r0, 800a13a <_printf_i+0x1f2>
 800a136:	1b40      	subs	r0, r0, r5
 800a138:	6060      	str	r0, [r4, #4]
 800a13a:	6863      	ldr	r3, [r4, #4]
 800a13c:	6123      	str	r3, [r4, #16]
 800a13e:	2300      	movs	r3, #0
 800a140:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a144:	e7a8      	b.n	800a098 <_printf_i+0x150>
 800a146:	6923      	ldr	r3, [r4, #16]
 800a148:	462a      	mov	r2, r5
 800a14a:	4649      	mov	r1, r9
 800a14c:	4640      	mov	r0, r8
 800a14e:	47d0      	blx	sl
 800a150:	3001      	adds	r0, #1
 800a152:	d0ab      	beq.n	800a0ac <_printf_i+0x164>
 800a154:	6823      	ldr	r3, [r4, #0]
 800a156:	079b      	lsls	r3, r3, #30
 800a158:	d413      	bmi.n	800a182 <_printf_i+0x23a>
 800a15a:	68e0      	ldr	r0, [r4, #12]
 800a15c:	9b03      	ldr	r3, [sp, #12]
 800a15e:	4298      	cmp	r0, r3
 800a160:	bfb8      	it	lt
 800a162:	4618      	movlt	r0, r3
 800a164:	e7a4      	b.n	800a0b0 <_printf_i+0x168>
 800a166:	2301      	movs	r3, #1
 800a168:	4632      	mov	r2, r6
 800a16a:	4649      	mov	r1, r9
 800a16c:	4640      	mov	r0, r8
 800a16e:	47d0      	blx	sl
 800a170:	3001      	adds	r0, #1
 800a172:	d09b      	beq.n	800a0ac <_printf_i+0x164>
 800a174:	3501      	adds	r5, #1
 800a176:	68e3      	ldr	r3, [r4, #12]
 800a178:	9903      	ldr	r1, [sp, #12]
 800a17a:	1a5b      	subs	r3, r3, r1
 800a17c:	42ab      	cmp	r3, r5
 800a17e:	dcf2      	bgt.n	800a166 <_printf_i+0x21e>
 800a180:	e7eb      	b.n	800a15a <_printf_i+0x212>
 800a182:	2500      	movs	r5, #0
 800a184:	f104 0619 	add.w	r6, r4, #25
 800a188:	e7f5      	b.n	800a176 <_printf_i+0x22e>
 800a18a:	bf00      	nop
 800a18c:	0800ca62 	.word	0x0800ca62
 800a190:	0800ca73 	.word	0x0800ca73

0800a194 <_sbrk_r>:
 800a194:	b538      	push	{r3, r4, r5, lr}
 800a196:	4d06      	ldr	r5, [pc, #24]	; (800a1b0 <_sbrk_r+0x1c>)
 800a198:	2300      	movs	r3, #0
 800a19a:	4604      	mov	r4, r0
 800a19c:	4608      	mov	r0, r1
 800a19e:	602b      	str	r3, [r5, #0]
 800a1a0:	f7fa feac 	bl	8004efc <_sbrk>
 800a1a4:	1c43      	adds	r3, r0, #1
 800a1a6:	d102      	bne.n	800a1ae <_sbrk_r+0x1a>
 800a1a8:	682b      	ldr	r3, [r5, #0]
 800a1aa:	b103      	cbz	r3, 800a1ae <_sbrk_r+0x1a>
 800a1ac:	6023      	str	r3, [r4, #0]
 800a1ae:	bd38      	pop	{r3, r4, r5, pc}
 800a1b0:	20003278 	.word	0x20003278

0800a1b4 <siprintf>:
 800a1b4:	b40e      	push	{r1, r2, r3}
 800a1b6:	b500      	push	{lr}
 800a1b8:	b09c      	sub	sp, #112	; 0x70
 800a1ba:	ab1d      	add	r3, sp, #116	; 0x74
 800a1bc:	9002      	str	r0, [sp, #8]
 800a1be:	9006      	str	r0, [sp, #24]
 800a1c0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800a1c4:	4809      	ldr	r0, [pc, #36]	; (800a1ec <siprintf+0x38>)
 800a1c6:	9107      	str	r1, [sp, #28]
 800a1c8:	9104      	str	r1, [sp, #16]
 800a1ca:	4909      	ldr	r1, [pc, #36]	; (800a1f0 <siprintf+0x3c>)
 800a1cc:	f853 2b04 	ldr.w	r2, [r3], #4
 800a1d0:	9105      	str	r1, [sp, #20]
 800a1d2:	6800      	ldr	r0, [r0, #0]
 800a1d4:	9301      	str	r3, [sp, #4]
 800a1d6:	a902      	add	r1, sp, #8
 800a1d8:	f001 faac 	bl	800b734 <_svfiprintf_r>
 800a1dc:	9b02      	ldr	r3, [sp, #8]
 800a1de:	2200      	movs	r2, #0
 800a1e0:	701a      	strb	r2, [r3, #0]
 800a1e2:	b01c      	add	sp, #112	; 0x70
 800a1e4:	f85d eb04 	ldr.w	lr, [sp], #4
 800a1e8:	b003      	add	sp, #12
 800a1ea:	4770      	bx	lr
 800a1ec:	200023fc 	.word	0x200023fc
 800a1f0:	ffff0208 	.word	0xffff0208

0800a1f4 <strncat>:
 800a1f4:	b530      	push	{r4, r5, lr}
 800a1f6:	4604      	mov	r4, r0
 800a1f8:	7825      	ldrb	r5, [r4, #0]
 800a1fa:	4623      	mov	r3, r4
 800a1fc:	3401      	adds	r4, #1
 800a1fe:	2d00      	cmp	r5, #0
 800a200:	d1fa      	bne.n	800a1f8 <strncat+0x4>
 800a202:	3a01      	subs	r2, #1
 800a204:	d304      	bcc.n	800a210 <strncat+0x1c>
 800a206:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a20a:	f803 4b01 	strb.w	r4, [r3], #1
 800a20e:	b904      	cbnz	r4, 800a212 <strncat+0x1e>
 800a210:	bd30      	pop	{r4, r5, pc}
 800a212:	2a00      	cmp	r2, #0
 800a214:	d1f5      	bne.n	800a202 <strncat+0xe>
 800a216:	701a      	strb	r2, [r3, #0]
 800a218:	e7f3      	b.n	800a202 <strncat+0xe>

0800a21a <quorem>:
 800a21a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a21e:	6903      	ldr	r3, [r0, #16]
 800a220:	690c      	ldr	r4, [r1, #16]
 800a222:	42a3      	cmp	r3, r4
 800a224:	4607      	mov	r7, r0
 800a226:	f2c0 8081 	blt.w	800a32c <quorem+0x112>
 800a22a:	3c01      	subs	r4, #1
 800a22c:	f101 0814 	add.w	r8, r1, #20
 800a230:	f100 0514 	add.w	r5, r0, #20
 800a234:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a238:	9301      	str	r3, [sp, #4]
 800a23a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800a23e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a242:	3301      	adds	r3, #1
 800a244:	429a      	cmp	r2, r3
 800a246:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800a24a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a24e:	fbb2 f6f3 	udiv	r6, r2, r3
 800a252:	d331      	bcc.n	800a2b8 <quorem+0x9e>
 800a254:	f04f 0e00 	mov.w	lr, #0
 800a258:	4640      	mov	r0, r8
 800a25a:	46ac      	mov	ip, r5
 800a25c:	46f2      	mov	sl, lr
 800a25e:	f850 2b04 	ldr.w	r2, [r0], #4
 800a262:	b293      	uxth	r3, r2
 800a264:	fb06 e303 	mla	r3, r6, r3, lr
 800a268:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800a26c:	b29b      	uxth	r3, r3
 800a26e:	ebaa 0303 	sub.w	r3, sl, r3
 800a272:	f8dc a000 	ldr.w	sl, [ip]
 800a276:	0c12      	lsrs	r2, r2, #16
 800a278:	fa13 f38a 	uxtah	r3, r3, sl
 800a27c:	fb06 e202 	mla	r2, r6, r2, lr
 800a280:	9300      	str	r3, [sp, #0]
 800a282:	9b00      	ldr	r3, [sp, #0]
 800a284:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800a288:	b292      	uxth	r2, r2
 800a28a:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800a28e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a292:	f8bd 3000 	ldrh.w	r3, [sp]
 800a296:	4581      	cmp	r9, r0
 800a298:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a29c:	f84c 3b04 	str.w	r3, [ip], #4
 800a2a0:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800a2a4:	d2db      	bcs.n	800a25e <quorem+0x44>
 800a2a6:	f855 300b 	ldr.w	r3, [r5, fp]
 800a2aa:	b92b      	cbnz	r3, 800a2b8 <quorem+0x9e>
 800a2ac:	9b01      	ldr	r3, [sp, #4]
 800a2ae:	3b04      	subs	r3, #4
 800a2b0:	429d      	cmp	r5, r3
 800a2b2:	461a      	mov	r2, r3
 800a2b4:	d32e      	bcc.n	800a314 <quorem+0xfa>
 800a2b6:	613c      	str	r4, [r7, #16]
 800a2b8:	4638      	mov	r0, r7
 800a2ba:	f001 f8c7 	bl	800b44c <__mcmp>
 800a2be:	2800      	cmp	r0, #0
 800a2c0:	db24      	blt.n	800a30c <quorem+0xf2>
 800a2c2:	3601      	adds	r6, #1
 800a2c4:	4628      	mov	r0, r5
 800a2c6:	f04f 0c00 	mov.w	ip, #0
 800a2ca:	f858 2b04 	ldr.w	r2, [r8], #4
 800a2ce:	f8d0 e000 	ldr.w	lr, [r0]
 800a2d2:	b293      	uxth	r3, r2
 800a2d4:	ebac 0303 	sub.w	r3, ip, r3
 800a2d8:	0c12      	lsrs	r2, r2, #16
 800a2da:	fa13 f38e 	uxtah	r3, r3, lr
 800a2de:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800a2e2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a2e6:	b29b      	uxth	r3, r3
 800a2e8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a2ec:	45c1      	cmp	r9, r8
 800a2ee:	f840 3b04 	str.w	r3, [r0], #4
 800a2f2:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800a2f6:	d2e8      	bcs.n	800a2ca <quorem+0xb0>
 800a2f8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a2fc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a300:	b922      	cbnz	r2, 800a30c <quorem+0xf2>
 800a302:	3b04      	subs	r3, #4
 800a304:	429d      	cmp	r5, r3
 800a306:	461a      	mov	r2, r3
 800a308:	d30a      	bcc.n	800a320 <quorem+0x106>
 800a30a:	613c      	str	r4, [r7, #16]
 800a30c:	4630      	mov	r0, r6
 800a30e:	b003      	add	sp, #12
 800a310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a314:	6812      	ldr	r2, [r2, #0]
 800a316:	3b04      	subs	r3, #4
 800a318:	2a00      	cmp	r2, #0
 800a31a:	d1cc      	bne.n	800a2b6 <quorem+0x9c>
 800a31c:	3c01      	subs	r4, #1
 800a31e:	e7c7      	b.n	800a2b0 <quorem+0x96>
 800a320:	6812      	ldr	r2, [r2, #0]
 800a322:	3b04      	subs	r3, #4
 800a324:	2a00      	cmp	r2, #0
 800a326:	d1f0      	bne.n	800a30a <quorem+0xf0>
 800a328:	3c01      	subs	r4, #1
 800a32a:	e7eb      	b.n	800a304 <quorem+0xea>
 800a32c:	2000      	movs	r0, #0
 800a32e:	e7ee      	b.n	800a30e <quorem+0xf4>

0800a330 <_dtoa_r>:
 800a330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a334:	ed2d 8b04 	vpush	{d8-d9}
 800a338:	ec57 6b10 	vmov	r6, r7, d0
 800a33c:	b093      	sub	sp, #76	; 0x4c
 800a33e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800a340:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800a344:	9106      	str	r1, [sp, #24]
 800a346:	ee10 aa10 	vmov	sl, s0
 800a34a:	4604      	mov	r4, r0
 800a34c:	9209      	str	r2, [sp, #36]	; 0x24
 800a34e:	930c      	str	r3, [sp, #48]	; 0x30
 800a350:	46bb      	mov	fp, r7
 800a352:	b975      	cbnz	r5, 800a372 <_dtoa_r+0x42>
 800a354:	2010      	movs	r0, #16
 800a356:	f7ff f9bb 	bl	80096d0 <malloc>
 800a35a:	4602      	mov	r2, r0
 800a35c:	6260      	str	r0, [r4, #36]	; 0x24
 800a35e:	b920      	cbnz	r0, 800a36a <_dtoa_r+0x3a>
 800a360:	4ba7      	ldr	r3, [pc, #668]	; (800a600 <_dtoa_r+0x2d0>)
 800a362:	21ea      	movs	r1, #234	; 0xea
 800a364:	48a7      	ldr	r0, [pc, #668]	; (800a604 <_dtoa_r+0x2d4>)
 800a366:	f001 fae5 	bl	800b934 <__assert_func>
 800a36a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800a36e:	6005      	str	r5, [r0, #0]
 800a370:	60c5      	str	r5, [r0, #12]
 800a372:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a374:	6819      	ldr	r1, [r3, #0]
 800a376:	b151      	cbz	r1, 800a38e <_dtoa_r+0x5e>
 800a378:	685a      	ldr	r2, [r3, #4]
 800a37a:	604a      	str	r2, [r1, #4]
 800a37c:	2301      	movs	r3, #1
 800a37e:	4093      	lsls	r3, r2
 800a380:	608b      	str	r3, [r1, #8]
 800a382:	4620      	mov	r0, r4
 800a384:	f000 fe20 	bl	800afc8 <_Bfree>
 800a388:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a38a:	2200      	movs	r2, #0
 800a38c:	601a      	str	r2, [r3, #0]
 800a38e:	1e3b      	subs	r3, r7, #0
 800a390:	bfaa      	itet	ge
 800a392:	2300      	movge	r3, #0
 800a394:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800a398:	f8c8 3000 	strge.w	r3, [r8]
 800a39c:	4b9a      	ldr	r3, [pc, #616]	; (800a608 <_dtoa_r+0x2d8>)
 800a39e:	bfbc      	itt	lt
 800a3a0:	2201      	movlt	r2, #1
 800a3a2:	f8c8 2000 	strlt.w	r2, [r8]
 800a3a6:	ea33 030b 	bics.w	r3, r3, fp
 800a3aa:	d11b      	bne.n	800a3e4 <_dtoa_r+0xb4>
 800a3ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a3ae:	f242 730f 	movw	r3, #9999	; 0x270f
 800a3b2:	6013      	str	r3, [r2, #0]
 800a3b4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800a3b8:	4333      	orrs	r3, r6
 800a3ba:	f000 8592 	beq.w	800aee2 <_dtoa_r+0xbb2>
 800a3be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a3c0:	b963      	cbnz	r3, 800a3dc <_dtoa_r+0xac>
 800a3c2:	4b92      	ldr	r3, [pc, #584]	; (800a60c <_dtoa_r+0x2dc>)
 800a3c4:	e022      	b.n	800a40c <_dtoa_r+0xdc>
 800a3c6:	4b92      	ldr	r3, [pc, #584]	; (800a610 <_dtoa_r+0x2e0>)
 800a3c8:	9301      	str	r3, [sp, #4]
 800a3ca:	3308      	adds	r3, #8
 800a3cc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a3ce:	6013      	str	r3, [r2, #0]
 800a3d0:	9801      	ldr	r0, [sp, #4]
 800a3d2:	b013      	add	sp, #76	; 0x4c
 800a3d4:	ecbd 8b04 	vpop	{d8-d9}
 800a3d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3dc:	4b8b      	ldr	r3, [pc, #556]	; (800a60c <_dtoa_r+0x2dc>)
 800a3de:	9301      	str	r3, [sp, #4]
 800a3e0:	3303      	adds	r3, #3
 800a3e2:	e7f3      	b.n	800a3cc <_dtoa_r+0x9c>
 800a3e4:	2200      	movs	r2, #0
 800a3e6:	2300      	movs	r3, #0
 800a3e8:	4650      	mov	r0, sl
 800a3ea:	4659      	mov	r1, fp
 800a3ec:	f7f6 fb8c 	bl	8000b08 <__aeabi_dcmpeq>
 800a3f0:	ec4b ab19 	vmov	d9, sl, fp
 800a3f4:	4680      	mov	r8, r0
 800a3f6:	b158      	cbz	r0, 800a410 <_dtoa_r+0xe0>
 800a3f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a3fa:	2301      	movs	r3, #1
 800a3fc:	6013      	str	r3, [r2, #0]
 800a3fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a400:	2b00      	cmp	r3, #0
 800a402:	f000 856b 	beq.w	800aedc <_dtoa_r+0xbac>
 800a406:	4883      	ldr	r0, [pc, #524]	; (800a614 <_dtoa_r+0x2e4>)
 800a408:	6018      	str	r0, [r3, #0]
 800a40a:	1e43      	subs	r3, r0, #1
 800a40c:	9301      	str	r3, [sp, #4]
 800a40e:	e7df      	b.n	800a3d0 <_dtoa_r+0xa0>
 800a410:	ec4b ab10 	vmov	d0, sl, fp
 800a414:	aa10      	add	r2, sp, #64	; 0x40
 800a416:	a911      	add	r1, sp, #68	; 0x44
 800a418:	4620      	mov	r0, r4
 800a41a:	f001 f8bd 	bl	800b598 <__d2b>
 800a41e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800a422:	ee08 0a10 	vmov	s16, r0
 800a426:	2d00      	cmp	r5, #0
 800a428:	f000 8084 	beq.w	800a534 <_dtoa_r+0x204>
 800a42c:	ee19 3a90 	vmov	r3, s19
 800a430:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a434:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800a438:	4656      	mov	r6, sl
 800a43a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800a43e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800a442:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800a446:	4b74      	ldr	r3, [pc, #464]	; (800a618 <_dtoa_r+0x2e8>)
 800a448:	2200      	movs	r2, #0
 800a44a:	4630      	mov	r0, r6
 800a44c:	4639      	mov	r1, r7
 800a44e:	f7f5 ff3b 	bl	80002c8 <__aeabi_dsub>
 800a452:	a365      	add	r3, pc, #404	; (adr r3, 800a5e8 <_dtoa_r+0x2b8>)
 800a454:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a458:	f7f6 f8ee 	bl	8000638 <__aeabi_dmul>
 800a45c:	a364      	add	r3, pc, #400	; (adr r3, 800a5f0 <_dtoa_r+0x2c0>)
 800a45e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a462:	f7f5 ff33 	bl	80002cc <__adddf3>
 800a466:	4606      	mov	r6, r0
 800a468:	4628      	mov	r0, r5
 800a46a:	460f      	mov	r7, r1
 800a46c:	f7f6 f87a 	bl	8000564 <__aeabi_i2d>
 800a470:	a361      	add	r3, pc, #388	; (adr r3, 800a5f8 <_dtoa_r+0x2c8>)
 800a472:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a476:	f7f6 f8df 	bl	8000638 <__aeabi_dmul>
 800a47a:	4602      	mov	r2, r0
 800a47c:	460b      	mov	r3, r1
 800a47e:	4630      	mov	r0, r6
 800a480:	4639      	mov	r1, r7
 800a482:	f7f5 ff23 	bl	80002cc <__adddf3>
 800a486:	4606      	mov	r6, r0
 800a488:	460f      	mov	r7, r1
 800a48a:	f7f6 fb85 	bl	8000b98 <__aeabi_d2iz>
 800a48e:	2200      	movs	r2, #0
 800a490:	9000      	str	r0, [sp, #0]
 800a492:	2300      	movs	r3, #0
 800a494:	4630      	mov	r0, r6
 800a496:	4639      	mov	r1, r7
 800a498:	f7f6 fb40 	bl	8000b1c <__aeabi_dcmplt>
 800a49c:	b150      	cbz	r0, 800a4b4 <_dtoa_r+0x184>
 800a49e:	9800      	ldr	r0, [sp, #0]
 800a4a0:	f7f6 f860 	bl	8000564 <__aeabi_i2d>
 800a4a4:	4632      	mov	r2, r6
 800a4a6:	463b      	mov	r3, r7
 800a4a8:	f7f6 fb2e 	bl	8000b08 <__aeabi_dcmpeq>
 800a4ac:	b910      	cbnz	r0, 800a4b4 <_dtoa_r+0x184>
 800a4ae:	9b00      	ldr	r3, [sp, #0]
 800a4b0:	3b01      	subs	r3, #1
 800a4b2:	9300      	str	r3, [sp, #0]
 800a4b4:	9b00      	ldr	r3, [sp, #0]
 800a4b6:	2b16      	cmp	r3, #22
 800a4b8:	d85a      	bhi.n	800a570 <_dtoa_r+0x240>
 800a4ba:	9a00      	ldr	r2, [sp, #0]
 800a4bc:	4b57      	ldr	r3, [pc, #348]	; (800a61c <_dtoa_r+0x2ec>)
 800a4be:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a4c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4c6:	ec51 0b19 	vmov	r0, r1, d9
 800a4ca:	f7f6 fb27 	bl	8000b1c <__aeabi_dcmplt>
 800a4ce:	2800      	cmp	r0, #0
 800a4d0:	d050      	beq.n	800a574 <_dtoa_r+0x244>
 800a4d2:	9b00      	ldr	r3, [sp, #0]
 800a4d4:	3b01      	subs	r3, #1
 800a4d6:	9300      	str	r3, [sp, #0]
 800a4d8:	2300      	movs	r3, #0
 800a4da:	930b      	str	r3, [sp, #44]	; 0x2c
 800a4dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a4de:	1b5d      	subs	r5, r3, r5
 800a4e0:	1e6b      	subs	r3, r5, #1
 800a4e2:	9305      	str	r3, [sp, #20]
 800a4e4:	bf45      	ittet	mi
 800a4e6:	f1c5 0301 	rsbmi	r3, r5, #1
 800a4ea:	9304      	strmi	r3, [sp, #16]
 800a4ec:	2300      	movpl	r3, #0
 800a4ee:	2300      	movmi	r3, #0
 800a4f0:	bf4c      	ite	mi
 800a4f2:	9305      	strmi	r3, [sp, #20]
 800a4f4:	9304      	strpl	r3, [sp, #16]
 800a4f6:	9b00      	ldr	r3, [sp, #0]
 800a4f8:	2b00      	cmp	r3, #0
 800a4fa:	db3d      	blt.n	800a578 <_dtoa_r+0x248>
 800a4fc:	9b05      	ldr	r3, [sp, #20]
 800a4fe:	9a00      	ldr	r2, [sp, #0]
 800a500:	920a      	str	r2, [sp, #40]	; 0x28
 800a502:	4413      	add	r3, r2
 800a504:	9305      	str	r3, [sp, #20]
 800a506:	2300      	movs	r3, #0
 800a508:	9307      	str	r3, [sp, #28]
 800a50a:	9b06      	ldr	r3, [sp, #24]
 800a50c:	2b09      	cmp	r3, #9
 800a50e:	f200 8089 	bhi.w	800a624 <_dtoa_r+0x2f4>
 800a512:	2b05      	cmp	r3, #5
 800a514:	bfc4      	itt	gt
 800a516:	3b04      	subgt	r3, #4
 800a518:	9306      	strgt	r3, [sp, #24]
 800a51a:	9b06      	ldr	r3, [sp, #24]
 800a51c:	f1a3 0302 	sub.w	r3, r3, #2
 800a520:	bfcc      	ite	gt
 800a522:	2500      	movgt	r5, #0
 800a524:	2501      	movle	r5, #1
 800a526:	2b03      	cmp	r3, #3
 800a528:	f200 8087 	bhi.w	800a63a <_dtoa_r+0x30a>
 800a52c:	e8df f003 	tbb	[pc, r3]
 800a530:	59383a2d 	.word	0x59383a2d
 800a534:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800a538:	441d      	add	r5, r3
 800a53a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800a53e:	2b20      	cmp	r3, #32
 800a540:	bfc1      	itttt	gt
 800a542:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800a546:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800a54a:	fa0b f303 	lslgt.w	r3, fp, r3
 800a54e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800a552:	bfda      	itte	le
 800a554:	f1c3 0320 	rsble	r3, r3, #32
 800a558:	fa06 f003 	lslle.w	r0, r6, r3
 800a55c:	4318      	orrgt	r0, r3
 800a55e:	f7f5 fff1 	bl	8000544 <__aeabi_ui2d>
 800a562:	2301      	movs	r3, #1
 800a564:	4606      	mov	r6, r0
 800a566:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800a56a:	3d01      	subs	r5, #1
 800a56c:	930e      	str	r3, [sp, #56]	; 0x38
 800a56e:	e76a      	b.n	800a446 <_dtoa_r+0x116>
 800a570:	2301      	movs	r3, #1
 800a572:	e7b2      	b.n	800a4da <_dtoa_r+0x1aa>
 800a574:	900b      	str	r0, [sp, #44]	; 0x2c
 800a576:	e7b1      	b.n	800a4dc <_dtoa_r+0x1ac>
 800a578:	9b04      	ldr	r3, [sp, #16]
 800a57a:	9a00      	ldr	r2, [sp, #0]
 800a57c:	1a9b      	subs	r3, r3, r2
 800a57e:	9304      	str	r3, [sp, #16]
 800a580:	4253      	negs	r3, r2
 800a582:	9307      	str	r3, [sp, #28]
 800a584:	2300      	movs	r3, #0
 800a586:	930a      	str	r3, [sp, #40]	; 0x28
 800a588:	e7bf      	b.n	800a50a <_dtoa_r+0x1da>
 800a58a:	2300      	movs	r3, #0
 800a58c:	9308      	str	r3, [sp, #32]
 800a58e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a590:	2b00      	cmp	r3, #0
 800a592:	dc55      	bgt.n	800a640 <_dtoa_r+0x310>
 800a594:	2301      	movs	r3, #1
 800a596:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a59a:	461a      	mov	r2, r3
 800a59c:	9209      	str	r2, [sp, #36]	; 0x24
 800a59e:	e00c      	b.n	800a5ba <_dtoa_r+0x28a>
 800a5a0:	2301      	movs	r3, #1
 800a5a2:	e7f3      	b.n	800a58c <_dtoa_r+0x25c>
 800a5a4:	2300      	movs	r3, #0
 800a5a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a5a8:	9308      	str	r3, [sp, #32]
 800a5aa:	9b00      	ldr	r3, [sp, #0]
 800a5ac:	4413      	add	r3, r2
 800a5ae:	9302      	str	r3, [sp, #8]
 800a5b0:	3301      	adds	r3, #1
 800a5b2:	2b01      	cmp	r3, #1
 800a5b4:	9303      	str	r3, [sp, #12]
 800a5b6:	bfb8      	it	lt
 800a5b8:	2301      	movlt	r3, #1
 800a5ba:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800a5bc:	2200      	movs	r2, #0
 800a5be:	6042      	str	r2, [r0, #4]
 800a5c0:	2204      	movs	r2, #4
 800a5c2:	f102 0614 	add.w	r6, r2, #20
 800a5c6:	429e      	cmp	r6, r3
 800a5c8:	6841      	ldr	r1, [r0, #4]
 800a5ca:	d93d      	bls.n	800a648 <_dtoa_r+0x318>
 800a5cc:	4620      	mov	r0, r4
 800a5ce:	f000 fcbb 	bl	800af48 <_Balloc>
 800a5d2:	9001      	str	r0, [sp, #4]
 800a5d4:	2800      	cmp	r0, #0
 800a5d6:	d13b      	bne.n	800a650 <_dtoa_r+0x320>
 800a5d8:	4b11      	ldr	r3, [pc, #68]	; (800a620 <_dtoa_r+0x2f0>)
 800a5da:	4602      	mov	r2, r0
 800a5dc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800a5e0:	e6c0      	b.n	800a364 <_dtoa_r+0x34>
 800a5e2:	2301      	movs	r3, #1
 800a5e4:	e7df      	b.n	800a5a6 <_dtoa_r+0x276>
 800a5e6:	bf00      	nop
 800a5e8:	636f4361 	.word	0x636f4361
 800a5ec:	3fd287a7 	.word	0x3fd287a7
 800a5f0:	8b60c8b3 	.word	0x8b60c8b3
 800a5f4:	3fc68a28 	.word	0x3fc68a28
 800a5f8:	509f79fb 	.word	0x509f79fb
 800a5fc:	3fd34413 	.word	0x3fd34413
 800a600:	0800ca91 	.word	0x0800ca91
 800a604:	0800caa8 	.word	0x0800caa8
 800a608:	7ff00000 	.word	0x7ff00000
 800a60c:	0800ca8d 	.word	0x0800ca8d
 800a610:	0800ca84 	.word	0x0800ca84
 800a614:	0800ca61 	.word	0x0800ca61
 800a618:	3ff80000 	.word	0x3ff80000
 800a61c:	0800cb98 	.word	0x0800cb98
 800a620:	0800cb03 	.word	0x0800cb03
 800a624:	2501      	movs	r5, #1
 800a626:	2300      	movs	r3, #0
 800a628:	9306      	str	r3, [sp, #24]
 800a62a:	9508      	str	r5, [sp, #32]
 800a62c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800a630:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a634:	2200      	movs	r2, #0
 800a636:	2312      	movs	r3, #18
 800a638:	e7b0      	b.n	800a59c <_dtoa_r+0x26c>
 800a63a:	2301      	movs	r3, #1
 800a63c:	9308      	str	r3, [sp, #32]
 800a63e:	e7f5      	b.n	800a62c <_dtoa_r+0x2fc>
 800a640:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a642:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a646:	e7b8      	b.n	800a5ba <_dtoa_r+0x28a>
 800a648:	3101      	adds	r1, #1
 800a64a:	6041      	str	r1, [r0, #4]
 800a64c:	0052      	lsls	r2, r2, #1
 800a64e:	e7b8      	b.n	800a5c2 <_dtoa_r+0x292>
 800a650:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a652:	9a01      	ldr	r2, [sp, #4]
 800a654:	601a      	str	r2, [r3, #0]
 800a656:	9b03      	ldr	r3, [sp, #12]
 800a658:	2b0e      	cmp	r3, #14
 800a65a:	f200 809d 	bhi.w	800a798 <_dtoa_r+0x468>
 800a65e:	2d00      	cmp	r5, #0
 800a660:	f000 809a 	beq.w	800a798 <_dtoa_r+0x468>
 800a664:	9b00      	ldr	r3, [sp, #0]
 800a666:	2b00      	cmp	r3, #0
 800a668:	dd32      	ble.n	800a6d0 <_dtoa_r+0x3a0>
 800a66a:	4ab7      	ldr	r2, [pc, #732]	; (800a948 <_dtoa_r+0x618>)
 800a66c:	f003 030f 	and.w	r3, r3, #15
 800a670:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a674:	e9d3 8900 	ldrd	r8, r9, [r3]
 800a678:	9b00      	ldr	r3, [sp, #0]
 800a67a:	05d8      	lsls	r0, r3, #23
 800a67c:	ea4f 1723 	mov.w	r7, r3, asr #4
 800a680:	d516      	bpl.n	800a6b0 <_dtoa_r+0x380>
 800a682:	4bb2      	ldr	r3, [pc, #712]	; (800a94c <_dtoa_r+0x61c>)
 800a684:	ec51 0b19 	vmov	r0, r1, d9
 800a688:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800a68c:	f7f6 f8fe 	bl	800088c <__aeabi_ddiv>
 800a690:	f007 070f 	and.w	r7, r7, #15
 800a694:	4682      	mov	sl, r0
 800a696:	468b      	mov	fp, r1
 800a698:	2503      	movs	r5, #3
 800a69a:	4eac      	ldr	r6, [pc, #688]	; (800a94c <_dtoa_r+0x61c>)
 800a69c:	b957      	cbnz	r7, 800a6b4 <_dtoa_r+0x384>
 800a69e:	4642      	mov	r2, r8
 800a6a0:	464b      	mov	r3, r9
 800a6a2:	4650      	mov	r0, sl
 800a6a4:	4659      	mov	r1, fp
 800a6a6:	f7f6 f8f1 	bl	800088c <__aeabi_ddiv>
 800a6aa:	4682      	mov	sl, r0
 800a6ac:	468b      	mov	fp, r1
 800a6ae:	e028      	b.n	800a702 <_dtoa_r+0x3d2>
 800a6b0:	2502      	movs	r5, #2
 800a6b2:	e7f2      	b.n	800a69a <_dtoa_r+0x36a>
 800a6b4:	07f9      	lsls	r1, r7, #31
 800a6b6:	d508      	bpl.n	800a6ca <_dtoa_r+0x39a>
 800a6b8:	4640      	mov	r0, r8
 800a6ba:	4649      	mov	r1, r9
 800a6bc:	e9d6 2300 	ldrd	r2, r3, [r6]
 800a6c0:	f7f5 ffba 	bl	8000638 <__aeabi_dmul>
 800a6c4:	3501      	adds	r5, #1
 800a6c6:	4680      	mov	r8, r0
 800a6c8:	4689      	mov	r9, r1
 800a6ca:	107f      	asrs	r7, r7, #1
 800a6cc:	3608      	adds	r6, #8
 800a6ce:	e7e5      	b.n	800a69c <_dtoa_r+0x36c>
 800a6d0:	f000 809b 	beq.w	800a80a <_dtoa_r+0x4da>
 800a6d4:	9b00      	ldr	r3, [sp, #0]
 800a6d6:	4f9d      	ldr	r7, [pc, #628]	; (800a94c <_dtoa_r+0x61c>)
 800a6d8:	425e      	negs	r6, r3
 800a6da:	4b9b      	ldr	r3, [pc, #620]	; (800a948 <_dtoa_r+0x618>)
 800a6dc:	f006 020f 	and.w	r2, r6, #15
 800a6e0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a6e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6e8:	ec51 0b19 	vmov	r0, r1, d9
 800a6ec:	f7f5 ffa4 	bl	8000638 <__aeabi_dmul>
 800a6f0:	1136      	asrs	r6, r6, #4
 800a6f2:	4682      	mov	sl, r0
 800a6f4:	468b      	mov	fp, r1
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	2502      	movs	r5, #2
 800a6fa:	2e00      	cmp	r6, #0
 800a6fc:	d17a      	bne.n	800a7f4 <_dtoa_r+0x4c4>
 800a6fe:	2b00      	cmp	r3, #0
 800a700:	d1d3      	bne.n	800a6aa <_dtoa_r+0x37a>
 800a702:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a704:	2b00      	cmp	r3, #0
 800a706:	f000 8082 	beq.w	800a80e <_dtoa_r+0x4de>
 800a70a:	4b91      	ldr	r3, [pc, #580]	; (800a950 <_dtoa_r+0x620>)
 800a70c:	2200      	movs	r2, #0
 800a70e:	4650      	mov	r0, sl
 800a710:	4659      	mov	r1, fp
 800a712:	f7f6 fa03 	bl	8000b1c <__aeabi_dcmplt>
 800a716:	2800      	cmp	r0, #0
 800a718:	d079      	beq.n	800a80e <_dtoa_r+0x4de>
 800a71a:	9b03      	ldr	r3, [sp, #12]
 800a71c:	2b00      	cmp	r3, #0
 800a71e:	d076      	beq.n	800a80e <_dtoa_r+0x4de>
 800a720:	9b02      	ldr	r3, [sp, #8]
 800a722:	2b00      	cmp	r3, #0
 800a724:	dd36      	ble.n	800a794 <_dtoa_r+0x464>
 800a726:	9b00      	ldr	r3, [sp, #0]
 800a728:	4650      	mov	r0, sl
 800a72a:	4659      	mov	r1, fp
 800a72c:	1e5f      	subs	r7, r3, #1
 800a72e:	2200      	movs	r2, #0
 800a730:	4b88      	ldr	r3, [pc, #544]	; (800a954 <_dtoa_r+0x624>)
 800a732:	f7f5 ff81 	bl	8000638 <__aeabi_dmul>
 800a736:	9e02      	ldr	r6, [sp, #8]
 800a738:	4682      	mov	sl, r0
 800a73a:	468b      	mov	fp, r1
 800a73c:	3501      	adds	r5, #1
 800a73e:	4628      	mov	r0, r5
 800a740:	f7f5 ff10 	bl	8000564 <__aeabi_i2d>
 800a744:	4652      	mov	r2, sl
 800a746:	465b      	mov	r3, fp
 800a748:	f7f5 ff76 	bl	8000638 <__aeabi_dmul>
 800a74c:	4b82      	ldr	r3, [pc, #520]	; (800a958 <_dtoa_r+0x628>)
 800a74e:	2200      	movs	r2, #0
 800a750:	f7f5 fdbc 	bl	80002cc <__adddf3>
 800a754:	46d0      	mov	r8, sl
 800a756:	46d9      	mov	r9, fp
 800a758:	4682      	mov	sl, r0
 800a75a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800a75e:	2e00      	cmp	r6, #0
 800a760:	d158      	bne.n	800a814 <_dtoa_r+0x4e4>
 800a762:	4b7e      	ldr	r3, [pc, #504]	; (800a95c <_dtoa_r+0x62c>)
 800a764:	2200      	movs	r2, #0
 800a766:	4640      	mov	r0, r8
 800a768:	4649      	mov	r1, r9
 800a76a:	f7f5 fdad 	bl	80002c8 <__aeabi_dsub>
 800a76e:	4652      	mov	r2, sl
 800a770:	465b      	mov	r3, fp
 800a772:	4680      	mov	r8, r0
 800a774:	4689      	mov	r9, r1
 800a776:	f7f6 f9ef 	bl	8000b58 <__aeabi_dcmpgt>
 800a77a:	2800      	cmp	r0, #0
 800a77c:	f040 8295 	bne.w	800acaa <_dtoa_r+0x97a>
 800a780:	4652      	mov	r2, sl
 800a782:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800a786:	4640      	mov	r0, r8
 800a788:	4649      	mov	r1, r9
 800a78a:	f7f6 f9c7 	bl	8000b1c <__aeabi_dcmplt>
 800a78e:	2800      	cmp	r0, #0
 800a790:	f040 8289 	bne.w	800aca6 <_dtoa_r+0x976>
 800a794:	ec5b ab19 	vmov	sl, fp, d9
 800a798:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a79a:	2b00      	cmp	r3, #0
 800a79c:	f2c0 8148 	blt.w	800aa30 <_dtoa_r+0x700>
 800a7a0:	9a00      	ldr	r2, [sp, #0]
 800a7a2:	2a0e      	cmp	r2, #14
 800a7a4:	f300 8144 	bgt.w	800aa30 <_dtoa_r+0x700>
 800a7a8:	4b67      	ldr	r3, [pc, #412]	; (800a948 <_dtoa_r+0x618>)
 800a7aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a7ae:	e9d3 8900 	ldrd	r8, r9, [r3]
 800a7b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a7b4:	2b00      	cmp	r3, #0
 800a7b6:	f280 80d5 	bge.w	800a964 <_dtoa_r+0x634>
 800a7ba:	9b03      	ldr	r3, [sp, #12]
 800a7bc:	2b00      	cmp	r3, #0
 800a7be:	f300 80d1 	bgt.w	800a964 <_dtoa_r+0x634>
 800a7c2:	f040 826f 	bne.w	800aca4 <_dtoa_r+0x974>
 800a7c6:	4b65      	ldr	r3, [pc, #404]	; (800a95c <_dtoa_r+0x62c>)
 800a7c8:	2200      	movs	r2, #0
 800a7ca:	4640      	mov	r0, r8
 800a7cc:	4649      	mov	r1, r9
 800a7ce:	f7f5 ff33 	bl	8000638 <__aeabi_dmul>
 800a7d2:	4652      	mov	r2, sl
 800a7d4:	465b      	mov	r3, fp
 800a7d6:	f7f6 f9b5 	bl	8000b44 <__aeabi_dcmpge>
 800a7da:	9e03      	ldr	r6, [sp, #12]
 800a7dc:	4637      	mov	r7, r6
 800a7de:	2800      	cmp	r0, #0
 800a7e0:	f040 8245 	bne.w	800ac6e <_dtoa_r+0x93e>
 800a7e4:	9d01      	ldr	r5, [sp, #4]
 800a7e6:	2331      	movs	r3, #49	; 0x31
 800a7e8:	f805 3b01 	strb.w	r3, [r5], #1
 800a7ec:	9b00      	ldr	r3, [sp, #0]
 800a7ee:	3301      	adds	r3, #1
 800a7f0:	9300      	str	r3, [sp, #0]
 800a7f2:	e240      	b.n	800ac76 <_dtoa_r+0x946>
 800a7f4:	07f2      	lsls	r2, r6, #31
 800a7f6:	d505      	bpl.n	800a804 <_dtoa_r+0x4d4>
 800a7f8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a7fc:	f7f5 ff1c 	bl	8000638 <__aeabi_dmul>
 800a800:	3501      	adds	r5, #1
 800a802:	2301      	movs	r3, #1
 800a804:	1076      	asrs	r6, r6, #1
 800a806:	3708      	adds	r7, #8
 800a808:	e777      	b.n	800a6fa <_dtoa_r+0x3ca>
 800a80a:	2502      	movs	r5, #2
 800a80c:	e779      	b.n	800a702 <_dtoa_r+0x3d2>
 800a80e:	9f00      	ldr	r7, [sp, #0]
 800a810:	9e03      	ldr	r6, [sp, #12]
 800a812:	e794      	b.n	800a73e <_dtoa_r+0x40e>
 800a814:	9901      	ldr	r1, [sp, #4]
 800a816:	4b4c      	ldr	r3, [pc, #304]	; (800a948 <_dtoa_r+0x618>)
 800a818:	4431      	add	r1, r6
 800a81a:	910d      	str	r1, [sp, #52]	; 0x34
 800a81c:	9908      	ldr	r1, [sp, #32]
 800a81e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800a822:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800a826:	2900      	cmp	r1, #0
 800a828:	d043      	beq.n	800a8b2 <_dtoa_r+0x582>
 800a82a:	494d      	ldr	r1, [pc, #308]	; (800a960 <_dtoa_r+0x630>)
 800a82c:	2000      	movs	r0, #0
 800a82e:	f7f6 f82d 	bl	800088c <__aeabi_ddiv>
 800a832:	4652      	mov	r2, sl
 800a834:	465b      	mov	r3, fp
 800a836:	f7f5 fd47 	bl	80002c8 <__aeabi_dsub>
 800a83a:	9d01      	ldr	r5, [sp, #4]
 800a83c:	4682      	mov	sl, r0
 800a83e:	468b      	mov	fp, r1
 800a840:	4649      	mov	r1, r9
 800a842:	4640      	mov	r0, r8
 800a844:	f7f6 f9a8 	bl	8000b98 <__aeabi_d2iz>
 800a848:	4606      	mov	r6, r0
 800a84a:	f7f5 fe8b 	bl	8000564 <__aeabi_i2d>
 800a84e:	4602      	mov	r2, r0
 800a850:	460b      	mov	r3, r1
 800a852:	4640      	mov	r0, r8
 800a854:	4649      	mov	r1, r9
 800a856:	f7f5 fd37 	bl	80002c8 <__aeabi_dsub>
 800a85a:	3630      	adds	r6, #48	; 0x30
 800a85c:	f805 6b01 	strb.w	r6, [r5], #1
 800a860:	4652      	mov	r2, sl
 800a862:	465b      	mov	r3, fp
 800a864:	4680      	mov	r8, r0
 800a866:	4689      	mov	r9, r1
 800a868:	f7f6 f958 	bl	8000b1c <__aeabi_dcmplt>
 800a86c:	2800      	cmp	r0, #0
 800a86e:	d163      	bne.n	800a938 <_dtoa_r+0x608>
 800a870:	4642      	mov	r2, r8
 800a872:	464b      	mov	r3, r9
 800a874:	4936      	ldr	r1, [pc, #216]	; (800a950 <_dtoa_r+0x620>)
 800a876:	2000      	movs	r0, #0
 800a878:	f7f5 fd26 	bl	80002c8 <__aeabi_dsub>
 800a87c:	4652      	mov	r2, sl
 800a87e:	465b      	mov	r3, fp
 800a880:	f7f6 f94c 	bl	8000b1c <__aeabi_dcmplt>
 800a884:	2800      	cmp	r0, #0
 800a886:	f040 80b5 	bne.w	800a9f4 <_dtoa_r+0x6c4>
 800a88a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a88c:	429d      	cmp	r5, r3
 800a88e:	d081      	beq.n	800a794 <_dtoa_r+0x464>
 800a890:	4b30      	ldr	r3, [pc, #192]	; (800a954 <_dtoa_r+0x624>)
 800a892:	2200      	movs	r2, #0
 800a894:	4650      	mov	r0, sl
 800a896:	4659      	mov	r1, fp
 800a898:	f7f5 fece 	bl	8000638 <__aeabi_dmul>
 800a89c:	4b2d      	ldr	r3, [pc, #180]	; (800a954 <_dtoa_r+0x624>)
 800a89e:	4682      	mov	sl, r0
 800a8a0:	468b      	mov	fp, r1
 800a8a2:	4640      	mov	r0, r8
 800a8a4:	4649      	mov	r1, r9
 800a8a6:	2200      	movs	r2, #0
 800a8a8:	f7f5 fec6 	bl	8000638 <__aeabi_dmul>
 800a8ac:	4680      	mov	r8, r0
 800a8ae:	4689      	mov	r9, r1
 800a8b0:	e7c6      	b.n	800a840 <_dtoa_r+0x510>
 800a8b2:	4650      	mov	r0, sl
 800a8b4:	4659      	mov	r1, fp
 800a8b6:	f7f5 febf 	bl	8000638 <__aeabi_dmul>
 800a8ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a8bc:	9d01      	ldr	r5, [sp, #4]
 800a8be:	930f      	str	r3, [sp, #60]	; 0x3c
 800a8c0:	4682      	mov	sl, r0
 800a8c2:	468b      	mov	fp, r1
 800a8c4:	4649      	mov	r1, r9
 800a8c6:	4640      	mov	r0, r8
 800a8c8:	f7f6 f966 	bl	8000b98 <__aeabi_d2iz>
 800a8cc:	4606      	mov	r6, r0
 800a8ce:	f7f5 fe49 	bl	8000564 <__aeabi_i2d>
 800a8d2:	3630      	adds	r6, #48	; 0x30
 800a8d4:	4602      	mov	r2, r0
 800a8d6:	460b      	mov	r3, r1
 800a8d8:	4640      	mov	r0, r8
 800a8da:	4649      	mov	r1, r9
 800a8dc:	f7f5 fcf4 	bl	80002c8 <__aeabi_dsub>
 800a8e0:	f805 6b01 	strb.w	r6, [r5], #1
 800a8e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a8e6:	429d      	cmp	r5, r3
 800a8e8:	4680      	mov	r8, r0
 800a8ea:	4689      	mov	r9, r1
 800a8ec:	f04f 0200 	mov.w	r2, #0
 800a8f0:	d124      	bne.n	800a93c <_dtoa_r+0x60c>
 800a8f2:	4b1b      	ldr	r3, [pc, #108]	; (800a960 <_dtoa_r+0x630>)
 800a8f4:	4650      	mov	r0, sl
 800a8f6:	4659      	mov	r1, fp
 800a8f8:	f7f5 fce8 	bl	80002cc <__adddf3>
 800a8fc:	4602      	mov	r2, r0
 800a8fe:	460b      	mov	r3, r1
 800a900:	4640      	mov	r0, r8
 800a902:	4649      	mov	r1, r9
 800a904:	f7f6 f928 	bl	8000b58 <__aeabi_dcmpgt>
 800a908:	2800      	cmp	r0, #0
 800a90a:	d173      	bne.n	800a9f4 <_dtoa_r+0x6c4>
 800a90c:	4652      	mov	r2, sl
 800a90e:	465b      	mov	r3, fp
 800a910:	4913      	ldr	r1, [pc, #76]	; (800a960 <_dtoa_r+0x630>)
 800a912:	2000      	movs	r0, #0
 800a914:	f7f5 fcd8 	bl	80002c8 <__aeabi_dsub>
 800a918:	4602      	mov	r2, r0
 800a91a:	460b      	mov	r3, r1
 800a91c:	4640      	mov	r0, r8
 800a91e:	4649      	mov	r1, r9
 800a920:	f7f6 f8fc 	bl	8000b1c <__aeabi_dcmplt>
 800a924:	2800      	cmp	r0, #0
 800a926:	f43f af35 	beq.w	800a794 <_dtoa_r+0x464>
 800a92a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800a92c:	1e6b      	subs	r3, r5, #1
 800a92e:	930f      	str	r3, [sp, #60]	; 0x3c
 800a930:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800a934:	2b30      	cmp	r3, #48	; 0x30
 800a936:	d0f8      	beq.n	800a92a <_dtoa_r+0x5fa>
 800a938:	9700      	str	r7, [sp, #0]
 800a93a:	e049      	b.n	800a9d0 <_dtoa_r+0x6a0>
 800a93c:	4b05      	ldr	r3, [pc, #20]	; (800a954 <_dtoa_r+0x624>)
 800a93e:	f7f5 fe7b 	bl	8000638 <__aeabi_dmul>
 800a942:	4680      	mov	r8, r0
 800a944:	4689      	mov	r9, r1
 800a946:	e7bd      	b.n	800a8c4 <_dtoa_r+0x594>
 800a948:	0800cb98 	.word	0x0800cb98
 800a94c:	0800cb70 	.word	0x0800cb70
 800a950:	3ff00000 	.word	0x3ff00000
 800a954:	40240000 	.word	0x40240000
 800a958:	401c0000 	.word	0x401c0000
 800a95c:	40140000 	.word	0x40140000
 800a960:	3fe00000 	.word	0x3fe00000
 800a964:	9d01      	ldr	r5, [sp, #4]
 800a966:	4656      	mov	r6, sl
 800a968:	465f      	mov	r7, fp
 800a96a:	4642      	mov	r2, r8
 800a96c:	464b      	mov	r3, r9
 800a96e:	4630      	mov	r0, r6
 800a970:	4639      	mov	r1, r7
 800a972:	f7f5 ff8b 	bl	800088c <__aeabi_ddiv>
 800a976:	f7f6 f90f 	bl	8000b98 <__aeabi_d2iz>
 800a97a:	4682      	mov	sl, r0
 800a97c:	f7f5 fdf2 	bl	8000564 <__aeabi_i2d>
 800a980:	4642      	mov	r2, r8
 800a982:	464b      	mov	r3, r9
 800a984:	f7f5 fe58 	bl	8000638 <__aeabi_dmul>
 800a988:	4602      	mov	r2, r0
 800a98a:	460b      	mov	r3, r1
 800a98c:	4630      	mov	r0, r6
 800a98e:	4639      	mov	r1, r7
 800a990:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800a994:	f7f5 fc98 	bl	80002c8 <__aeabi_dsub>
 800a998:	f805 6b01 	strb.w	r6, [r5], #1
 800a99c:	9e01      	ldr	r6, [sp, #4]
 800a99e:	9f03      	ldr	r7, [sp, #12]
 800a9a0:	1bae      	subs	r6, r5, r6
 800a9a2:	42b7      	cmp	r7, r6
 800a9a4:	4602      	mov	r2, r0
 800a9a6:	460b      	mov	r3, r1
 800a9a8:	d135      	bne.n	800aa16 <_dtoa_r+0x6e6>
 800a9aa:	f7f5 fc8f 	bl	80002cc <__adddf3>
 800a9ae:	4642      	mov	r2, r8
 800a9b0:	464b      	mov	r3, r9
 800a9b2:	4606      	mov	r6, r0
 800a9b4:	460f      	mov	r7, r1
 800a9b6:	f7f6 f8cf 	bl	8000b58 <__aeabi_dcmpgt>
 800a9ba:	b9d0      	cbnz	r0, 800a9f2 <_dtoa_r+0x6c2>
 800a9bc:	4642      	mov	r2, r8
 800a9be:	464b      	mov	r3, r9
 800a9c0:	4630      	mov	r0, r6
 800a9c2:	4639      	mov	r1, r7
 800a9c4:	f7f6 f8a0 	bl	8000b08 <__aeabi_dcmpeq>
 800a9c8:	b110      	cbz	r0, 800a9d0 <_dtoa_r+0x6a0>
 800a9ca:	f01a 0f01 	tst.w	sl, #1
 800a9ce:	d110      	bne.n	800a9f2 <_dtoa_r+0x6c2>
 800a9d0:	4620      	mov	r0, r4
 800a9d2:	ee18 1a10 	vmov	r1, s16
 800a9d6:	f000 faf7 	bl	800afc8 <_Bfree>
 800a9da:	2300      	movs	r3, #0
 800a9dc:	9800      	ldr	r0, [sp, #0]
 800a9de:	702b      	strb	r3, [r5, #0]
 800a9e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a9e2:	3001      	adds	r0, #1
 800a9e4:	6018      	str	r0, [r3, #0]
 800a9e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a9e8:	2b00      	cmp	r3, #0
 800a9ea:	f43f acf1 	beq.w	800a3d0 <_dtoa_r+0xa0>
 800a9ee:	601d      	str	r5, [r3, #0]
 800a9f0:	e4ee      	b.n	800a3d0 <_dtoa_r+0xa0>
 800a9f2:	9f00      	ldr	r7, [sp, #0]
 800a9f4:	462b      	mov	r3, r5
 800a9f6:	461d      	mov	r5, r3
 800a9f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800a9fc:	2a39      	cmp	r2, #57	; 0x39
 800a9fe:	d106      	bne.n	800aa0e <_dtoa_r+0x6de>
 800aa00:	9a01      	ldr	r2, [sp, #4]
 800aa02:	429a      	cmp	r2, r3
 800aa04:	d1f7      	bne.n	800a9f6 <_dtoa_r+0x6c6>
 800aa06:	9901      	ldr	r1, [sp, #4]
 800aa08:	2230      	movs	r2, #48	; 0x30
 800aa0a:	3701      	adds	r7, #1
 800aa0c:	700a      	strb	r2, [r1, #0]
 800aa0e:	781a      	ldrb	r2, [r3, #0]
 800aa10:	3201      	adds	r2, #1
 800aa12:	701a      	strb	r2, [r3, #0]
 800aa14:	e790      	b.n	800a938 <_dtoa_r+0x608>
 800aa16:	4ba6      	ldr	r3, [pc, #664]	; (800acb0 <_dtoa_r+0x980>)
 800aa18:	2200      	movs	r2, #0
 800aa1a:	f7f5 fe0d 	bl	8000638 <__aeabi_dmul>
 800aa1e:	2200      	movs	r2, #0
 800aa20:	2300      	movs	r3, #0
 800aa22:	4606      	mov	r6, r0
 800aa24:	460f      	mov	r7, r1
 800aa26:	f7f6 f86f 	bl	8000b08 <__aeabi_dcmpeq>
 800aa2a:	2800      	cmp	r0, #0
 800aa2c:	d09d      	beq.n	800a96a <_dtoa_r+0x63a>
 800aa2e:	e7cf      	b.n	800a9d0 <_dtoa_r+0x6a0>
 800aa30:	9a08      	ldr	r2, [sp, #32]
 800aa32:	2a00      	cmp	r2, #0
 800aa34:	f000 80d7 	beq.w	800abe6 <_dtoa_r+0x8b6>
 800aa38:	9a06      	ldr	r2, [sp, #24]
 800aa3a:	2a01      	cmp	r2, #1
 800aa3c:	f300 80ba 	bgt.w	800abb4 <_dtoa_r+0x884>
 800aa40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800aa42:	2a00      	cmp	r2, #0
 800aa44:	f000 80b2 	beq.w	800abac <_dtoa_r+0x87c>
 800aa48:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800aa4c:	9e07      	ldr	r6, [sp, #28]
 800aa4e:	9d04      	ldr	r5, [sp, #16]
 800aa50:	9a04      	ldr	r2, [sp, #16]
 800aa52:	441a      	add	r2, r3
 800aa54:	9204      	str	r2, [sp, #16]
 800aa56:	9a05      	ldr	r2, [sp, #20]
 800aa58:	2101      	movs	r1, #1
 800aa5a:	441a      	add	r2, r3
 800aa5c:	4620      	mov	r0, r4
 800aa5e:	9205      	str	r2, [sp, #20]
 800aa60:	f000 fb6a 	bl	800b138 <__i2b>
 800aa64:	4607      	mov	r7, r0
 800aa66:	2d00      	cmp	r5, #0
 800aa68:	dd0c      	ble.n	800aa84 <_dtoa_r+0x754>
 800aa6a:	9b05      	ldr	r3, [sp, #20]
 800aa6c:	2b00      	cmp	r3, #0
 800aa6e:	dd09      	ble.n	800aa84 <_dtoa_r+0x754>
 800aa70:	42ab      	cmp	r3, r5
 800aa72:	9a04      	ldr	r2, [sp, #16]
 800aa74:	bfa8      	it	ge
 800aa76:	462b      	movge	r3, r5
 800aa78:	1ad2      	subs	r2, r2, r3
 800aa7a:	9204      	str	r2, [sp, #16]
 800aa7c:	9a05      	ldr	r2, [sp, #20]
 800aa7e:	1aed      	subs	r5, r5, r3
 800aa80:	1ad3      	subs	r3, r2, r3
 800aa82:	9305      	str	r3, [sp, #20]
 800aa84:	9b07      	ldr	r3, [sp, #28]
 800aa86:	b31b      	cbz	r3, 800aad0 <_dtoa_r+0x7a0>
 800aa88:	9b08      	ldr	r3, [sp, #32]
 800aa8a:	2b00      	cmp	r3, #0
 800aa8c:	f000 80af 	beq.w	800abee <_dtoa_r+0x8be>
 800aa90:	2e00      	cmp	r6, #0
 800aa92:	dd13      	ble.n	800aabc <_dtoa_r+0x78c>
 800aa94:	4639      	mov	r1, r7
 800aa96:	4632      	mov	r2, r6
 800aa98:	4620      	mov	r0, r4
 800aa9a:	f000 fc0d 	bl	800b2b8 <__pow5mult>
 800aa9e:	ee18 2a10 	vmov	r2, s16
 800aaa2:	4601      	mov	r1, r0
 800aaa4:	4607      	mov	r7, r0
 800aaa6:	4620      	mov	r0, r4
 800aaa8:	f000 fb5c 	bl	800b164 <__multiply>
 800aaac:	ee18 1a10 	vmov	r1, s16
 800aab0:	4680      	mov	r8, r0
 800aab2:	4620      	mov	r0, r4
 800aab4:	f000 fa88 	bl	800afc8 <_Bfree>
 800aab8:	ee08 8a10 	vmov	s16, r8
 800aabc:	9b07      	ldr	r3, [sp, #28]
 800aabe:	1b9a      	subs	r2, r3, r6
 800aac0:	d006      	beq.n	800aad0 <_dtoa_r+0x7a0>
 800aac2:	ee18 1a10 	vmov	r1, s16
 800aac6:	4620      	mov	r0, r4
 800aac8:	f000 fbf6 	bl	800b2b8 <__pow5mult>
 800aacc:	ee08 0a10 	vmov	s16, r0
 800aad0:	2101      	movs	r1, #1
 800aad2:	4620      	mov	r0, r4
 800aad4:	f000 fb30 	bl	800b138 <__i2b>
 800aad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aada:	2b00      	cmp	r3, #0
 800aadc:	4606      	mov	r6, r0
 800aade:	f340 8088 	ble.w	800abf2 <_dtoa_r+0x8c2>
 800aae2:	461a      	mov	r2, r3
 800aae4:	4601      	mov	r1, r0
 800aae6:	4620      	mov	r0, r4
 800aae8:	f000 fbe6 	bl	800b2b8 <__pow5mult>
 800aaec:	9b06      	ldr	r3, [sp, #24]
 800aaee:	2b01      	cmp	r3, #1
 800aaf0:	4606      	mov	r6, r0
 800aaf2:	f340 8081 	ble.w	800abf8 <_dtoa_r+0x8c8>
 800aaf6:	f04f 0800 	mov.w	r8, #0
 800aafa:	6933      	ldr	r3, [r6, #16]
 800aafc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800ab00:	6918      	ldr	r0, [r3, #16]
 800ab02:	f000 fac9 	bl	800b098 <__hi0bits>
 800ab06:	f1c0 0020 	rsb	r0, r0, #32
 800ab0a:	9b05      	ldr	r3, [sp, #20]
 800ab0c:	4418      	add	r0, r3
 800ab0e:	f010 001f 	ands.w	r0, r0, #31
 800ab12:	f000 8092 	beq.w	800ac3a <_dtoa_r+0x90a>
 800ab16:	f1c0 0320 	rsb	r3, r0, #32
 800ab1a:	2b04      	cmp	r3, #4
 800ab1c:	f340 808a 	ble.w	800ac34 <_dtoa_r+0x904>
 800ab20:	f1c0 001c 	rsb	r0, r0, #28
 800ab24:	9b04      	ldr	r3, [sp, #16]
 800ab26:	4403      	add	r3, r0
 800ab28:	9304      	str	r3, [sp, #16]
 800ab2a:	9b05      	ldr	r3, [sp, #20]
 800ab2c:	4403      	add	r3, r0
 800ab2e:	4405      	add	r5, r0
 800ab30:	9305      	str	r3, [sp, #20]
 800ab32:	9b04      	ldr	r3, [sp, #16]
 800ab34:	2b00      	cmp	r3, #0
 800ab36:	dd07      	ble.n	800ab48 <_dtoa_r+0x818>
 800ab38:	ee18 1a10 	vmov	r1, s16
 800ab3c:	461a      	mov	r2, r3
 800ab3e:	4620      	mov	r0, r4
 800ab40:	f000 fc14 	bl	800b36c <__lshift>
 800ab44:	ee08 0a10 	vmov	s16, r0
 800ab48:	9b05      	ldr	r3, [sp, #20]
 800ab4a:	2b00      	cmp	r3, #0
 800ab4c:	dd05      	ble.n	800ab5a <_dtoa_r+0x82a>
 800ab4e:	4631      	mov	r1, r6
 800ab50:	461a      	mov	r2, r3
 800ab52:	4620      	mov	r0, r4
 800ab54:	f000 fc0a 	bl	800b36c <__lshift>
 800ab58:	4606      	mov	r6, r0
 800ab5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ab5c:	2b00      	cmp	r3, #0
 800ab5e:	d06e      	beq.n	800ac3e <_dtoa_r+0x90e>
 800ab60:	ee18 0a10 	vmov	r0, s16
 800ab64:	4631      	mov	r1, r6
 800ab66:	f000 fc71 	bl	800b44c <__mcmp>
 800ab6a:	2800      	cmp	r0, #0
 800ab6c:	da67      	bge.n	800ac3e <_dtoa_r+0x90e>
 800ab6e:	9b00      	ldr	r3, [sp, #0]
 800ab70:	3b01      	subs	r3, #1
 800ab72:	ee18 1a10 	vmov	r1, s16
 800ab76:	9300      	str	r3, [sp, #0]
 800ab78:	220a      	movs	r2, #10
 800ab7a:	2300      	movs	r3, #0
 800ab7c:	4620      	mov	r0, r4
 800ab7e:	f000 fa45 	bl	800b00c <__multadd>
 800ab82:	9b08      	ldr	r3, [sp, #32]
 800ab84:	ee08 0a10 	vmov	s16, r0
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	f000 81b1 	beq.w	800aef0 <_dtoa_r+0xbc0>
 800ab8e:	2300      	movs	r3, #0
 800ab90:	4639      	mov	r1, r7
 800ab92:	220a      	movs	r2, #10
 800ab94:	4620      	mov	r0, r4
 800ab96:	f000 fa39 	bl	800b00c <__multadd>
 800ab9a:	9b02      	ldr	r3, [sp, #8]
 800ab9c:	2b00      	cmp	r3, #0
 800ab9e:	4607      	mov	r7, r0
 800aba0:	f300 808e 	bgt.w	800acc0 <_dtoa_r+0x990>
 800aba4:	9b06      	ldr	r3, [sp, #24]
 800aba6:	2b02      	cmp	r3, #2
 800aba8:	dc51      	bgt.n	800ac4e <_dtoa_r+0x91e>
 800abaa:	e089      	b.n	800acc0 <_dtoa_r+0x990>
 800abac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800abae:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800abb2:	e74b      	b.n	800aa4c <_dtoa_r+0x71c>
 800abb4:	9b03      	ldr	r3, [sp, #12]
 800abb6:	1e5e      	subs	r6, r3, #1
 800abb8:	9b07      	ldr	r3, [sp, #28]
 800abba:	42b3      	cmp	r3, r6
 800abbc:	bfbf      	itttt	lt
 800abbe:	9b07      	ldrlt	r3, [sp, #28]
 800abc0:	9607      	strlt	r6, [sp, #28]
 800abc2:	1af2      	sublt	r2, r6, r3
 800abc4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800abc6:	bfb6      	itet	lt
 800abc8:	189b      	addlt	r3, r3, r2
 800abca:	1b9e      	subge	r6, r3, r6
 800abcc:	930a      	strlt	r3, [sp, #40]	; 0x28
 800abce:	9b03      	ldr	r3, [sp, #12]
 800abd0:	bfb8      	it	lt
 800abd2:	2600      	movlt	r6, #0
 800abd4:	2b00      	cmp	r3, #0
 800abd6:	bfb7      	itett	lt
 800abd8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800abdc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800abe0:	1a9d      	sublt	r5, r3, r2
 800abe2:	2300      	movlt	r3, #0
 800abe4:	e734      	b.n	800aa50 <_dtoa_r+0x720>
 800abe6:	9e07      	ldr	r6, [sp, #28]
 800abe8:	9d04      	ldr	r5, [sp, #16]
 800abea:	9f08      	ldr	r7, [sp, #32]
 800abec:	e73b      	b.n	800aa66 <_dtoa_r+0x736>
 800abee:	9a07      	ldr	r2, [sp, #28]
 800abf0:	e767      	b.n	800aac2 <_dtoa_r+0x792>
 800abf2:	9b06      	ldr	r3, [sp, #24]
 800abf4:	2b01      	cmp	r3, #1
 800abf6:	dc18      	bgt.n	800ac2a <_dtoa_r+0x8fa>
 800abf8:	f1ba 0f00 	cmp.w	sl, #0
 800abfc:	d115      	bne.n	800ac2a <_dtoa_r+0x8fa>
 800abfe:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800ac02:	b993      	cbnz	r3, 800ac2a <_dtoa_r+0x8fa>
 800ac04:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800ac08:	0d1b      	lsrs	r3, r3, #20
 800ac0a:	051b      	lsls	r3, r3, #20
 800ac0c:	b183      	cbz	r3, 800ac30 <_dtoa_r+0x900>
 800ac0e:	9b04      	ldr	r3, [sp, #16]
 800ac10:	3301      	adds	r3, #1
 800ac12:	9304      	str	r3, [sp, #16]
 800ac14:	9b05      	ldr	r3, [sp, #20]
 800ac16:	3301      	adds	r3, #1
 800ac18:	9305      	str	r3, [sp, #20]
 800ac1a:	f04f 0801 	mov.w	r8, #1
 800ac1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ac20:	2b00      	cmp	r3, #0
 800ac22:	f47f af6a 	bne.w	800aafa <_dtoa_r+0x7ca>
 800ac26:	2001      	movs	r0, #1
 800ac28:	e76f      	b.n	800ab0a <_dtoa_r+0x7da>
 800ac2a:	f04f 0800 	mov.w	r8, #0
 800ac2e:	e7f6      	b.n	800ac1e <_dtoa_r+0x8ee>
 800ac30:	4698      	mov	r8, r3
 800ac32:	e7f4      	b.n	800ac1e <_dtoa_r+0x8ee>
 800ac34:	f43f af7d 	beq.w	800ab32 <_dtoa_r+0x802>
 800ac38:	4618      	mov	r0, r3
 800ac3a:	301c      	adds	r0, #28
 800ac3c:	e772      	b.n	800ab24 <_dtoa_r+0x7f4>
 800ac3e:	9b03      	ldr	r3, [sp, #12]
 800ac40:	2b00      	cmp	r3, #0
 800ac42:	dc37      	bgt.n	800acb4 <_dtoa_r+0x984>
 800ac44:	9b06      	ldr	r3, [sp, #24]
 800ac46:	2b02      	cmp	r3, #2
 800ac48:	dd34      	ble.n	800acb4 <_dtoa_r+0x984>
 800ac4a:	9b03      	ldr	r3, [sp, #12]
 800ac4c:	9302      	str	r3, [sp, #8]
 800ac4e:	9b02      	ldr	r3, [sp, #8]
 800ac50:	b96b      	cbnz	r3, 800ac6e <_dtoa_r+0x93e>
 800ac52:	4631      	mov	r1, r6
 800ac54:	2205      	movs	r2, #5
 800ac56:	4620      	mov	r0, r4
 800ac58:	f000 f9d8 	bl	800b00c <__multadd>
 800ac5c:	4601      	mov	r1, r0
 800ac5e:	4606      	mov	r6, r0
 800ac60:	ee18 0a10 	vmov	r0, s16
 800ac64:	f000 fbf2 	bl	800b44c <__mcmp>
 800ac68:	2800      	cmp	r0, #0
 800ac6a:	f73f adbb 	bgt.w	800a7e4 <_dtoa_r+0x4b4>
 800ac6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac70:	9d01      	ldr	r5, [sp, #4]
 800ac72:	43db      	mvns	r3, r3
 800ac74:	9300      	str	r3, [sp, #0]
 800ac76:	f04f 0800 	mov.w	r8, #0
 800ac7a:	4631      	mov	r1, r6
 800ac7c:	4620      	mov	r0, r4
 800ac7e:	f000 f9a3 	bl	800afc8 <_Bfree>
 800ac82:	2f00      	cmp	r7, #0
 800ac84:	f43f aea4 	beq.w	800a9d0 <_dtoa_r+0x6a0>
 800ac88:	f1b8 0f00 	cmp.w	r8, #0
 800ac8c:	d005      	beq.n	800ac9a <_dtoa_r+0x96a>
 800ac8e:	45b8      	cmp	r8, r7
 800ac90:	d003      	beq.n	800ac9a <_dtoa_r+0x96a>
 800ac92:	4641      	mov	r1, r8
 800ac94:	4620      	mov	r0, r4
 800ac96:	f000 f997 	bl	800afc8 <_Bfree>
 800ac9a:	4639      	mov	r1, r7
 800ac9c:	4620      	mov	r0, r4
 800ac9e:	f000 f993 	bl	800afc8 <_Bfree>
 800aca2:	e695      	b.n	800a9d0 <_dtoa_r+0x6a0>
 800aca4:	2600      	movs	r6, #0
 800aca6:	4637      	mov	r7, r6
 800aca8:	e7e1      	b.n	800ac6e <_dtoa_r+0x93e>
 800acaa:	9700      	str	r7, [sp, #0]
 800acac:	4637      	mov	r7, r6
 800acae:	e599      	b.n	800a7e4 <_dtoa_r+0x4b4>
 800acb0:	40240000 	.word	0x40240000
 800acb4:	9b08      	ldr	r3, [sp, #32]
 800acb6:	2b00      	cmp	r3, #0
 800acb8:	f000 80ca 	beq.w	800ae50 <_dtoa_r+0xb20>
 800acbc:	9b03      	ldr	r3, [sp, #12]
 800acbe:	9302      	str	r3, [sp, #8]
 800acc0:	2d00      	cmp	r5, #0
 800acc2:	dd05      	ble.n	800acd0 <_dtoa_r+0x9a0>
 800acc4:	4639      	mov	r1, r7
 800acc6:	462a      	mov	r2, r5
 800acc8:	4620      	mov	r0, r4
 800acca:	f000 fb4f 	bl	800b36c <__lshift>
 800acce:	4607      	mov	r7, r0
 800acd0:	f1b8 0f00 	cmp.w	r8, #0
 800acd4:	d05b      	beq.n	800ad8e <_dtoa_r+0xa5e>
 800acd6:	6879      	ldr	r1, [r7, #4]
 800acd8:	4620      	mov	r0, r4
 800acda:	f000 f935 	bl	800af48 <_Balloc>
 800acde:	4605      	mov	r5, r0
 800ace0:	b928      	cbnz	r0, 800acee <_dtoa_r+0x9be>
 800ace2:	4b87      	ldr	r3, [pc, #540]	; (800af00 <_dtoa_r+0xbd0>)
 800ace4:	4602      	mov	r2, r0
 800ace6:	f240 21ea 	movw	r1, #746	; 0x2ea
 800acea:	f7ff bb3b 	b.w	800a364 <_dtoa_r+0x34>
 800acee:	693a      	ldr	r2, [r7, #16]
 800acf0:	3202      	adds	r2, #2
 800acf2:	0092      	lsls	r2, r2, #2
 800acf4:	f107 010c 	add.w	r1, r7, #12
 800acf8:	300c      	adds	r0, #12
 800acfa:	f000 f90b 	bl	800af14 <memcpy>
 800acfe:	2201      	movs	r2, #1
 800ad00:	4629      	mov	r1, r5
 800ad02:	4620      	mov	r0, r4
 800ad04:	f000 fb32 	bl	800b36c <__lshift>
 800ad08:	9b01      	ldr	r3, [sp, #4]
 800ad0a:	f103 0901 	add.w	r9, r3, #1
 800ad0e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ad12:	4413      	add	r3, r2
 800ad14:	9305      	str	r3, [sp, #20]
 800ad16:	f00a 0301 	and.w	r3, sl, #1
 800ad1a:	46b8      	mov	r8, r7
 800ad1c:	9304      	str	r3, [sp, #16]
 800ad1e:	4607      	mov	r7, r0
 800ad20:	4631      	mov	r1, r6
 800ad22:	ee18 0a10 	vmov	r0, s16
 800ad26:	f7ff fa78 	bl	800a21a <quorem>
 800ad2a:	4641      	mov	r1, r8
 800ad2c:	9002      	str	r0, [sp, #8]
 800ad2e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800ad32:	ee18 0a10 	vmov	r0, s16
 800ad36:	f000 fb89 	bl	800b44c <__mcmp>
 800ad3a:	463a      	mov	r2, r7
 800ad3c:	9003      	str	r0, [sp, #12]
 800ad3e:	4631      	mov	r1, r6
 800ad40:	4620      	mov	r0, r4
 800ad42:	f000 fb9f 	bl	800b484 <__mdiff>
 800ad46:	68c2      	ldr	r2, [r0, #12]
 800ad48:	f109 3bff 	add.w	fp, r9, #4294967295	; 0xffffffff
 800ad4c:	4605      	mov	r5, r0
 800ad4e:	bb02      	cbnz	r2, 800ad92 <_dtoa_r+0xa62>
 800ad50:	4601      	mov	r1, r0
 800ad52:	ee18 0a10 	vmov	r0, s16
 800ad56:	f000 fb79 	bl	800b44c <__mcmp>
 800ad5a:	4602      	mov	r2, r0
 800ad5c:	4629      	mov	r1, r5
 800ad5e:	4620      	mov	r0, r4
 800ad60:	9207      	str	r2, [sp, #28]
 800ad62:	f000 f931 	bl	800afc8 <_Bfree>
 800ad66:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ad6a:	ea43 0102 	orr.w	r1, r3, r2
 800ad6e:	9b04      	ldr	r3, [sp, #16]
 800ad70:	430b      	orrs	r3, r1
 800ad72:	464d      	mov	r5, r9
 800ad74:	d10f      	bne.n	800ad96 <_dtoa_r+0xa66>
 800ad76:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800ad7a:	d02a      	beq.n	800add2 <_dtoa_r+0xaa2>
 800ad7c:	9b03      	ldr	r3, [sp, #12]
 800ad7e:	2b00      	cmp	r3, #0
 800ad80:	dd02      	ble.n	800ad88 <_dtoa_r+0xa58>
 800ad82:	9b02      	ldr	r3, [sp, #8]
 800ad84:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800ad88:	f88b a000 	strb.w	sl, [fp]
 800ad8c:	e775      	b.n	800ac7a <_dtoa_r+0x94a>
 800ad8e:	4638      	mov	r0, r7
 800ad90:	e7ba      	b.n	800ad08 <_dtoa_r+0x9d8>
 800ad92:	2201      	movs	r2, #1
 800ad94:	e7e2      	b.n	800ad5c <_dtoa_r+0xa2c>
 800ad96:	9b03      	ldr	r3, [sp, #12]
 800ad98:	2b00      	cmp	r3, #0
 800ad9a:	db04      	blt.n	800ada6 <_dtoa_r+0xa76>
 800ad9c:	9906      	ldr	r1, [sp, #24]
 800ad9e:	430b      	orrs	r3, r1
 800ada0:	9904      	ldr	r1, [sp, #16]
 800ada2:	430b      	orrs	r3, r1
 800ada4:	d122      	bne.n	800adec <_dtoa_r+0xabc>
 800ada6:	2a00      	cmp	r2, #0
 800ada8:	ddee      	ble.n	800ad88 <_dtoa_r+0xa58>
 800adaa:	ee18 1a10 	vmov	r1, s16
 800adae:	2201      	movs	r2, #1
 800adb0:	4620      	mov	r0, r4
 800adb2:	f000 fadb 	bl	800b36c <__lshift>
 800adb6:	4631      	mov	r1, r6
 800adb8:	ee08 0a10 	vmov	s16, r0
 800adbc:	f000 fb46 	bl	800b44c <__mcmp>
 800adc0:	2800      	cmp	r0, #0
 800adc2:	dc03      	bgt.n	800adcc <_dtoa_r+0xa9c>
 800adc4:	d1e0      	bne.n	800ad88 <_dtoa_r+0xa58>
 800adc6:	f01a 0f01 	tst.w	sl, #1
 800adca:	d0dd      	beq.n	800ad88 <_dtoa_r+0xa58>
 800adcc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800add0:	d1d7      	bne.n	800ad82 <_dtoa_r+0xa52>
 800add2:	2339      	movs	r3, #57	; 0x39
 800add4:	f88b 3000 	strb.w	r3, [fp]
 800add8:	462b      	mov	r3, r5
 800adda:	461d      	mov	r5, r3
 800addc:	3b01      	subs	r3, #1
 800adde:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800ade2:	2a39      	cmp	r2, #57	; 0x39
 800ade4:	d071      	beq.n	800aeca <_dtoa_r+0xb9a>
 800ade6:	3201      	adds	r2, #1
 800ade8:	701a      	strb	r2, [r3, #0]
 800adea:	e746      	b.n	800ac7a <_dtoa_r+0x94a>
 800adec:	2a00      	cmp	r2, #0
 800adee:	dd07      	ble.n	800ae00 <_dtoa_r+0xad0>
 800adf0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800adf4:	d0ed      	beq.n	800add2 <_dtoa_r+0xaa2>
 800adf6:	f10a 0301 	add.w	r3, sl, #1
 800adfa:	f88b 3000 	strb.w	r3, [fp]
 800adfe:	e73c      	b.n	800ac7a <_dtoa_r+0x94a>
 800ae00:	9b05      	ldr	r3, [sp, #20]
 800ae02:	f809 ac01 	strb.w	sl, [r9, #-1]
 800ae06:	4599      	cmp	r9, r3
 800ae08:	d047      	beq.n	800ae9a <_dtoa_r+0xb6a>
 800ae0a:	ee18 1a10 	vmov	r1, s16
 800ae0e:	2300      	movs	r3, #0
 800ae10:	220a      	movs	r2, #10
 800ae12:	4620      	mov	r0, r4
 800ae14:	f000 f8fa 	bl	800b00c <__multadd>
 800ae18:	45b8      	cmp	r8, r7
 800ae1a:	ee08 0a10 	vmov	s16, r0
 800ae1e:	f04f 0300 	mov.w	r3, #0
 800ae22:	f04f 020a 	mov.w	r2, #10
 800ae26:	4641      	mov	r1, r8
 800ae28:	4620      	mov	r0, r4
 800ae2a:	d106      	bne.n	800ae3a <_dtoa_r+0xb0a>
 800ae2c:	f000 f8ee 	bl	800b00c <__multadd>
 800ae30:	4680      	mov	r8, r0
 800ae32:	4607      	mov	r7, r0
 800ae34:	f109 0901 	add.w	r9, r9, #1
 800ae38:	e772      	b.n	800ad20 <_dtoa_r+0x9f0>
 800ae3a:	f000 f8e7 	bl	800b00c <__multadd>
 800ae3e:	4639      	mov	r1, r7
 800ae40:	4680      	mov	r8, r0
 800ae42:	2300      	movs	r3, #0
 800ae44:	220a      	movs	r2, #10
 800ae46:	4620      	mov	r0, r4
 800ae48:	f000 f8e0 	bl	800b00c <__multadd>
 800ae4c:	4607      	mov	r7, r0
 800ae4e:	e7f1      	b.n	800ae34 <_dtoa_r+0xb04>
 800ae50:	9b03      	ldr	r3, [sp, #12]
 800ae52:	9302      	str	r3, [sp, #8]
 800ae54:	9d01      	ldr	r5, [sp, #4]
 800ae56:	ee18 0a10 	vmov	r0, s16
 800ae5a:	4631      	mov	r1, r6
 800ae5c:	f7ff f9dd 	bl	800a21a <quorem>
 800ae60:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800ae64:	9b01      	ldr	r3, [sp, #4]
 800ae66:	f805 ab01 	strb.w	sl, [r5], #1
 800ae6a:	1aea      	subs	r2, r5, r3
 800ae6c:	9b02      	ldr	r3, [sp, #8]
 800ae6e:	4293      	cmp	r3, r2
 800ae70:	dd09      	ble.n	800ae86 <_dtoa_r+0xb56>
 800ae72:	ee18 1a10 	vmov	r1, s16
 800ae76:	2300      	movs	r3, #0
 800ae78:	220a      	movs	r2, #10
 800ae7a:	4620      	mov	r0, r4
 800ae7c:	f000 f8c6 	bl	800b00c <__multadd>
 800ae80:	ee08 0a10 	vmov	s16, r0
 800ae84:	e7e7      	b.n	800ae56 <_dtoa_r+0xb26>
 800ae86:	9b02      	ldr	r3, [sp, #8]
 800ae88:	2b00      	cmp	r3, #0
 800ae8a:	bfc8      	it	gt
 800ae8c:	461d      	movgt	r5, r3
 800ae8e:	9b01      	ldr	r3, [sp, #4]
 800ae90:	bfd8      	it	le
 800ae92:	2501      	movle	r5, #1
 800ae94:	441d      	add	r5, r3
 800ae96:	f04f 0800 	mov.w	r8, #0
 800ae9a:	ee18 1a10 	vmov	r1, s16
 800ae9e:	2201      	movs	r2, #1
 800aea0:	4620      	mov	r0, r4
 800aea2:	f000 fa63 	bl	800b36c <__lshift>
 800aea6:	4631      	mov	r1, r6
 800aea8:	ee08 0a10 	vmov	s16, r0
 800aeac:	f000 face 	bl	800b44c <__mcmp>
 800aeb0:	2800      	cmp	r0, #0
 800aeb2:	dc91      	bgt.n	800add8 <_dtoa_r+0xaa8>
 800aeb4:	d102      	bne.n	800aebc <_dtoa_r+0xb8c>
 800aeb6:	f01a 0f01 	tst.w	sl, #1
 800aeba:	d18d      	bne.n	800add8 <_dtoa_r+0xaa8>
 800aebc:	462b      	mov	r3, r5
 800aebe:	461d      	mov	r5, r3
 800aec0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800aec4:	2a30      	cmp	r2, #48	; 0x30
 800aec6:	d0fa      	beq.n	800aebe <_dtoa_r+0xb8e>
 800aec8:	e6d7      	b.n	800ac7a <_dtoa_r+0x94a>
 800aeca:	9a01      	ldr	r2, [sp, #4]
 800aecc:	429a      	cmp	r2, r3
 800aece:	d184      	bne.n	800adda <_dtoa_r+0xaaa>
 800aed0:	9b00      	ldr	r3, [sp, #0]
 800aed2:	3301      	adds	r3, #1
 800aed4:	9300      	str	r3, [sp, #0]
 800aed6:	2331      	movs	r3, #49	; 0x31
 800aed8:	7013      	strb	r3, [r2, #0]
 800aeda:	e6ce      	b.n	800ac7a <_dtoa_r+0x94a>
 800aedc:	4b09      	ldr	r3, [pc, #36]	; (800af04 <_dtoa_r+0xbd4>)
 800aede:	f7ff ba95 	b.w	800a40c <_dtoa_r+0xdc>
 800aee2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800aee4:	2b00      	cmp	r3, #0
 800aee6:	f47f aa6e 	bne.w	800a3c6 <_dtoa_r+0x96>
 800aeea:	4b07      	ldr	r3, [pc, #28]	; (800af08 <_dtoa_r+0xbd8>)
 800aeec:	f7ff ba8e 	b.w	800a40c <_dtoa_r+0xdc>
 800aef0:	9b02      	ldr	r3, [sp, #8]
 800aef2:	2b00      	cmp	r3, #0
 800aef4:	dcae      	bgt.n	800ae54 <_dtoa_r+0xb24>
 800aef6:	9b06      	ldr	r3, [sp, #24]
 800aef8:	2b02      	cmp	r3, #2
 800aefa:	f73f aea8 	bgt.w	800ac4e <_dtoa_r+0x91e>
 800aefe:	e7a9      	b.n	800ae54 <_dtoa_r+0xb24>
 800af00:	0800cb03 	.word	0x0800cb03
 800af04:	0800ca60 	.word	0x0800ca60
 800af08:	0800ca84 	.word	0x0800ca84

0800af0c <_localeconv_r>:
 800af0c:	4800      	ldr	r0, [pc, #0]	; (800af10 <_localeconv_r+0x4>)
 800af0e:	4770      	bx	lr
 800af10:	20002550 	.word	0x20002550

0800af14 <memcpy>:
 800af14:	440a      	add	r2, r1
 800af16:	4291      	cmp	r1, r2
 800af18:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800af1c:	d100      	bne.n	800af20 <memcpy+0xc>
 800af1e:	4770      	bx	lr
 800af20:	b510      	push	{r4, lr}
 800af22:	f811 4b01 	ldrb.w	r4, [r1], #1
 800af26:	f803 4f01 	strb.w	r4, [r3, #1]!
 800af2a:	4291      	cmp	r1, r2
 800af2c:	d1f9      	bne.n	800af22 <memcpy+0xe>
 800af2e:	bd10      	pop	{r4, pc}

0800af30 <__malloc_lock>:
 800af30:	4801      	ldr	r0, [pc, #4]	; (800af38 <__malloc_lock+0x8>)
 800af32:	f000 bd30 	b.w	800b996 <__retarget_lock_acquire_recursive>
 800af36:	bf00      	nop
 800af38:	2000327c 	.word	0x2000327c

0800af3c <__malloc_unlock>:
 800af3c:	4801      	ldr	r0, [pc, #4]	; (800af44 <__malloc_unlock+0x8>)
 800af3e:	f000 bd2b 	b.w	800b998 <__retarget_lock_release_recursive>
 800af42:	bf00      	nop
 800af44:	2000327c 	.word	0x2000327c

0800af48 <_Balloc>:
 800af48:	b570      	push	{r4, r5, r6, lr}
 800af4a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800af4c:	4604      	mov	r4, r0
 800af4e:	460d      	mov	r5, r1
 800af50:	b976      	cbnz	r6, 800af70 <_Balloc+0x28>
 800af52:	2010      	movs	r0, #16
 800af54:	f7fe fbbc 	bl	80096d0 <malloc>
 800af58:	4602      	mov	r2, r0
 800af5a:	6260      	str	r0, [r4, #36]	; 0x24
 800af5c:	b920      	cbnz	r0, 800af68 <_Balloc+0x20>
 800af5e:	4b18      	ldr	r3, [pc, #96]	; (800afc0 <_Balloc+0x78>)
 800af60:	4818      	ldr	r0, [pc, #96]	; (800afc4 <_Balloc+0x7c>)
 800af62:	2166      	movs	r1, #102	; 0x66
 800af64:	f000 fce6 	bl	800b934 <__assert_func>
 800af68:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800af6c:	6006      	str	r6, [r0, #0]
 800af6e:	60c6      	str	r6, [r0, #12]
 800af70:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800af72:	68f3      	ldr	r3, [r6, #12]
 800af74:	b183      	cbz	r3, 800af98 <_Balloc+0x50>
 800af76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800af78:	68db      	ldr	r3, [r3, #12]
 800af7a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800af7e:	b9b8      	cbnz	r0, 800afb0 <_Balloc+0x68>
 800af80:	2101      	movs	r1, #1
 800af82:	fa01 f605 	lsl.w	r6, r1, r5
 800af86:	1d72      	adds	r2, r6, #5
 800af88:	0092      	lsls	r2, r2, #2
 800af8a:	4620      	mov	r0, r4
 800af8c:	f000 fb60 	bl	800b650 <_calloc_r>
 800af90:	b160      	cbz	r0, 800afac <_Balloc+0x64>
 800af92:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800af96:	e00e      	b.n	800afb6 <_Balloc+0x6e>
 800af98:	2221      	movs	r2, #33	; 0x21
 800af9a:	2104      	movs	r1, #4
 800af9c:	4620      	mov	r0, r4
 800af9e:	f000 fb57 	bl	800b650 <_calloc_r>
 800afa2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800afa4:	60f0      	str	r0, [r6, #12]
 800afa6:	68db      	ldr	r3, [r3, #12]
 800afa8:	2b00      	cmp	r3, #0
 800afaa:	d1e4      	bne.n	800af76 <_Balloc+0x2e>
 800afac:	2000      	movs	r0, #0
 800afae:	bd70      	pop	{r4, r5, r6, pc}
 800afb0:	6802      	ldr	r2, [r0, #0]
 800afb2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800afb6:	2300      	movs	r3, #0
 800afb8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800afbc:	e7f7      	b.n	800afae <_Balloc+0x66>
 800afbe:	bf00      	nop
 800afc0:	0800ca91 	.word	0x0800ca91
 800afc4:	0800cb14 	.word	0x0800cb14

0800afc8 <_Bfree>:
 800afc8:	b570      	push	{r4, r5, r6, lr}
 800afca:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800afcc:	4605      	mov	r5, r0
 800afce:	460c      	mov	r4, r1
 800afd0:	b976      	cbnz	r6, 800aff0 <_Bfree+0x28>
 800afd2:	2010      	movs	r0, #16
 800afd4:	f7fe fb7c 	bl	80096d0 <malloc>
 800afd8:	4602      	mov	r2, r0
 800afda:	6268      	str	r0, [r5, #36]	; 0x24
 800afdc:	b920      	cbnz	r0, 800afe8 <_Bfree+0x20>
 800afde:	4b09      	ldr	r3, [pc, #36]	; (800b004 <_Bfree+0x3c>)
 800afe0:	4809      	ldr	r0, [pc, #36]	; (800b008 <_Bfree+0x40>)
 800afe2:	218a      	movs	r1, #138	; 0x8a
 800afe4:	f000 fca6 	bl	800b934 <__assert_func>
 800afe8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800afec:	6006      	str	r6, [r0, #0]
 800afee:	60c6      	str	r6, [r0, #12]
 800aff0:	b13c      	cbz	r4, 800b002 <_Bfree+0x3a>
 800aff2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800aff4:	6862      	ldr	r2, [r4, #4]
 800aff6:	68db      	ldr	r3, [r3, #12]
 800aff8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800affc:	6021      	str	r1, [r4, #0]
 800affe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800b002:	bd70      	pop	{r4, r5, r6, pc}
 800b004:	0800ca91 	.word	0x0800ca91
 800b008:	0800cb14 	.word	0x0800cb14

0800b00c <__multadd>:
 800b00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b010:	690d      	ldr	r5, [r1, #16]
 800b012:	4607      	mov	r7, r0
 800b014:	460c      	mov	r4, r1
 800b016:	461e      	mov	r6, r3
 800b018:	f101 0c14 	add.w	ip, r1, #20
 800b01c:	2000      	movs	r0, #0
 800b01e:	f8dc 3000 	ldr.w	r3, [ip]
 800b022:	b299      	uxth	r1, r3
 800b024:	fb02 6101 	mla	r1, r2, r1, r6
 800b028:	0c1e      	lsrs	r6, r3, #16
 800b02a:	0c0b      	lsrs	r3, r1, #16
 800b02c:	fb02 3306 	mla	r3, r2, r6, r3
 800b030:	b289      	uxth	r1, r1
 800b032:	3001      	adds	r0, #1
 800b034:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800b038:	4285      	cmp	r5, r0
 800b03a:	f84c 1b04 	str.w	r1, [ip], #4
 800b03e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800b042:	dcec      	bgt.n	800b01e <__multadd+0x12>
 800b044:	b30e      	cbz	r6, 800b08a <__multadd+0x7e>
 800b046:	68a3      	ldr	r3, [r4, #8]
 800b048:	42ab      	cmp	r3, r5
 800b04a:	dc19      	bgt.n	800b080 <__multadd+0x74>
 800b04c:	6861      	ldr	r1, [r4, #4]
 800b04e:	4638      	mov	r0, r7
 800b050:	3101      	adds	r1, #1
 800b052:	f7ff ff79 	bl	800af48 <_Balloc>
 800b056:	4680      	mov	r8, r0
 800b058:	b928      	cbnz	r0, 800b066 <__multadd+0x5a>
 800b05a:	4602      	mov	r2, r0
 800b05c:	4b0c      	ldr	r3, [pc, #48]	; (800b090 <__multadd+0x84>)
 800b05e:	480d      	ldr	r0, [pc, #52]	; (800b094 <__multadd+0x88>)
 800b060:	21b5      	movs	r1, #181	; 0xb5
 800b062:	f000 fc67 	bl	800b934 <__assert_func>
 800b066:	6922      	ldr	r2, [r4, #16]
 800b068:	3202      	adds	r2, #2
 800b06a:	f104 010c 	add.w	r1, r4, #12
 800b06e:	0092      	lsls	r2, r2, #2
 800b070:	300c      	adds	r0, #12
 800b072:	f7ff ff4f 	bl	800af14 <memcpy>
 800b076:	4621      	mov	r1, r4
 800b078:	4638      	mov	r0, r7
 800b07a:	f7ff ffa5 	bl	800afc8 <_Bfree>
 800b07e:	4644      	mov	r4, r8
 800b080:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800b084:	3501      	adds	r5, #1
 800b086:	615e      	str	r6, [r3, #20]
 800b088:	6125      	str	r5, [r4, #16]
 800b08a:	4620      	mov	r0, r4
 800b08c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b090:	0800cb03 	.word	0x0800cb03
 800b094:	0800cb14 	.word	0x0800cb14

0800b098 <__hi0bits>:
 800b098:	0c03      	lsrs	r3, r0, #16
 800b09a:	041b      	lsls	r3, r3, #16
 800b09c:	b9d3      	cbnz	r3, 800b0d4 <__hi0bits+0x3c>
 800b09e:	0400      	lsls	r0, r0, #16
 800b0a0:	2310      	movs	r3, #16
 800b0a2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800b0a6:	bf04      	itt	eq
 800b0a8:	0200      	lsleq	r0, r0, #8
 800b0aa:	3308      	addeq	r3, #8
 800b0ac:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800b0b0:	bf04      	itt	eq
 800b0b2:	0100      	lsleq	r0, r0, #4
 800b0b4:	3304      	addeq	r3, #4
 800b0b6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800b0ba:	bf04      	itt	eq
 800b0bc:	0080      	lsleq	r0, r0, #2
 800b0be:	3302      	addeq	r3, #2
 800b0c0:	2800      	cmp	r0, #0
 800b0c2:	db05      	blt.n	800b0d0 <__hi0bits+0x38>
 800b0c4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800b0c8:	f103 0301 	add.w	r3, r3, #1
 800b0cc:	bf08      	it	eq
 800b0ce:	2320      	moveq	r3, #32
 800b0d0:	4618      	mov	r0, r3
 800b0d2:	4770      	bx	lr
 800b0d4:	2300      	movs	r3, #0
 800b0d6:	e7e4      	b.n	800b0a2 <__hi0bits+0xa>

0800b0d8 <__lo0bits>:
 800b0d8:	6803      	ldr	r3, [r0, #0]
 800b0da:	f013 0207 	ands.w	r2, r3, #7
 800b0de:	4601      	mov	r1, r0
 800b0e0:	d00b      	beq.n	800b0fa <__lo0bits+0x22>
 800b0e2:	07da      	lsls	r2, r3, #31
 800b0e4:	d423      	bmi.n	800b12e <__lo0bits+0x56>
 800b0e6:	0798      	lsls	r0, r3, #30
 800b0e8:	bf49      	itett	mi
 800b0ea:	085b      	lsrmi	r3, r3, #1
 800b0ec:	089b      	lsrpl	r3, r3, #2
 800b0ee:	2001      	movmi	r0, #1
 800b0f0:	600b      	strmi	r3, [r1, #0]
 800b0f2:	bf5c      	itt	pl
 800b0f4:	600b      	strpl	r3, [r1, #0]
 800b0f6:	2002      	movpl	r0, #2
 800b0f8:	4770      	bx	lr
 800b0fa:	b298      	uxth	r0, r3
 800b0fc:	b9a8      	cbnz	r0, 800b12a <__lo0bits+0x52>
 800b0fe:	0c1b      	lsrs	r3, r3, #16
 800b100:	2010      	movs	r0, #16
 800b102:	b2da      	uxtb	r2, r3
 800b104:	b90a      	cbnz	r2, 800b10a <__lo0bits+0x32>
 800b106:	3008      	adds	r0, #8
 800b108:	0a1b      	lsrs	r3, r3, #8
 800b10a:	071a      	lsls	r2, r3, #28
 800b10c:	bf04      	itt	eq
 800b10e:	091b      	lsreq	r3, r3, #4
 800b110:	3004      	addeq	r0, #4
 800b112:	079a      	lsls	r2, r3, #30
 800b114:	bf04      	itt	eq
 800b116:	089b      	lsreq	r3, r3, #2
 800b118:	3002      	addeq	r0, #2
 800b11a:	07da      	lsls	r2, r3, #31
 800b11c:	d403      	bmi.n	800b126 <__lo0bits+0x4e>
 800b11e:	085b      	lsrs	r3, r3, #1
 800b120:	f100 0001 	add.w	r0, r0, #1
 800b124:	d005      	beq.n	800b132 <__lo0bits+0x5a>
 800b126:	600b      	str	r3, [r1, #0]
 800b128:	4770      	bx	lr
 800b12a:	4610      	mov	r0, r2
 800b12c:	e7e9      	b.n	800b102 <__lo0bits+0x2a>
 800b12e:	2000      	movs	r0, #0
 800b130:	4770      	bx	lr
 800b132:	2020      	movs	r0, #32
 800b134:	4770      	bx	lr
	...

0800b138 <__i2b>:
 800b138:	b510      	push	{r4, lr}
 800b13a:	460c      	mov	r4, r1
 800b13c:	2101      	movs	r1, #1
 800b13e:	f7ff ff03 	bl	800af48 <_Balloc>
 800b142:	4602      	mov	r2, r0
 800b144:	b928      	cbnz	r0, 800b152 <__i2b+0x1a>
 800b146:	4b05      	ldr	r3, [pc, #20]	; (800b15c <__i2b+0x24>)
 800b148:	4805      	ldr	r0, [pc, #20]	; (800b160 <__i2b+0x28>)
 800b14a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800b14e:	f000 fbf1 	bl	800b934 <__assert_func>
 800b152:	2301      	movs	r3, #1
 800b154:	6144      	str	r4, [r0, #20]
 800b156:	6103      	str	r3, [r0, #16]
 800b158:	bd10      	pop	{r4, pc}
 800b15a:	bf00      	nop
 800b15c:	0800cb03 	.word	0x0800cb03
 800b160:	0800cb14 	.word	0x0800cb14

0800b164 <__multiply>:
 800b164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b168:	4691      	mov	r9, r2
 800b16a:	690a      	ldr	r2, [r1, #16]
 800b16c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800b170:	429a      	cmp	r2, r3
 800b172:	bfb8      	it	lt
 800b174:	460b      	movlt	r3, r1
 800b176:	460c      	mov	r4, r1
 800b178:	bfbc      	itt	lt
 800b17a:	464c      	movlt	r4, r9
 800b17c:	4699      	movlt	r9, r3
 800b17e:	6927      	ldr	r7, [r4, #16]
 800b180:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800b184:	68a3      	ldr	r3, [r4, #8]
 800b186:	6861      	ldr	r1, [r4, #4]
 800b188:	eb07 060a 	add.w	r6, r7, sl
 800b18c:	42b3      	cmp	r3, r6
 800b18e:	b085      	sub	sp, #20
 800b190:	bfb8      	it	lt
 800b192:	3101      	addlt	r1, #1
 800b194:	f7ff fed8 	bl	800af48 <_Balloc>
 800b198:	b930      	cbnz	r0, 800b1a8 <__multiply+0x44>
 800b19a:	4602      	mov	r2, r0
 800b19c:	4b44      	ldr	r3, [pc, #272]	; (800b2b0 <__multiply+0x14c>)
 800b19e:	4845      	ldr	r0, [pc, #276]	; (800b2b4 <__multiply+0x150>)
 800b1a0:	f240 115d 	movw	r1, #349	; 0x15d
 800b1a4:	f000 fbc6 	bl	800b934 <__assert_func>
 800b1a8:	f100 0514 	add.w	r5, r0, #20
 800b1ac:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800b1b0:	462b      	mov	r3, r5
 800b1b2:	2200      	movs	r2, #0
 800b1b4:	4543      	cmp	r3, r8
 800b1b6:	d321      	bcc.n	800b1fc <__multiply+0x98>
 800b1b8:	f104 0314 	add.w	r3, r4, #20
 800b1bc:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800b1c0:	f109 0314 	add.w	r3, r9, #20
 800b1c4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800b1c8:	9202      	str	r2, [sp, #8]
 800b1ca:	1b3a      	subs	r2, r7, r4
 800b1cc:	3a15      	subs	r2, #21
 800b1ce:	f022 0203 	bic.w	r2, r2, #3
 800b1d2:	3204      	adds	r2, #4
 800b1d4:	f104 0115 	add.w	r1, r4, #21
 800b1d8:	428f      	cmp	r7, r1
 800b1da:	bf38      	it	cc
 800b1dc:	2204      	movcc	r2, #4
 800b1de:	9201      	str	r2, [sp, #4]
 800b1e0:	9a02      	ldr	r2, [sp, #8]
 800b1e2:	9303      	str	r3, [sp, #12]
 800b1e4:	429a      	cmp	r2, r3
 800b1e6:	d80c      	bhi.n	800b202 <__multiply+0x9e>
 800b1e8:	2e00      	cmp	r6, #0
 800b1ea:	dd03      	ble.n	800b1f4 <__multiply+0x90>
 800b1ec:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800b1f0:	2b00      	cmp	r3, #0
 800b1f2:	d05a      	beq.n	800b2aa <__multiply+0x146>
 800b1f4:	6106      	str	r6, [r0, #16]
 800b1f6:	b005      	add	sp, #20
 800b1f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1fc:	f843 2b04 	str.w	r2, [r3], #4
 800b200:	e7d8      	b.n	800b1b4 <__multiply+0x50>
 800b202:	f8b3 a000 	ldrh.w	sl, [r3]
 800b206:	f1ba 0f00 	cmp.w	sl, #0
 800b20a:	d024      	beq.n	800b256 <__multiply+0xf2>
 800b20c:	f104 0e14 	add.w	lr, r4, #20
 800b210:	46a9      	mov	r9, r5
 800b212:	f04f 0c00 	mov.w	ip, #0
 800b216:	f85e 2b04 	ldr.w	r2, [lr], #4
 800b21a:	f8d9 1000 	ldr.w	r1, [r9]
 800b21e:	fa1f fb82 	uxth.w	fp, r2
 800b222:	b289      	uxth	r1, r1
 800b224:	fb0a 110b 	mla	r1, sl, fp, r1
 800b228:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800b22c:	f8d9 2000 	ldr.w	r2, [r9]
 800b230:	4461      	add	r1, ip
 800b232:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800b236:	fb0a c20b 	mla	r2, sl, fp, ip
 800b23a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800b23e:	b289      	uxth	r1, r1
 800b240:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800b244:	4577      	cmp	r7, lr
 800b246:	f849 1b04 	str.w	r1, [r9], #4
 800b24a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800b24e:	d8e2      	bhi.n	800b216 <__multiply+0xb2>
 800b250:	9a01      	ldr	r2, [sp, #4]
 800b252:	f845 c002 	str.w	ip, [r5, r2]
 800b256:	9a03      	ldr	r2, [sp, #12]
 800b258:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800b25c:	3304      	adds	r3, #4
 800b25e:	f1b9 0f00 	cmp.w	r9, #0
 800b262:	d020      	beq.n	800b2a6 <__multiply+0x142>
 800b264:	6829      	ldr	r1, [r5, #0]
 800b266:	f104 0c14 	add.w	ip, r4, #20
 800b26a:	46ae      	mov	lr, r5
 800b26c:	f04f 0a00 	mov.w	sl, #0
 800b270:	f8bc b000 	ldrh.w	fp, [ip]
 800b274:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800b278:	fb09 220b 	mla	r2, r9, fp, r2
 800b27c:	4492      	add	sl, r2
 800b27e:	b289      	uxth	r1, r1
 800b280:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800b284:	f84e 1b04 	str.w	r1, [lr], #4
 800b288:	f85c 2b04 	ldr.w	r2, [ip], #4
 800b28c:	f8be 1000 	ldrh.w	r1, [lr]
 800b290:	0c12      	lsrs	r2, r2, #16
 800b292:	fb09 1102 	mla	r1, r9, r2, r1
 800b296:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800b29a:	4567      	cmp	r7, ip
 800b29c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800b2a0:	d8e6      	bhi.n	800b270 <__multiply+0x10c>
 800b2a2:	9a01      	ldr	r2, [sp, #4]
 800b2a4:	50a9      	str	r1, [r5, r2]
 800b2a6:	3504      	adds	r5, #4
 800b2a8:	e79a      	b.n	800b1e0 <__multiply+0x7c>
 800b2aa:	3e01      	subs	r6, #1
 800b2ac:	e79c      	b.n	800b1e8 <__multiply+0x84>
 800b2ae:	bf00      	nop
 800b2b0:	0800cb03 	.word	0x0800cb03
 800b2b4:	0800cb14 	.word	0x0800cb14

0800b2b8 <__pow5mult>:
 800b2b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b2bc:	4615      	mov	r5, r2
 800b2be:	f012 0203 	ands.w	r2, r2, #3
 800b2c2:	4606      	mov	r6, r0
 800b2c4:	460f      	mov	r7, r1
 800b2c6:	d007      	beq.n	800b2d8 <__pow5mult+0x20>
 800b2c8:	4c25      	ldr	r4, [pc, #148]	; (800b360 <__pow5mult+0xa8>)
 800b2ca:	3a01      	subs	r2, #1
 800b2cc:	2300      	movs	r3, #0
 800b2ce:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800b2d2:	f7ff fe9b 	bl	800b00c <__multadd>
 800b2d6:	4607      	mov	r7, r0
 800b2d8:	10ad      	asrs	r5, r5, #2
 800b2da:	d03d      	beq.n	800b358 <__pow5mult+0xa0>
 800b2dc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800b2de:	b97c      	cbnz	r4, 800b300 <__pow5mult+0x48>
 800b2e0:	2010      	movs	r0, #16
 800b2e2:	f7fe f9f5 	bl	80096d0 <malloc>
 800b2e6:	4602      	mov	r2, r0
 800b2e8:	6270      	str	r0, [r6, #36]	; 0x24
 800b2ea:	b928      	cbnz	r0, 800b2f8 <__pow5mult+0x40>
 800b2ec:	4b1d      	ldr	r3, [pc, #116]	; (800b364 <__pow5mult+0xac>)
 800b2ee:	481e      	ldr	r0, [pc, #120]	; (800b368 <__pow5mult+0xb0>)
 800b2f0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800b2f4:	f000 fb1e 	bl	800b934 <__assert_func>
 800b2f8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800b2fc:	6004      	str	r4, [r0, #0]
 800b2fe:	60c4      	str	r4, [r0, #12]
 800b300:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800b304:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800b308:	b94c      	cbnz	r4, 800b31e <__pow5mult+0x66>
 800b30a:	f240 2171 	movw	r1, #625	; 0x271
 800b30e:	4630      	mov	r0, r6
 800b310:	f7ff ff12 	bl	800b138 <__i2b>
 800b314:	2300      	movs	r3, #0
 800b316:	f8c8 0008 	str.w	r0, [r8, #8]
 800b31a:	4604      	mov	r4, r0
 800b31c:	6003      	str	r3, [r0, #0]
 800b31e:	f04f 0900 	mov.w	r9, #0
 800b322:	07eb      	lsls	r3, r5, #31
 800b324:	d50a      	bpl.n	800b33c <__pow5mult+0x84>
 800b326:	4639      	mov	r1, r7
 800b328:	4622      	mov	r2, r4
 800b32a:	4630      	mov	r0, r6
 800b32c:	f7ff ff1a 	bl	800b164 <__multiply>
 800b330:	4639      	mov	r1, r7
 800b332:	4680      	mov	r8, r0
 800b334:	4630      	mov	r0, r6
 800b336:	f7ff fe47 	bl	800afc8 <_Bfree>
 800b33a:	4647      	mov	r7, r8
 800b33c:	106d      	asrs	r5, r5, #1
 800b33e:	d00b      	beq.n	800b358 <__pow5mult+0xa0>
 800b340:	6820      	ldr	r0, [r4, #0]
 800b342:	b938      	cbnz	r0, 800b354 <__pow5mult+0x9c>
 800b344:	4622      	mov	r2, r4
 800b346:	4621      	mov	r1, r4
 800b348:	4630      	mov	r0, r6
 800b34a:	f7ff ff0b 	bl	800b164 <__multiply>
 800b34e:	6020      	str	r0, [r4, #0]
 800b350:	f8c0 9000 	str.w	r9, [r0]
 800b354:	4604      	mov	r4, r0
 800b356:	e7e4      	b.n	800b322 <__pow5mult+0x6a>
 800b358:	4638      	mov	r0, r7
 800b35a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b35e:	bf00      	nop
 800b360:	0800cc60 	.word	0x0800cc60
 800b364:	0800ca91 	.word	0x0800ca91
 800b368:	0800cb14 	.word	0x0800cb14

0800b36c <__lshift>:
 800b36c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b370:	460c      	mov	r4, r1
 800b372:	6849      	ldr	r1, [r1, #4]
 800b374:	6923      	ldr	r3, [r4, #16]
 800b376:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800b37a:	68a3      	ldr	r3, [r4, #8]
 800b37c:	4607      	mov	r7, r0
 800b37e:	4691      	mov	r9, r2
 800b380:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800b384:	f108 0601 	add.w	r6, r8, #1
 800b388:	42b3      	cmp	r3, r6
 800b38a:	db0b      	blt.n	800b3a4 <__lshift+0x38>
 800b38c:	4638      	mov	r0, r7
 800b38e:	f7ff fddb 	bl	800af48 <_Balloc>
 800b392:	4605      	mov	r5, r0
 800b394:	b948      	cbnz	r0, 800b3aa <__lshift+0x3e>
 800b396:	4602      	mov	r2, r0
 800b398:	4b2a      	ldr	r3, [pc, #168]	; (800b444 <__lshift+0xd8>)
 800b39a:	482b      	ldr	r0, [pc, #172]	; (800b448 <__lshift+0xdc>)
 800b39c:	f240 11d9 	movw	r1, #473	; 0x1d9
 800b3a0:	f000 fac8 	bl	800b934 <__assert_func>
 800b3a4:	3101      	adds	r1, #1
 800b3a6:	005b      	lsls	r3, r3, #1
 800b3a8:	e7ee      	b.n	800b388 <__lshift+0x1c>
 800b3aa:	2300      	movs	r3, #0
 800b3ac:	f100 0114 	add.w	r1, r0, #20
 800b3b0:	f100 0210 	add.w	r2, r0, #16
 800b3b4:	4618      	mov	r0, r3
 800b3b6:	4553      	cmp	r3, sl
 800b3b8:	db37      	blt.n	800b42a <__lshift+0xbe>
 800b3ba:	6920      	ldr	r0, [r4, #16]
 800b3bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b3c0:	f104 0314 	add.w	r3, r4, #20
 800b3c4:	f019 091f 	ands.w	r9, r9, #31
 800b3c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800b3cc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800b3d0:	d02f      	beq.n	800b432 <__lshift+0xc6>
 800b3d2:	f1c9 0e20 	rsb	lr, r9, #32
 800b3d6:	468a      	mov	sl, r1
 800b3d8:	f04f 0c00 	mov.w	ip, #0
 800b3dc:	681a      	ldr	r2, [r3, #0]
 800b3de:	fa02 f209 	lsl.w	r2, r2, r9
 800b3e2:	ea42 020c 	orr.w	r2, r2, ip
 800b3e6:	f84a 2b04 	str.w	r2, [sl], #4
 800b3ea:	f853 2b04 	ldr.w	r2, [r3], #4
 800b3ee:	4298      	cmp	r0, r3
 800b3f0:	fa22 fc0e 	lsr.w	ip, r2, lr
 800b3f4:	d8f2      	bhi.n	800b3dc <__lshift+0x70>
 800b3f6:	1b03      	subs	r3, r0, r4
 800b3f8:	3b15      	subs	r3, #21
 800b3fa:	f023 0303 	bic.w	r3, r3, #3
 800b3fe:	3304      	adds	r3, #4
 800b400:	f104 0215 	add.w	r2, r4, #21
 800b404:	4290      	cmp	r0, r2
 800b406:	bf38      	it	cc
 800b408:	2304      	movcc	r3, #4
 800b40a:	f841 c003 	str.w	ip, [r1, r3]
 800b40e:	f1bc 0f00 	cmp.w	ip, #0
 800b412:	d001      	beq.n	800b418 <__lshift+0xac>
 800b414:	f108 0602 	add.w	r6, r8, #2
 800b418:	3e01      	subs	r6, #1
 800b41a:	4638      	mov	r0, r7
 800b41c:	612e      	str	r6, [r5, #16]
 800b41e:	4621      	mov	r1, r4
 800b420:	f7ff fdd2 	bl	800afc8 <_Bfree>
 800b424:	4628      	mov	r0, r5
 800b426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b42a:	f842 0f04 	str.w	r0, [r2, #4]!
 800b42e:	3301      	adds	r3, #1
 800b430:	e7c1      	b.n	800b3b6 <__lshift+0x4a>
 800b432:	3904      	subs	r1, #4
 800b434:	f853 2b04 	ldr.w	r2, [r3], #4
 800b438:	f841 2f04 	str.w	r2, [r1, #4]!
 800b43c:	4298      	cmp	r0, r3
 800b43e:	d8f9      	bhi.n	800b434 <__lshift+0xc8>
 800b440:	e7ea      	b.n	800b418 <__lshift+0xac>
 800b442:	bf00      	nop
 800b444:	0800cb03 	.word	0x0800cb03
 800b448:	0800cb14 	.word	0x0800cb14

0800b44c <__mcmp>:
 800b44c:	b530      	push	{r4, r5, lr}
 800b44e:	6902      	ldr	r2, [r0, #16]
 800b450:	690c      	ldr	r4, [r1, #16]
 800b452:	1b12      	subs	r2, r2, r4
 800b454:	d10e      	bne.n	800b474 <__mcmp+0x28>
 800b456:	f100 0314 	add.w	r3, r0, #20
 800b45a:	3114      	adds	r1, #20
 800b45c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800b460:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800b464:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800b468:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800b46c:	42a5      	cmp	r5, r4
 800b46e:	d003      	beq.n	800b478 <__mcmp+0x2c>
 800b470:	d305      	bcc.n	800b47e <__mcmp+0x32>
 800b472:	2201      	movs	r2, #1
 800b474:	4610      	mov	r0, r2
 800b476:	bd30      	pop	{r4, r5, pc}
 800b478:	4283      	cmp	r3, r0
 800b47a:	d3f3      	bcc.n	800b464 <__mcmp+0x18>
 800b47c:	e7fa      	b.n	800b474 <__mcmp+0x28>
 800b47e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800b482:	e7f7      	b.n	800b474 <__mcmp+0x28>

0800b484 <__mdiff>:
 800b484:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b488:	460c      	mov	r4, r1
 800b48a:	4606      	mov	r6, r0
 800b48c:	4611      	mov	r1, r2
 800b48e:	4620      	mov	r0, r4
 800b490:	4690      	mov	r8, r2
 800b492:	f7ff ffdb 	bl	800b44c <__mcmp>
 800b496:	1e05      	subs	r5, r0, #0
 800b498:	d110      	bne.n	800b4bc <__mdiff+0x38>
 800b49a:	4629      	mov	r1, r5
 800b49c:	4630      	mov	r0, r6
 800b49e:	f7ff fd53 	bl	800af48 <_Balloc>
 800b4a2:	b930      	cbnz	r0, 800b4b2 <__mdiff+0x2e>
 800b4a4:	4b3a      	ldr	r3, [pc, #232]	; (800b590 <__mdiff+0x10c>)
 800b4a6:	4602      	mov	r2, r0
 800b4a8:	f240 2132 	movw	r1, #562	; 0x232
 800b4ac:	4839      	ldr	r0, [pc, #228]	; (800b594 <__mdiff+0x110>)
 800b4ae:	f000 fa41 	bl	800b934 <__assert_func>
 800b4b2:	2301      	movs	r3, #1
 800b4b4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800b4b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4bc:	bfa4      	itt	ge
 800b4be:	4643      	movge	r3, r8
 800b4c0:	46a0      	movge	r8, r4
 800b4c2:	4630      	mov	r0, r6
 800b4c4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800b4c8:	bfa6      	itte	ge
 800b4ca:	461c      	movge	r4, r3
 800b4cc:	2500      	movge	r5, #0
 800b4ce:	2501      	movlt	r5, #1
 800b4d0:	f7ff fd3a 	bl	800af48 <_Balloc>
 800b4d4:	b920      	cbnz	r0, 800b4e0 <__mdiff+0x5c>
 800b4d6:	4b2e      	ldr	r3, [pc, #184]	; (800b590 <__mdiff+0x10c>)
 800b4d8:	4602      	mov	r2, r0
 800b4da:	f44f 7110 	mov.w	r1, #576	; 0x240
 800b4de:	e7e5      	b.n	800b4ac <__mdiff+0x28>
 800b4e0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800b4e4:	6926      	ldr	r6, [r4, #16]
 800b4e6:	60c5      	str	r5, [r0, #12]
 800b4e8:	f104 0914 	add.w	r9, r4, #20
 800b4ec:	f108 0514 	add.w	r5, r8, #20
 800b4f0:	f100 0e14 	add.w	lr, r0, #20
 800b4f4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800b4f8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800b4fc:	f108 0210 	add.w	r2, r8, #16
 800b500:	46f2      	mov	sl, lr
 800b502:	2100      	movs	r1, #0
 800b504:	f859 3b04 	ldr.w	r3, [r9], #4
 800b508:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800b50c:	fa1f f883 	uxth.w	r8, r3
 800b510:	fa11 f18b 	uxtah	r1, r1, fp
 800b514:	0c1b      	lsrs	r3, r3, #16
 800b516:	eba1 0808 	sub.w	r8, r1, r8
 800b51a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800b51e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800b522:	fa1f f888 	uxth.w	r8, r8
 800b526:	1419      	asrs	r1, r3, #16
 800b528:	454e      	cmp	r6, r9
 800b52a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800b52e:	f84a 3b04 	str.w	r3, [sl], #4
 800b532:	d8e7      	bhi.n	800b504 <__mdiff+0x80>
 800b534:	1b33      	subs	r3, r6, r4
 800b536:	3b15      	subs	r3, #21
 800b538:	f023 0303 	bic.w	r3, r3, #3
 800b53c:	3304      	adds	r3, #4
 800b53e:	3415      	adds	r4, #21
 800b540:	42a6      	cmp	r6, r4
 800b542:	bf38      	it	cc
 800b544:	2304      	movcc	r3, #4
 800b546:	441d      	add	r5, r3
 800b548:	4473      	add	r3, lr
 800b54a:	469e      	mov	lr, r3
 800b54c:	462e      	mov	r6, r5
 800b54e:	4566      	cmp	r6, ip
 800b550:	d30e      	bcc.n	800b570 <__mdiff+0xec>
 800b552:	f10c 0203 	add.w	r2, ip, #3
 800b556:	1b52      	subs	r2, r2, r5
 800b558:	f022 0203 	bic.w	r2, r2, #3
 800b55c:	3d03      	subs	r5, #3
 800b55e:	45ac      	cmp	ip, r5
 800b560:	bf38      	it	cc
 800b562:	2200      	movcc	r2, #0
 800b564:	441a      	add	r2, r3
 800b566:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800b56a:	b17b      	cbz	r3, 800b58c <__mdiff+0x108>
 800b56c:	6107      	str	r7, [r0, #16]
 800b56e:	e7a3      	b.n	800b4b8 <__mdiff+0x34>
 800b570:	f856 8b04 	ldr.w	r8, [r6], #4
 800b574:	fa11 f288 	uxtah	r2, r1, r8
 800b578:	1414      	asrs	r4, r2, #16
 800b57a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800b57e:	b292      	uxth	r2, r2
 800b580:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800b584:	f84e 2b04 	str.w	r2, [lr], #4
 800b588:	1421      	asrs	r1, r4, #16
 800b58a:	e7e0      	b.n	800b54e <__mdiff+0xca>
 800b58c:	3f01      	subs	r7, #1
 800b58e:	e7ea      	b.n	800b566 <__mdiff+0xe2>
 800b590:	0800cb03 	.word	0x0800cb03
 800b594:	0800cb14 	.word	0x0800cb14

0800b598 <__d2b>:
 800b598:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b59c:	4689      	mov	r9, r1
 800b59e:	2101      	movs	r1, #1
 800b5a0:	ec57 6b10 	vmov	r6, r7, d0
 800b5a4:	4690      	mov	r8, r2
 800b5a6:	f7ff fccf 	bl	800af48 <_Balloc>
 800b5aa:	4604      	mov	r4, r0
 800b5ac:	b930      	cbnz	r0, 800b5bc <__d2b+0x24>
 800b5ae:	4602      	mov	r2, r0
 800b5b0:	4b25      	ldr	r3, [pc, #148]	; (800b648 <__d2b+0xb0>)
 800b5b2:	4826      	ldr	r0, [pc, #152]	; (800b64c <__d2b+0xb4>)
 800b5b4:	f240 310a 	movw	r1, #778	; 0x30a
 800b5b8:	f000 f9bc 	bl	800b934 <__assert_func>
 800b5bc:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800b5c0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800b5c4:	bb35      	cbnz	r5, 800b614 <__d2b+0x7c>
 800b5c6:	2e00      	cmp	r6, #0
 800b5c8:	9301      	str	r3, [sp, #4]
 800b5ca:	d028      	beq.n	800b61e <__d2b+0x86>
 800b5cc:	4668      	mov	r0, sp
 800b5ce:	9600      	str	r6, [sp, #0]
 800b5d0:	f7ff fd82 	bl	800b0d8 <__lo0bits>
 800b5d4:	9900      	ldr	r1, [sp, #0]
 800b5d6:	b300      	cbz	r0, 800b61a <__d2b+0x82>
 800b5d8:	9a01      	ldr	r2, [sp, #4]
 800b5da:	f1c0 0320 	rsb	r3, r0, #32
 800b5de:	fa02 f303 	lsl.w	r3, r2, r3
 800b5e2:	430b      	orrs	r3, r1
 800b5e4:	40c2      	lsrs	r2, r0
 800b5e6:	6163      	str	r3, [r4, #20]
 800b5e8:	9201      	str	r2, [sp, #4]
 800b5ea:	9b01      	ldr	r3, [sp, #4]
 800b5ec:	61a3      	str	r3, [r4, #24]
 800b5ee:	2b00      	cmp	r3, #0
 800b5f0:	bf14      	ite	ne
 800b5f2:	2202      	movne	r2, #2
 800b5f4:	2201      	moveq	r2, #1
 800b5f6:	6122      	str	r2, [r4, #16]
 800b5f8:	b1d5      	cbz	r5, 800b630 <__d2b+0x98>
 800b5fa:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800b5fe:	4405      	add	r5, r0
 800b600:	f8c9 5000 	str.w	r5, [r9]
 800b604:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800b608:	f8c8 0000 	str.w	r0, [r8]
 800b60c:	4620      	mov	r0, r4
 800b60e:	b003      	add	sp, #12
 800b610:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b614:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800b618:	e7d5      	b.n	800b5c6 <__d2b+0x2e>
 800b61a:	6161      	str	r1, [r4, #20]
 800b61c:	e7e5      	b.n	800b5ea <__d2b+0x52>
 800b61e:	a801      	add	r0, sp, #4
 800b620:	f7ff fd5a 	bl	800b0d8 <__lo0bits>
 800b624:	9b01      	ldr	r3, [sp, #4]
 800b626:	6163      	str	r3, [r4, #20]
 800b628:	2201      	movs	r2, #1
 800b62a:	6122      	str	r2, [r4, #16]
 800b62c:	3020      	adds	r0, #32
 800b62e:	e7e3      	b.n	800b5f8 <__d2b+0x60>
 800b630:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800b634:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800b638:	f8c9 0000 	str.w	r0, [r9]
 800b63c:	6918      	ldr	r0, [r3, #16]
 800b63e:	f7ff fd2b 	bl	800b098 <__hi0bits>
 800b642:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800b646:	e7df      	b.n	800b608 <__d2b+0x70>
 800b648:	0800cb03 	.word	0x0800cb03
 800b64c:	0800cb14 	.word	0x0800cb14

0800b650 <_calloc_r>:
 800b650:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b652:	fba1 2402 	umull	r2, r4, r1, r2
 800b656:	b94c      	cbnz	r4, 800b66c <_calloc_r+0x1c>
 800b658:	4611      	mov	r1, r2
 800b65a:	9201      	str	r2, [sp, #4]
 800b65c:	f7fe f8bc 	bl	80097d8 <_malloc_r>
 800b660:	9a01      	ldr	r2, [sp, #4]
 800b662:	4605      	mov	r5, r0
 800b664:	b930      	cbnz	r0, 800b674 <_calloc_r+0x24>
 800b666:	4628      	mov	r0, r5
 800b668:	b003      	add	sp, #12
 800b66a:	bd30      	pop	{r4, r5, pc}
 800b66c:	220c      	movs	r2, #12
 800b66e:	6002      	str	r2, [r0, #0]
 800b670:	2500      	movs	r5, #0
 800b672:	e7f8      	b.n	800b666 <_calloc_r+0x16>
 800b674:	4621      	mov	r1, r4
 800b676:	f7fe f83b 	bl	80096f0 <memset>
 800b67a:	e7f4      	b.n	800b666 <_calloc_r+0x16>

0800b67c <__ssputs_r>:
 800b67c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b680:	688e      	ldr	r6, [r1, #8]
 800b682:	429e      	cmp	r6, r3
 800b684:	4682      	mov	sl, r0
 800b686:	460c      	mov	r4, r1
 800b688:	4690      	mov	r8, r2
 800b68a:	461f      	mov	r7, r3
 800b68c:	d838      	bhi.n	800b700 <__ssputs_r+0x84>
 800b68e:	898a      	ldrh	r2, [r1, #12]
 800b690:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800b694:	d032      	beq.n	800b6fc <__ssputs_r+0x80>
 800b696:	6825      	ldr	r5, [r4, #0]
 800b698:	6909      	ldr	r1, [r1, #16]
 800b69a:	eba5 0901 	sub.w	r9, r5, r1
 800b69e:	6965      	ldr	r5, [r4, #20]
 800b6a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b6a4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800b6a8:	3301      	adds	r3, #1
 800b6aa:	444b      	add	r3, r9
 800b6ac:	106d      	asrs	r5, r5, #1
 800b6ae:	429d      	cmp	r5, r3
 800b6b0:	bf38      	it	cc
 800b6b2:	461d      	movcc	r5, r3
 800b6b4:	0553      	lsls	r3, r2, #21
 800b6b6:	d531      	bpl.n	800b71c <__ssputs_r+0xa0>
 800b6b8:	4629      	mov	r1, r5
 800b6ba:	f7fe f88d 	bl	80097d8 <_malloc_r>
 800b6be:	4606      	mov	r6, r0
 800b6c0:	b950      	cbnz	r0, 800b6d8 <__ssputs_r+0x5c>
 800b6c2:	230c      	movs	r3, #12
 800b6c4:	f8ca 3000 	str.w	r3, [sl]
 800b6c8:	89a3      	ldrh	r3, [r4, #12]
 800b6ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b6ce:	81a3      	strh	r3, [r4, #12]
 800b6d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b6d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b6d8:	6921      	ldr	r1, [r4, #16]
 800b6da:	464a      	mov	r2, r9
 800b6dc:	f7ff fc1a 	bl	800af14 <memcpy>
 800b6e0:	89a3      	ldrh	r3, [r4, #12]
 800b6e2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800b6e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800b6ea:	81a3      	strh	r3, [r4, #12]
 800b6ec:	6126      	str	r6, [r4, #16]
 800b6ee:	6165      	str	r5, [r4, #20]
 800b6f0:	444e      	add	r6, r9
 800b6f2:	eba5 0509 	sub.w	r5, r5, r9
 800b6f6:	6026      	str	r6, [r4, #0]
 800b6f8:	60a5      	str	r5, [r4, #8]
 800b6fa:	463e      	mov	r6, r7
 800b6fc:	42be      	cmp	r6, r7
 800b6fe:	d900      	bls.n	800b702 <__ssputs_r+0x86>
 800b700:	463e      	mov	r6, r7
 800b702:	6820      	ldr	r0, [r4, #0]
 800b704:	4632      	mov	r2, r6
 800b706:	4641      	mov	r1, r8
 800b708:	f000 f959 	bl	800b9be <memmove>
 800b70c:	68a3      	ldr	r3, [r4, #8]
 800b70e:	1b9b      	subs	r3, r3, r6
 800b710:	60a3      	str	r3, [r4, #8]
 800b712:	6823      	ldr	r3, [r4, #0]
 800b714:	4433      	add	r3, r6
 800b716:	6023      	str	r3, [r4, #0]
 800b718:	2000      	movs	r0, #0
 800b71a:	e7db      	b.n	800b6d4 <__ssputs_r+0x58>
 800b71c:	462a      	mov	r2, r5
 800b71e:	f000 f968 	bl	800b9f2 <_realloc_r>
 800b722:	4606      	mov	r6, r0
 800b724:	2800      	cmp	r0, #0
 800b726:	d1e1      	bne.n	800b6ec <__ssputs_r+0x70>
 800b728:	6921      	ldr	r1, [r4, #16]
 800b72a:	4650      	mov	r0, sl
 800b72c:	f7fd ffe8 	bl	8009700 <_free_r>
 800b730:	e7c7      	b.n	800b6c2 <__ssputs_r+0x46>
	...

0800b734 <_svfiprintf_r>:
 800b734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b738:	4698      	mov	r8, r3
 800b73a:	898b      	ldrh	r3, [r1, #12]
 800b73c:	061b      	lsls	r3, r3, #24
 800b73e:	b09d      	sub	sp, #116	; 0x74
 800b740:	4607      	mov	r7, r0
 800b742:	460d      	mov	r5, r1
 800b744:	4614      	mov	r4, r2
 800b746:	d50e      	bpl.n	800b766 <_svfiprintf_r+0x32>
 800b748:	690b      	ldr	r3, [r1, #16]
 800b74a:	b963      	cbnz	r3, 800b766 <_svfiprintf_r+0x32>
 800b74c:	2140      	movs	r1, #64	; 0x40
 800b74e:	f7fe f843 	bl	80097d8 <_malloc_r>
 800b752:	6028      	str	r0, [r5, #0]
 800b754:	6128      	str	r0, [r5, #16]
 800b756:	b920      	cbnz	r0, 800b762 <_svfiprintf_r+0x2e>
 800b758:	230c      	movs	r3, #12
 800b75a:	603b      	str	r3, [r7, #0]
 800b75c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800b760:	e0d1      	b.n	800b906 <_svfiprintf_r+0x1d2>
 800b762:	2340      	movs	r3, #64	; 0x40
 800b764:	616b      	str	r3, [r5, #20]
 800b766:	2300      	movs	r3, #0
 800b768:	9309      	str	r3, [sp, #36]	; 0x24
 800b76a:	2320      	movs	r3, #32
 800b76c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800b770:	f8cd 800c 	str.w	r8, [sp, #12]
 800b774:	2330      	movs	r3, #48	; 0x30
 800b776:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800b920 <_svfiprintf_r+0x1ec>
 800b77a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800b77e:	f04f 0901 	mov.w	r9, #1
 800b782:	4623      	mov	r3, r4
 800b784:	469a      	mov	sl, r3
 800b786:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b78a:	b10a      	cbz	r2, 800b790 <_svfiprintf_r+0x5c>
 800b78c:	2a25      	cmp	r2, #37	; 0x25
 800b78e:	d1f9      	bne.n	800b784 <_svfiprintf_r+0x50>
 800b790:	ebba 0b04 	subs.w	fp, sl, r4
 800b794:	d00b      	beq.n	800b7ae <_svfiprintf_r+0x7a>
 800b796:	465b      	mov	r3, fp
 800b798:	4622      	mov	r2, r4
 800b79a:	4629      	mov	r1, r5
 800b79c:	4638      	mov	r0, r7
 800b79e:	f7ff ff6d 	bl	800b67c <__ssputs_r>
 800b7a2:	3001      	adds	r0, #1
 800b7a4:	f000 80aa 	beq.w	800b8fc <_svfiprintf_r+0x1c8>
 800b7a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b7aa:	445a      	add	r2, fp
 800b7ac:	9209      	str	r2, [sp, #36]	; 0x24
 800b7ae:	f89a 3000 	ldrb.w	r3, [sl]
 800b7b2:	2b00      	cmp	r3, #0
 800b7b4:	f000 80a2 	beq.w	800b8fc <_svfiprintf_r+0x1c8>
 800b7b8:	2300      	movs	r3, #0
 800b7ba:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800b7be:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800b7c2:	f10a 0a01 	add.w	sl, sl, #1
 800b7c6:	9304      	str	r3, [sp, #16]
 800b7c8:	9307      	str	r3, [sp, #28]
 800b7ca:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800b7ce:	931a      	str	r3, [sp, #104]	; 0x68
 800b7d0:	4654      	mov	r4, sl
 800b7d2:	2205      	movs	r2, #5
 800b7d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b7d8:	4851      	ldr	r0, [pc, #324]	; (800b920 <_svfiprintf_r+0x1ec>)
 800b7da:	f7f4 fd21 	bl	8000220 <memchr>
 800b7de:	9a04      	ldr	r2, [sp, #16]
 800b7e0:	b9d8      	cbnz	r0, 800b81a <_svfiprintf_r+0xe6>
 800b7e2:	06d0      	lsls	r0, r2, #27
 800b7e4:	bf44      	itt	mi
 800b7e6:	2320      	movmi	r3, #32
 800b7e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b7ec:	0711      	lsls	r1, r2, #28
 800b7ee:	bf44      	itt	mi
 800b7f0:	232b      	movmi	r3, #43	; 0x2b
 800b7f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b7f6:	f89a 3000 	ldrb.w	r3, [sl]
 800b7fa:	2b2a      	cmp	r3, #42	; 0x2a
 800b7fc:	d015      	beq.n	800b82a <_svfiprintf_r+0xf6>
 800b7fe:	9a07      	ldr	r2, [sp, #28]
 800b800:	4654      	mov	r4, sl
 800b802:	2000      	movs	r0, #0
 800b804:	f04f 0c0a 	mov.w	ip, #10
 800b808:	4621      	mov	r1, r4
 800b80a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b80e:	3b30      	subs	r3, #48	; 0x30
 800b810:	2b09      	cmp	r3, #9
 800b812:	d94e      	bls.n	800b8b2 <_svfiprintf_r+0x17e>
 800b814:	b1b0      	cbz	r0, 800b844 <_svfiprintf_r+0x110>
 800b816:	9207      	str	r2, [sp, #28]
 800b818:	e014      	b.n	800b844 <_svfiprintf_r+0x110>
 800b81a:	eba0 0308 	sub.w	r3, r0, r8
 800b81e:	fa09 f303 	lsl.w	r3, r9, r3
 800b822:	4313      	orrs	r3, r2
 800b824:	9304      	str	r3, [sp, #16]
 800b826:	46a2      	mov	sl, r4
 800b828:	e7d2      	b.n	800b7d0 <_svfiprintf_r+0x9c>
 800b82a:	9b03      	ldr	r3, [sp, #12]
 800b82c:	1d19      	adds	r1, r3, #4
 800b82e:	681b      	ldr	r3, [r3, #0]
 800b830:	9103      	str	r1, [sp, #12]
 800b832:	2b00      	cmp	r3, #0
 800b834:	bfbb      	ittet	lt
 800b836:	425b      	neglt	r3, r3
 800b838:	f042 0202 	orrlt.w	r2, r2, #2
 800b83c:	9307      	strge	r3, [sp, #28]
 800b83e:	9307      	strlt	r3, [sp, #28]
 800b840:	bfb8      	it	lt
 800b842:	9204      	strlt	r2, [sp, #16]
 800b844:	7823      	ldrb	r3, [r4, #0]
 800b846:	2b2e      	cmp	r3, #46	; 0x2e
 800b848:	d10c      	bne.n	800b864 <_svfiprintf_r+0x130>
 800b84a:	7863      	ldrb	r3, [r4, #1]
 800b84c:	2b2a      	cmp	r3, #42	; 0x2a
 800b84e:	d135      	bne.n	800b8bc <_svfiprintf_r+0x188>
 800b850:	9b03      	ldr	r3, [sp, #12]
 800b852:	1d1a      	adds	r2, r3, #4
 800b854:	681b      	ldr	r3, [r3, #0]
 800b856:	9203      	str	r2, [sp, #12]
 800b858:	2b00      	cmp	r3, #0
 800b85a:	bfb8      	it	lt
 800b85c:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800b860:	3402      	adds	r4, #2
 800b862:	9305      	str	r3, [sp, #20]
 800b864:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800b930 <_svfiprintf_r+0x1fc>
 800b868:	7821      	ldrb	r1, [r4, #0]
 800b86a:	2203      	movs	r2, #3
 800b86c:	4650      	mov	r0, sl
 800b86e:	f7f4 fcd7 	bl	8000220 <memchr>
 800b872:	b140      	cbz	r0, 800b886 <_svfiprintf_r+0x152>
 800b874:	2340      	movs	r3, #64	; 0x40
 800b876:	eba0 000a 	sub.w	r0, r0, sl
 800b87a:	fa03 f000 	lsl.w	r0, r3, r0
 800b87e:	9b04      	ldr	r3, [sp, #16]
 800b880:	4303      	orrs	r3, r0
 800b882:	3401      	adds	r4, #1
 800b884:	9304      	str	r3, [sp, #16]
 800b886:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b88a:	4826      	ldr	r0, [pc, #152]	; (800b924 <_svfiprintf_r+0x1f0>)
 800b88c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800b890:	2206      	movs	r2, #6
 800b892:	f7f4 fcc5 	bl	8000220 <memchr>
 800b896:	2800      	cmp	r0, #0
 800b898:	d038      	beq.n	800b90c <_svfiprintf_r+0x1d8>
 800b89a:	4b23      	ldr	r3, [pc, #140]	; (800b928 <_svfiprintf_r+0x1f4>)
 800b89c:	bb1b      	cbnz	r3, 800b8e6 <_svfiprintf_r+0x1b2>
 800b89e:	9b03      	ldr	r3, [sp, #12]
 800b8a0:	3307      	adds	r3, #7
 800b8a2:	f023 0307 	bic.w	r3, r3, #7
 800b8a6:	3308      	adds	r3, #8
 800b8a8:	9303      	str	r3, [sp, #12]
 800b8aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b8ac:	4433      	add	r3, r6
 800b8ae:	9309      	str	r3, [sp, #36]	; 0x24
 800b8b0:	e767      	b.n	800b782 <_svfiprintf_r+0x4e>
 800b8b2:	fb0c 3202 	mla	r2, ip, r2, r3
 800b8b6:	460c      	mov	r4, r1
 800b8b8:	2001      	movs	r0, #1
 800b8ba:	e7a5      	b.n	800b808 <_svfiprintf_r+0xd4>
 800b8bc:	2300      	movs	r3, #0
 800b8be:	3401      	adds	r4, #1
 800b8c0:	9305      	str	r3, [sp, #20]
 800b8c2:	4619      	mov	r1, r3
 800b8c4:	f04f 0c0a 	mov.w	ip, #10
 800b8c8:	4620      	mov	r0, r4
 800b8ca:	f810 2b01 	ldrb.w	r2, [r0], #1
 800b8ce:	3a30      	subs	r2, #48	; 0x30
 800b8d0:	2a09      	cmp	r2, #9
 800b8d2:	d903      	bls.n	800b8dc <_svfiprintf_r+0x1a8>
 800b8d4:	2b00      	cmp	r3, #0
 800b8d6:	d0c5      	beq.n	800b864 <_svfiprintf_r+0x130>
 800b8d8:	9105      	str	r1, [sp, #20]
 800b8da:	e7c3      	b.n	800b864 <_svfiprintf_r+0x130>
 800b8dc:	fb0c 2101 	mla	r1, ip, r1, r2
 800b8e0:	4604      	mov	r4, r0
 800b8e2:	2301      	movs	r3, #1
 800b8e4:	e7f0      	b.n	800b8c8 <_svfiprintf_r+0x194>
 800b8e6:	ab03      	add	r3, sp, #12
 800b8e8:	9300      	str	r3, [sp, #0]
 800b8ea:	462a      	mov	r2, r5
 800b8ec:	4b0f      	ldr	r3, [pc, #60]	; (800b92c <_svfiprintf_r+0x1f8>)
 800b8ee:	a904      	add	r1, sp, #16
 800b8f0:	4638      	mov	r0, r7
 800b8f2:	f7fe f885 	bl	8009a00 <_printf_float>
 800b8f6:	1c42      	adds	r2, r0, #1
 800b8f8:	4606      	mov	r6, r0
 800b8fa:	d1d6      	bne.n	800b8aa <_svfiprintf_r+0x176>
 800b8fc:	89ab      	ldrh	r3, [r5, #12]
 800b8fe:	065b      	lsls	r3, r3, #25
 800b900:	f53f af2c 	bmi.w	800b75c <_svfiprintf_r+0x28>
 800b904:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b906:	b01d      	add	sp, #116	; 0x74
 800b908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b90c:	ab03      	add	r3, sp, #12
 800b90e:	9300      	str	r3, [sp, #0]
 800b910:	462a      	mov	r2, r5
 800b912:	4b06      	ldr	r3, [pc, #24]	; (800b92c <_svfiprintf_r+0x1f8>)
 800b914:	a904      	add	r1, sp, #16
 800b916:	4638      	mov	r0, r7
 800b918:	f7fe fb16 	bl	8009f48 <_printf_i>
 800b91c:	e7eb      	b.n	800b8f6 <_svfiprintf_r+0x1c2>
 800b91e:	bf00      	nop
 800b920:	0800cc6c 	.word	0x0800cc6c
 800b924:	0800cc76 	.word	0x0800cc76
 800b928:	08009a01 	.word	0x08009a01
 800b92c:	0800b67d 	.word	0x0800b67d
 800b930:	0800cc72 	.word	0x0800cc72

0800b934 <__assert_func>:
 800b934:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b936:	4614      	mov	r4, r2
 800b938:	461a      	mov	r2, r3
 800b93a:	4b09      	ldr	r3, [pc, #36]	; (800b960 <__assert_func+0x2c>)
 800b93c:	681b      	ldr	r3, [r3, #0]
 800b93e:	4605      	mov	r5, r0
 800b940:	68d8      	ldr	r0, [r3, #12]
 800b942:	b14c      	cbz	r4, 800b958 <__assert_func+0x24>
 800b944:	4b07      	ldr	r3, [pc, #28]	; (800b964 <__assert_func+0x30>)
 800b946:	9100      	str	r1, [sp, #0]
 800b948:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b94c:	4906      	ldr	r1, [pc, #24]	; (800b968 <__assert_func+0x34>)
 800b94e:	462b      	mov	r3, r5
 800b950:	f000 f80e 	bl	800b970 <fiprintf>
 800b954:	f000 faa4 	bl	800bea0 <abort>
 800b958:	4b04      	ldr	r3, [pc, #16]	; (800b96c <__assert_func+0x38>)
 800b95a:	461c      	mov	r4, r3
 800b95c:	e7f3      	b.n	800b946 <__assert_func+0x12>
 800b95e:	bf00      	nop
 800b960:	200023fc 	.word	0x200023fc
 800b964:	0800cc7d 	.word	0x0800cc7d
 800b968:	0800cc8a 	.word	0x0800cc8a
 800b96c:	0800ccb8 	.word	0x0800ccb8

0800b970 <fiprintf>:
 800b970:	b40e      	push	{r1, r2, r3}
 800b972:	b503      	push	{r0, r1, lr}
 800b974:	4601      	mov	r1, r0
 800b976:	ab03      	add	r3, sp, #12
 800b978:	4805      	ldr	r0, [pc, #20]	; (800b990 <fiprintf+0x20>)
 800b97a:	f853 2b04 	ldr.w	r2, [r3], #4
 800b97e:	6800      	ldr	r0, [r0, #0]
 800b980:	9301      	str	r3, [sp, #4]
 800b982:	f000 f88f 	bl	800baa4 <_vfiprintf_r>
 800b986:	b002      	add	sp, #8
 800b988:	f85d eb04 	ldr.w	lr, [sp], #4
 800b98c:	b003      	add	sp, #12
 800b98e:	4770      	bx	lr
 800b990:	200023fc 	.word	0x200023fc

0800b994 <__retarget_lock_init_recursive>:
 800b994:	4770      	bx	lr

0800b996 <__retarget_lock_acquire_recursive>:
 800b996:	4770      	bx	lr

0800b998 <__retarget_lock_release_recursive>:
 800b998:	4770      	bx	lr

0800b99a <__ascii_mbtowc>:
 800b99a:	b082      	sub	sp, #8
 800b99c:	b901      	cbnz	r1, 800b9a0 <__ascii_mbtowc+0x6>
 800b99e:	a901      	add	r1, sp, #4
 800b9a0:	b142      	cbz	r2, 800b9b4 <__ascii_mbtowc+0x1a>
 800b9a2:	b14b      	cbz	r3, 800b9b8 <__ascii_mbtowc+0x1e>
 800b9a4:	7813      	ldrb	r3, [r2, #0]
 800b9a6:	600b      	str	r3, [r1, #0]
 800b9a8:	7812      	ldrb	r2, [r2, #0]
 800b9aa:	1e10      	subs	r0, r2, #0
 800b9ac:	bf18      	it	ne
 800b9ae:	2001      	movne	r0, #1
 800b9b0:	b002      	add	sp, #8
 800b9b2:	4770      	bx	lr
 800b9b4:	4610      	mov	r0, r2
 800b9b6:	e7fb      	b.n	800b9b0 <__ascii_mbtowc+0x16>
 800b9b8:	f06f 0001 	mvn.w	r0, #1
 800b9bc:	e7f8      	b.n	800b9b0 <__ascii_mbtowc+0x16>

0800b9be <memmove>:
 800b9be:	4288      	cmp	r0, r1
 800b9c0:	b510      	push	{r4, lr}
 800b9c2:	eb01 0402 	add.w	r4, r1, r2
 800b9c6:	d902      	bls.n	800b9ce <memmove+0x10>
 800b9c8:	4284      	cmp	r4, r0
 800b9ca:	4623      	mov	r3, r4
 800b9cc:	d807      	bhi.n	800b9de <memmove+0x20>
 800b9ce:	1e43      	subs	r3, r0, #1
 800b9d0:	42a1      	cmp	r1, r4
 800b9d2:	d008      	beq.n	800b9e6 <memmove+0x28>
 800b9d4:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b9d8:	f803 2f01 	strb.w	r2, [r3, #1]!
 800b9dc:	e7f8      	b.n	800b9d0 <memmove+0x12>
 800b9de:	4402      	add	r2, r0
 800b9e0:	4601      	mov	r1, r0
 800b9e2:	428a      	cmp	r2, r1
 800b9e4:	d100      	bne.n	800b9e8 <memmove+0x2a>
 800b9e6:	bd10      	pop	{r4, pc}
 800b9e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800b9ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800b9f0:	e7f7      	b.n	800b9e2 <memmove+0x24>

0800b9f2 <_realloc_r>:
 800b9f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9f6:	4680      	mov	r8, r0
 800b9f8:	4614      	mov	r4, r2
 800b9fa:	460e      	mov	r6, r1
 800b9fc:	b921      	cbnz	r1, 800ba08 <_realloc_r+0x16>
 800b9fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ba02:	4611      	mov	r1, r2
 800ba04:	f7fd bee8 	b.w	80097d8 <_malloc_r>
 800ba08:	b92a      	cbnz	r2, 800ba16 <_realloc_r+0x24>
 800ba0a:	f7fd fe79 	bl	8009700 <_free_r>
 800ba0e:	4625      	mov	r5, r4
 800ba10:	4628      	mov	r0, r5
 800ba12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba16:	f000 fc67 	bl	800c2e8 <_malloc_usable_size_r>
 800ba1a:	4284      	cmp	r4, r0
 800ba1c:	4607      	mov	r7, r0
 800ba1e:	d802      	bhi.n	800ba26 <_realloc_r+0x34>
 800ba20:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800ba24:	d812      	bhi.n	800ba4c <_realloc_r+0x5a>
 800ba26:	4621      	mov	r1, r4
 800ba28:	4640      	mov	r0, r8
 800ba2a:	f7fd fed5 	bl	80097d8 <_malloc_r>
 800ba2e:	4605      	mov	r5, r0
 800ba30:	2800      	cmp	r0, #0
 800ba32:	d0ed      	beq.n	800ba10 <_realloc_r+0x1e>
 800ba34:	42bc      	cmp	r4, r7
 800ba36:	4622      	mov	r2, r4
 800ba38:	4631      	mov	r1, r6
 800ba3a:	bf28      	it	cs
 800ba3c:	463a      	movcs	r2, r7
 800ba3e:	f7ff fa69 	bl	800af14 <memcpy>
 800ba42:	4631      	mov	r1, r6
 800ba44:	4640      	mov	r0, r8
 800ba46:	f7fd fe5b 	bl	8009700 <_free_r>
 800ba4a:	e7e1      	b.n	800ba10 <_realloc_r+0x1e>
 800ba4c:	4635      	mov	r5, r6
 800ba4e:	e7df      	b.n	800ba10 <_realloc_r+0x1e>

0800ba50 <__sfputc_r>:
 800ba50:	6893      	ldr	r3, [r2, #8]
 800ba52:	3b01      	subs	r3, #1
 800ba54:	2b00      	cmp	r3, #0
 800ba56:	b410      	push	{r4}
 800ba58:	6093      	str	r3, [r2, #8]
 800ba5a:	da08      	bge.n	800ba6e <__sfputc_r+0x1e>
 800ba5c:	6994      	ldr	r4, [r2, #24]
 800ba5e:	42a3      	cmp	r3, r4
 800ba60:	db01      	blt.n	800ba66 <__sfputc_r+0x16>
 800ba62:	290a      	cmp	r1, #10
 800ba64:	d103      	bne.n	800ba6e <__sfputc_r+0x1e>
 800ba66:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba6a:	f000 b94b 	b.w	800bd04 <__swbuf_r>
 800ba6e:	6813      	ldr	r3, [r2, #0]
 800ba70:	1c58      	adds	r0, r3, #1
 800ba72:	6010      	str	r0, [r2, #0]
 800ba74:	7019      	strb	r1, [r3, #0]
 800ba76:	4608      	mov	r0, r1
 800ba78:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba7c:	4770      	bx	lr

0800ba7e <__sfputs_r>:
 800ba7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba80:	4606      	mov	r6, r0
 800ba82:	460f      	mov	r7, r1
 800ba84:	4614      	mov	r4, r2
 800ba86:	18d5      	adds	r5, r2, r3
 800ba88:	42ac      	cmp	r4, r5
 800ba8a:	d101      	bne.n	800ba90 <__sfputs_r+0x12>
 800ba8c:	2000      	movs	r0, #0
 800ba8e:	e007      	b.n	800baa0 <__sfputs_r+0x22>
 800ba90:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ba94:	463a      	mov	r2, r7
 800ba96:	4630      	mov	r0, r6
 800ba98:	f7ff ffda 	bl	800ba50 <__sfputc_r>
 800ba9c:	1c43      	adds	r3, r0, #1
 800ba9e:	d1f3      	bne.n	800ba88 <__sfputs_r+0xa>
 800baa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800baa4 <_vfiprintf_r>:
 800baa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800baa8:	460d      	mov	r5, r1
 800baaa:	b09d      	sub	sp, #116	; 0x74
 800baac:	4614      	mov	r4, r2
 800baae:	4698      	mov	r8, r3
 800bab0:	4606      	mov	r6, r0
 800bab2:	b118      	cbz	r0, 800babc <_vfiprintf_r+0x18>
 800bab4:	6983      	ldr	r3, [r0, #24]
 800bab6:	b90b      	cbnz	r3, 800babc <_vfiprintf_r+0x18>
 800bab8:	f000 fb14 	bl	800c0e4 <__sinit>
 800babc:	4b89      	ldr	r3, [pc, #548]	; (800bce4 <_vfiprintf_r+0x240>)
 800babe:	429d      	cmp	r5, r3
 800bac0:	d11b      	bne.n	800bafa <_vfiprintf_r+0x56>
 800bac2:	6875      	ldr	r5, [r6, #4]
 800bac4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bac6:	07d9      	lsls	r1, r3, #31
 800bac8:	d405      	bmi.n	800bad6 <_vfiprintf_r+0x32>
 800baca:	89ab      	ldrh	r3, [r5, #12]
 800bacc:	059a      	lsls	r2, r3, #22
 800bace:	d402      	bmi.n	800bad6 <_vfiprintf_r+0x32>
 800bad0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bad2:	f7ff ff60 	bl	800b996 <__retarget_lock_acquire_recursive>
 800bad6:	89ab      	ldrh	r3, [r5, #12]
 800bad8:	071b      	lsls	r3, r3, #28
 800bada:	d501      	bpl.n	800bae0 <_vfiprintf_r+0x3c>
 800badc:	692b      	ldr	r3, [r5, #16]
 800bade:	b9eb      	cbnz	r3, 800bb1c <_vfiprintf_r+0x78>
 800bae0:	4629      	mov	r1, r5
 800bae2:	4630      	mov	r0, r6
 800bae4:	f000 f96e 	bl	800bdc4 <__swsetup_r>
 800bae8:	b1c0      	cbz	r0, 800bb1c <_vfiprintf_r+0x78>
 800baea:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800baec:	07dc      	lsls	r4, r3, #31
 800baee:	d50e      	bpl.n	800bb0e <_vfiprintf_r+0x6a>
 800baf0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800baf4:	b01d      	add	sp, #116	; 0x74
 800baf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bafa:	4b7b      	ldr	r3, [pc, #492]	; (800bce8 <_vfiprintf_r+0x244>)
 800bafc:	429d      	cmp	r5, r3
 800bafe:	d101      	bne.n	800bb04 <_vfiprintf_r+0x60>
 800bb00:	68b5      	ldr	r5, [r6, #8]
 800bb02:	e7df      	b.n	800bac4 <_vfiprintf_r+0x20>
 800bb04:	4b79      	ldr	r3, [pc, #484]	; (800bcec <_vfiprintf_r+0x248>)
 800bb06:	429d      	cmp	r5, r3
 800bb08:	bf08      	it	eq
 800bb0a:	68f5      	ldreq	r5, [r6, #12]
 800bb0c:	e7da      	b.n	800bac4 <_vfiprintf_r+0x20>
 800bb0e:	89ab      	ldrh	r3, [r5, #12]
 800bb10:	0598      	lsls	r0, r3, #22
 800bb12:	d4ed      	bmi.n	800baf0 <_vfiprintf_r+0x4c>
 800bb14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bb16:	f7ff ff3f 	bl	800b998 <__retarget_lock_release_recursive>
 800bb1a:	e7e9      	b.n	800baf0 <_vfiprintf_r+0x4c>
 800bb1c:	2300      	movs	r3, #0
 800bb1e:	9309      	str	r3, [sp, #36]	; 0x24
 800bb20:	2320      	movs	r3, #32
 800bb22:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800bb26:	f8cd 800c 	str.w	r8, [sp, #12]
 800bb2a:	2330      	movs	r3, #48	; 0x30
 800bb2c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800bcf0 <_vfiprintf_r+0x24c>
 800bb30:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800bb34:	f04f 0901 	mov.w	r9, #1
 800bb38:	4623      	mov	r3, r4
 800bb3a:	469a      	mov	sl, r3
 800bb3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800bb40:	b10a      	cbz	r2, 800bb46 <_vfiprintf_r+0xa2>
 800bb42:	2a25      	cmp	r2, #37	; 0x25
 800bb44:	d1f9      	bne.n	800bb3a <_vfiprintf_r+0x96>
 800bb46:	ebba 0b04 	subs.w	fp, sl, r4
 800bb4a:	d00b      	beq.n	800bb64 <_vfiprintf_r+0xc0>
 800bb4c:	465b      	mov	r3, fp
 800bb4e:	4622      	mov	r2, r4
 800bb50:	4629      	mov	r1, r5
 800bb52:	4630      	mov	r0, r6
 800bb54:	f7ff ff93 	bl	800ba7e <__sfputs_r>
 800bb58:	3001      	adds	r0, #1
 800bb5a:	f000 80aa 	beq.w	800bcb2 <_vfiprintf_r+0x20e>
 800bb5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bb60:	445a      	add	r2, fp
 800bb62:	9209      	str	r2, [sp, #36]	; 0x24
 800bb64:	f89a 3000 	ldrb.w	r3, [sl]
 800bb68:	2b00      	cmp	r3, #0
 800bb6a:	f000 80a2 	beq.w	800bcb2 <_vfiprintf_r+0x20e>
 800bb6e:	2300      	movs	r3, #0
 800bb70:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800bb74:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800bb78:	f10a 0a01 	add.w	sl, sl, #1
 800bb7c:	9304      	str	r3, [sp, #16]
 800bb7e:	9307      	str	r3, [sp, #28]
 800bb80:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800bb84:	931a      	str	r3, [sp, #104]	; 0x68
 800bb86:	4654      	mov	r4, sl
 800bb88:	2205      	movs	r2, #5
 800bb8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bb8e:	4858      	ldr	r0, [pc, #352]	; (800bcf0 <_vfiprintf_r+0x24c>)
 800bb90:	f7f4 fb46 	bl	8000220 <memchr>
 800bb94:	9a04      	ldr	r2, [sp, #16]
 800bb96:	b9d8      	cbnz	r0, 800bbd0 <_vfiprintf_r+0x12c>
 800bb98:	06d1      	lsls	r1, r2, #27
 800bb9a:	bf44      	itt	mi
 800bb9c:	2320      	movmi	r3, #32
 800bb9e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800bba2:	0713      	lsls	r3, r2, #28
 800bba4:	bf44      	itt	mi
 800bba6:	232b      	movmi	r3, #43	; 0x2b
 800bba8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800bbac:	f89a 3000 	ldrb.w	r3, [sl]
 800bbb0:	2b2a      	cmp	r3, #42	; 0x2a
 800bbb2:	d015      	beq.n	800bbe0 <_vfiprintf_r+0x13c>
 800bbb4:	9a07      	ldr	r2, [sp, #28]
 800bbb6:	4654      	mov	r4, sl
 800bbb8:	2000      	movs	r0, #0
 800bbba:	f04f 0c0a 	mov.w	ip, #10
 800bbbe:	4621      	mov	r1, r4
 800bbc0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bbc4:	3b30      	subs	r3, #48	; 0x30
 800bbc6:	2b09      	cmp	r3, #9
 800bbc8:	d94e      	bls.n	800bc68 <_vfiprintf_r+0x1c4>
 800bbca:	b1b0      	cbz	r0, 800bbfa <_vfiprintf_r+0x156>
 800bbcc:	9207      	str	r2, [sp, #28]
 800bbce:	e014      	b.n	800bbfa <_vfiprintf_r+0x156>
 800bbd0:	eba0 0308 	sub.w	r3, r0, r8
 800bbd4:	fa09 f303 	lsl.w	r3, r9, r3
 800bbd8:	4313      	orrs	r3, r2
 800bbda:	9304      	str	r3, [sp, #16]
 800bbdc:	46a2      	mov	sl, r4
 800bbde:	e7d2      	b.n	800bb86 <_vfiprintf_r+0xe2>
 800bbe0:	9b03      	ldr	r3, [sp, #12]
 800bbe2:	1d19      	adds	r1, r3, #4
 800bbe4:	681b      	ldr	r3, [r3, #0]
 800bbe6:	9103      	str	r1, [sp, #12]
 800bbe8:	2b00      	cmp	r3, #0
 800bbea:	bfbb      	ittet	lt
 800bbec:	425b      	neglt	r3, r3
 800bbee:	f042 0202 	orrlt.w	r2, r2, #2
 800bbf2:	9307      	strge	r3, [sp, #28]
 800bbf4:	9307      	strlt	r3, [sp, #28]
 800bbf6:	bfb8      	it	lt
 800bbf8:	9204      	strlt	r2, [sp, #16]
 800bbfa:	7823      	ldrb	r3, [r4, #0]
 800bbfc:	2b2e      	cmp	r3, #46	; 0x2e
 800bbfe:	d10c      	bne.n	800bc1a <_vfiprintf_r+0x176>
 800bc00:	7863      	ldrb	r3, [r4, #1]
 800bc02:	2b2a      	cmp	r3, #42	; 0x2a
 800bc04:	d135      	bne.n	800bc72 <_vfiprintf_r+0x1ce>
 800bc06:	9b03      	ldr	r3, [sp, #12]
 800bc08:	1d1a      	adds	r2, r3, #4
 800bc0a:	681b      	ldr	r3, [r3, #0]
 800bc0c:	9203      	str	r2, [sp, #12]
 800bc0e:	2b00      	cmp	r3, #0
 800bc10:	bfb8      	it	lt
 800bc12:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800bc16:	3402      	adds	r4, #2
 800bc18:	9305      	str	r3, [sp, #20]
 800bc1a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800bd00 <_vfiprintf_r+0x25c>
 800bc1e:	7821      	ldrb	r1, [r4, #0]
 800bc20:	2203      	movs	r2, #3
 800bc22:	4650      	mov	r0, sl
 800bc24:	f7f4 fafc 	bl	8000220 <memchr>
 800bc28:	b140      	cbz	r0, 800bc3c <_vfiprintf_r+0x198>
 800bc2a:	2340      	movs	r3, #64	; 0x40
 800bc2c:	eba0 000a 	sub.w	r0, r0, sl
 800bc30:	fa03 f000 	lsl.w	r0, r3, r0
 800bc34:	9b04      	ldr	r3, [sp, #16]
 800bc36:	4303      	orrs	r3, r0
 800bc38:	3401      	adds	r4, #1
 800bc3a:	9304      	str	r3, [sp, #16]
 800bc3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bc40:	482c      	ldr	r0, [pc, #176]	; (800bcf4 <_vfiprintf_r+0x250>)
 800bc42:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800bc46:	2206      	movs	r2, #6
 800bc48:	f7f4 faea 	bl	8000220 <memchr>
 800bc4c:	2800      	cmp	r0, #0
 800bc4e:	d03f      	beq.n	800bcd0 <_vfiprintf_r+0x22c>
 800bc50:	4b29      	ldr	r3, [pc, #164]	; (800bcf8 <_vfiprintf_r+0x254>)
 800bc52:	bb1b      	cbnz	r3, 800bc9c <_vfiprintf_r+0x1f8>
 800bc54:	9b03      	ldr	r3, [sp, #12]
 800bc56:	3307      	adds	r3, #7
 800bc58:	f023 0307 	bic.w	r3, r3, #7
 800bc5c:	3308      	adds	r3, #8
 800bc5e:	9303      	str	r3, [sp, #12]
 800bc60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bc62:	443b      	add	r3, r7
 800bc64:	9309      	str	r3, [sp, #36]	; 0x24
 800bc66:	e767      	b.n	800bb38 <_vfiprintf_r+0x94>
 800bc68:	fb0c 3202 	mla	r2, ip, r2, r3
 800bc6c:	460c      	mov	r4, r1
 800bc6e:	2001      	movs	r0, #1
 800bc70:	e7a5      	b.n	800bbbe <_vfiprintf_r+0x11a>
 800bc72:	2300      	movs	r3, #0
 800bc74:	3401      	adds	r4, #1
 800bc76:	9305      	str	r3, [sp, #20]
 800bc78:	4619      	mov	r1, r3
 800bc7a:	f04f 0c0a 	mov.w	ip, #10
 800bc7e:	4620      	mov	r0, r4
 800bc80:	f810 2b01 	ldrb.w	r2, [r0], #1
 800bc84:	3a30      	subs	r2, #48	; 0x30
 800bc86:	2a09      	cmp	r2, #9
 800bc88:	d903      	bls.n	800bc92 <_vfiprintf_r+0x1ee>
 800bc8a:	2b00      	cmp	r3, #0
 800bc8c:	d0c5      	beq.n	800bc1a <_vfiprintf_r+0x176>
 800bc8e:	9105      	str	r1, [sp, #20]
 800bc90:	e7c3      	b.n	800bc1a <_vfiprintf_r+0x176>
 800bc92:	fb0c 2101 	mla	r1, ip, r1, r2
 800bc96:	4604      	mov	r4, r0
 800bc98:	2301      	movs	r3, #1
 800bc9a:	e7f0      	b.n	800bc7e <_vfiprintf_r+0x1da>
 800bc9c:	ab03      	add	r3, sp, #12
 800bc9e:	9300      	str	r3, [sp, #0]
 800bca0:	462a      	mov	r2, r5
 800bca2:	4b16      	ldr	r3, [pc, #88]	; (800bcfc <_vfiprintf_r+0x258>)
 800bca4:	a904      	add	r1, sp, #16
 800bca6:	4630      	mov	r0, r6
 800bca8:	f7fd feaa 	bl	8009a00 <_printf_float>
 800bcac:	4607      	mov	r7, r0
 800bcae:	1c78      	adds	r0, r7, #1
 800bcb0:	d1d6      	bne.n	800bc60 <_vfiprintf_r+0x1bc>
 800bcb2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bcb4:	07d9      	lsls	r1, r3, #31
 800bcb6:	d405      	bmi.n	800bcc4 <_vfiprintf_r+0x220>
 800bcb8:	89ab      	ldrh	r3, [r5, #12]
 800bcba:	059a      	lsls	r2, r3, #22
 800bcbc:	d402      	bmi.n	800bcc4 <_vfiprintf_r+0x220>
 800bcbe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bcc0:	f7ff fe6a 	bl	800b998 <__retarget_lock_release_recursive>
 800bcc4:	89ab      	ldrh	r3, [r5, #12]
 800bcc6:	065b      	lsls	r3, r3, #25
 800bcc8:	f53f af12 	bmi.w	800baf0 <_vfiprintf_r+0x4c>
 800bccc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bcce:	e711      	b.n	800baf4 <_vfiprintf_r+0x50>
 800bcd0:	ab03      	add	r3, sp, #12
 800bcd2:	9300      	str	r3, [sp, #0]
 800bcd4:	462a      	mov	r2, r5
 800bcd6:	4b09      	ldr	r3, [pc, #36]	; (800bcfc <_vfiprintf_r+0x258>)
 800bcd8:	a904      	add	r1, sp, #16
 800bcda:	4630      	mov	r0, r6
 800bcdc:	f7fe f934 	bl	8009f48 <_printf_i>
 800bce0:	e7e4      	b.n	800bcac <_vfiprintf_r+0x208>
 800bce2:	bf00      	nop
 800bce4:	0800cde4 	.word	0x0800cde4
 800bce8:	0800ce04 	.word	0x0800ce04
 800bcec:	0800cdc4 	.word	0x0800cdc4
 800bcf0:	0800cc6c 	.word	0x0800cc6c
 800bcf4:	0800cc76 	.word	0x0800cc76
 800bcf8:	08009a01 	.word	0x08009a01
 800bcfc:	0800ba7f 	.word	0x0800ba7f
 800bd00:	0800cc72 	.word	0x0800cc72

0800bd04 <__swbuf_r>:
 800bd04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd06:	460e      	mov	r6, r1
 800bd08:	4614      	mov	r4, r2
 800bd0a:	4605      	mov	r5, r0
 800bd0c:	b118      	cbz	r0, 800bd16 <__swbuf_r+0x12>
 800bd0e:	6983      	ldr	r3, [r0, #24]
 800bd10:	b90b      	cbnz	r3, 800bd16 <__swbuf_r+0x12>
 800bd12:	f000 f9e7 	bl	800c0e4 <__sinit>
 800bd16:	4b21      	ldr	r3, [pc, #132]	; (800bd9c <__swbuf_r+0x98>)
 800bd18:	429c      	cmp	r4, r3
 800bd1a:	d12b      	bne.n	800bd74 <__swbuf_r+0x70>
 800bd1c:	686c      	ldr	r4, [r5, #4]
 800bd1e:	69a3      	ldr	r3, [r4, #24]
 800bd20:	60a3      	str	r3, [r4, #8]
 800bd22:	89a3      	ldrh	r3, [r4, #12]
 800bd24:	071a      	lsls	r2, r3, #28
 800bd26:	d52f      	bpl.n	800bd88 <__swbuf_r+0x84>
 800bd28:	6923      	ldr	r3, [r4, #16]
 800bd2a:	b36b      	cbz	r3, 800bd88 <__swbuf_r+0x84>
 800bd2c:	6923      	ldr	r3, [r4, #16]
 800bd2e:	6820      	ldr	r0, [r4, #0]
 800bd30:	1ac0      	subs	r0, r0, r3
 800bd32:	6963      	ldr	r3, [r4, #20]
 800bd34:	b2f6      	uxtb	r6, r6
 800bd36:	4283      	cmp	r3, r0
 800bd38:	4637      	mov	r7, r6
 800bd3a:	dc04      	bgt.n	800bd46 <__swbuf_r+0x42>
 800bd3c:	4621      	mov	r1, r4
 800bd3e:	4628      	mov	r0, r5
 800bd40:	f000 f93c 	bl	800bfbc <_fflush_r>
 800bd44:	bb30      	cbnz	r0, 800bd94 <__swbuf_r+0x90>
 800bd46:	68a3      	ldr	r3, [r4, #8]
 800bd48:	3b01      	subs	r3, #1
 800bd4a:	60a3      	str	r3, [r4, #8]
 800bd4c:	6823      	ldr	r3, [r4, #0]
 800bd4e:	1c5a      	adds	r2, r3, #1
 800bd50:	6022      	str	r2, [r4, #0]
 800bd52:	701e      	strb	r6, [r3, #0]
 800bd54:	6963      	ldr	r3, [r4, #20]
 800bd56:	3001      	adds	r0, #1
 800bd58:	4283      	cmp	r3, r0
 800bd5a:	d004      	beq.n	800bd66 <__swbuf_r+0x62>
 800bd5c:	89a3      	ldrh	r3, [r4, #12]
 800bd5e:	07db      	lsls	r3, r3, #31
 800bd60:	d506      	bpl.n	800bd70 <__swbuf_r+0x6c>
 800bd62:	2e0a      	cmp	r6, #10
 800bd64:	d104      	bne.n	800bd70 <__swbuf_r+0x6c>
 800bd66:	4621      	mov	r1, r4
 800bd68:	4628      	mov	r0, r5
 800bd6a:	f000 f927 	bl	800bfbc <_fflush_r>
 800bd6e:	b988      	cbnz	r0, 800bd94 <__swbuf_r+0x90>
 800bd70:	4638      	mov	r0, r7
 800bd72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bd74:	4b0a      	ldr	r3, [pc, #40]	; (800bda0 <__swbuf_r+0x9c>)
 800bd76:	429c      	cmp	r4, r3
 800bd78:	d101      	bne.n	800bd7e <__swbuf_r+0x7a>
 800bd7a:	68ac      	ldr	r4, [r5, #8]
 800bd7c:	e7cf      	b.n	800bd1e <__swbuf_r+0x1a>
 800bd7e:	4b09      	ldr	r3, [pc, #36]	; (800bda4 <__swbuf_r+0xa0>)
 800bd80:	429c      	cmp	r4, r3
 800bd82:	bf08      	it	eq
 800bd84:	68ec      	ldreq	r4, [r5, #12]
 800bd86:	e7ca      	b.n	800bd1e <__swbuf_r+0x1a>
 800bd88:	4621      	mov	r1, r4
 800bd8a:	4628      	mov	r0, r5
 800bd8c:	f000 f81a 	bl	800bdc4 <__swsetup_r>
 800bd90:	2800      	cmp	r0, #0
 800bd92:	d0cb      	beq.n	800bd2c <__swbuf_r+0x28>
 800bd94:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800bd98:	e7ea      	b.n	800bd70 <__swbuf_r+0x6c>
 800bd9a:	bf00      	nop
 800bd9c:	0800cde4 	.word	0x0800cde4
 800bda0:	0800ce04 	.word	0x0800ce04
 800bda4:	0800cdc4 	.word	0x0800cdc4

0800bda8 <__ascii_wctomb>:
 800bda8:	b149      	cbz	r1, 800bdbe <__ascii_wctomb+0x16>
 800bdaa:	2aff      	cmp	r2, #255	; 0xff
 800bdac:	bf85      	ittet	hi
 800bdae:	238a      	movhi	r3, #138	; 0x8a
 800bdb0:	6003      	strhi	r3, [r0, #0]
 800bdb2:	700a      	strbls	r2, [r1, #0]
 800bdb4:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 800bdb8:	bf98      	it	ls
 800bdba:	2001      	movls	r0, #1
 800bdbc:	4770      	bx	lr
 800bdbe:	4608      	mov	r0, r1
 800bdc0:	4770      	bx	lr
	...

0800bdc4 <__swsetup_r>:
 800bdc4:	4b32      	ldr	r3, [pc, #200]	; (800be90 <__swsetup_r+0xcc>)
 800bdc6:	b570      	push	{r4, r5, r6, lr}
 800bdc8:	681d      	ldr	r5, [r3, #0]
 800bdca:	4606      	mov	r6, r0
 800bdcc:	460c      	mov	r4, r1
 800bdce:	b125      	cbz	r5, 800bdda <__swsetup_r+0x16>
 800bdd0:	69ab      	ldr	r3, [r5, #24]
 800bdd2:	b913      	cbnz	r3, 800bdda <__swsetup_r+0x16>
 800bdd4:	4628      	mov	r0, r5
 800bdd6:	f000 f985 	bl	800c0e4 <__sinit>
 800bdda:	4b2e      	ldr	r3, [pc, #184]	; (800be94 <__swsetup_r+0xd0>)
 800bddc:	429c      	cmp	r4, r3
 800bdde:	d10f      	bne.n	800be00 <__swsetup_r+0x3c>
 800bde0:	686c      	ldr	r4, [r5, #4]
 800bde2:	89a3      	ldrh	r3, [r4, #12]
 800bde4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800bde8:	0719      	lsls	r1, r3, #28
 800bdea:	d42c      	bmi.n	800be46 <__swsetup_r+0x82>
 800bdec:	06dd      	lsls	r5, r3, #27
 800bdee:	d411      	bmi.n	800be14 <__swsetup_r+0x50>
 800bdf0:	2309      	movs	r3, #9
 800bdf2:	6033      	str	r3, [r6, #0]
 800bdf4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800bdf8:	81a3      	strh	r3, [r4, #12]
 800bdfa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bdfe:	e03e      	b.n	800be7e <__swsetup_r+0xba>
 800be00:	4b25      	ldr	r3, [pc, #148]	; (800be98 <__swsetup_r+0xd4>)
 800be02:	429c      	cmp	r4, r3
 800be04:	d101      	bne.n	800be0a <__swsetup_r+0x46>
 800be06:	68ac      	ldr	r4, [r5, #8]
 800be08:	e7eb      	b.n	800bde2 <__swsetup_r+0x1e>
 800be0a:	4b24      	ldr	r3, [pc, #144]	; (800be9c <__swsetup_r+0xd8>)
 800be0c:	429c      	cmp	r4, r3
 800be0e:	bf08      	it	eq
 800be10:	68ec      	ldreq	r4, [r5, #12]
 800be12:	e7e6      	b.n	800bde2 <__swsetup_r+0x1e>
 800be14:	0758      	lsls	r0, r3, #29
 800be16:	d512      	bpl.n	800be3e <__swsetup_r+0x7a>
 800be18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800be1a:	b141      	cbz	r1, 800be2e <__swsetup_r+0x6a>
 800be1c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800be20:	4299      	cmp	r1, r3
 800be22:	d002      	beq.n	800be2a <__swsetup_r+0x66>
 800be24:	4630      	mov	r0, r6
 800be26:	f7fd fc6b 	bl	8009700 <_free_r>
 800be2a:	2300      	movs	r3, #0
 800be2c:	6363      	str	r3, [r4, #52]	; 0x34
 800be2e:	89a3      	ldrh	r3, [r4, #12]
 800be30:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800be34:	81a3      	strh	r3, [r4, #12]
 800be36:	2300      	movs	r3, #0
 800be38:	6063      	str	r3, [r4, #4]
 800be3a:	6923      	ldr	r3, [r4, #16]
 800be3c:	6023      	str	r3, [r4, #0]
 800be3e:	89a3      	ldrh	r3, [r4, #12]
 800be40:	f043 0308 	orr.w	r3, r3, #8
 800be44:	81a3      	strh	r3, [r4, #12]
 800be46:	6923      	ldr	r3, [r4, #16]
 800be48:	b94b      	cbnz	r3, 800be5e <__swsetup_r+0x9a>
 800be4a:	89a3      	ldrh	r3, [r4, #12]
 800be4c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800be50:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800be54:	d003      	beq.n	800be5e <__swsetup_r+0x9a>
 800be56:	4621      	mov	r1, r4
 800be58:	4630      	mov	r0, r6
 800be5a:	f000 fa05 	bl	800c268 <__smakebuf_r>
 800be5e:	89a0      	ldrh	r0, [r4, #12]
 800be60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800be64:	f010 0301 	ands.w	r3, r0, #1
 800be68:	d00a      	beq.n	800be80 <__swsetup_r+0xbc>
 800be6a:	2300      	movs	r3, #0
 800be6c:	60a3      	str	r3, [r4, #8]
 800be6e:	6963      	ldr	r3, [r4, #20]
 800be70:	425b      	negs	r3, r3
 800be72:	61a3      	str	r3, [r4, #24]
 800be74:	6923      	ldr	r3, [r4, #16]
 800be76:	b943      	cbnz	r3, 800be8a <__swsetup_r+0xc6>
 800be78:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800be7c:	d1ba      	bne.n	800bdf4 <__swsetup_r+0x30>
 800be7e:	bd70      	pop	{r4, r5, r6, pc}
 800be80:	0781      	lsls	r1, r0, #30
 800be82:	bf58      	it	pl
 800be84:	6963      	ldrpl	r3, [r4, #20]
 800be86:	60a3      	str	r3, [r4, #8]
 800be88:	e7f4      	b.n	800be74 <__swsetup_r+0xb0>
 800be8a:	2000      	movs	r0, #0
 800be8c:	e7f7      	b.n	800be7e <__swsetup_r+0xba>
 800be8e:	bf00      	nop
 800be90:	200023fc 	.word	0x200023fc
 800be94:	0800cde4 	.word	0x0800cde4
 800be98:	0800ce04 	.word	0x0800ce04
 800be9c:	0800cdc4 	.word	0x0800cdc4

0800bea0 <abort>:
 800bea0:	b508      	push	{r3, lr}
 800bea2:	2006      	movs	r0, #6
 800bea4:	f000 fa50 	bl	800c348 <raise>
 800bea8:	2001      	movs	r0, #1
 800beaa:	f7f8 ffaf 	bl	8004e0c <_exit>
	...

0800beb0 <__sflush_r>:
 800beb0:	898a      	ldrh	r2, [r1, #12]
 800beb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beb6:	4605      	mov	r5, r0
 800beb8:	0710      	lsls	r0, r2, #28
 800beba:	460c      	mov	r4, r1
 800bebc:	d458      	bmi.n	800bf70 <__sflush_r+0xc0>
 800bebe:	684b      	ldr	r3, [r1, #4]
 800bec0:	2b00      	cmp	r3, #0
 800bec2:	dc05      	bgt.n	800bed0 <__sflush_r+0x20>
 800bec4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800bec6:	2b00      	cmp	r3, #0
 800bec8:	dc02      	bgt.n	800bed0 <__sflush_r+0x20>
 800beca:	2000      	movs	r0, #0
 800becc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bed0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800bed2:	2e00      	cmp	r6, #0
 800bed4:	d0f9      	beq.n	800beca <__sflush_r+0x1a>
 800bed6:	2300      	movs	r3, #0
 800bed8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800bedc:	682f      	ldr	r7, [r5, #0]
 800bede:	602b      	str	r3, [r5, #0]
 800bee0:	d032      	beq.n	800bf48 <__sflush_r+0x98>
 800bee2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800bee4:	89a3      	ldrh	r3, [r4, #12]
 800bee6:	075a      	lsls	r2, r3, #29
 800bee8:	d505      	bpl.n	800bef6 <__sflush_r+0x46>
 800beea:	6863      	ldr	r3, [r4, #4]
 800beec:	1ac0      	subs	r0, r0, r3
 800beee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bef0:	b10b      	cbz	r3, 800bef6 <__sflush_r+0x46>
 800bef2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bef4:	1ac0      	subs	r0, r0, r3
 800bef6:	2300      	movs	r3, #0
 800bef8:	4602      	mov	r2, r0
 800befa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800befc:	6a21      	ldr	r1, [r4, #32]
 800befe:	4628      	mov	r0, r5
 800bf00:	47b0      	blx	r6
 800bf02:	1c43      	adds	r3, r0, #1
 800bf04:	89a3      	ldrh	r3, [r4, #12]
 800bf06:	d106      	bne.n	800bf16 <__sflush_r+0x66>
 800bf08:	6829      	ldr	r1, [r5, #0]
 800bf0a:	291d      	cmp	r1, #29
 800bf0c:	d82c      	bhi.n	800bf68 <__sflush_r+0xb8>
 800bf0e:	4a2a      	ldr	r2, [pc, #168]	; (800bfb8 <__sflush_r+0x108>)
 800bf10:	40ca      	lsrs	r2, r1
 800bf12:	07d6      	lsls	r6, r2, #31
 800bf14:	d528      	bpl.n	800bf68 <__sflush_r+0xb8>
 800bf16:	2200      	movs	r2, #0
 800bf18:	6062      	str	r2, [r4, #4]
 800bf1a:	04d9      	lsls	r1, r3, #19
 800bf1c:	6922      	ldr	r2, [r4, #16]
 800bf1e:	6022      	str	r2, [r4, #0]
 800bf20:	d504      	bpl.n	800bf2c <__sflush_r+0x7c>
 800bf22:	1c42      	adds	r2, r0, #1
 800bf24:	d101      	bne.n	800bf2a <__sflush_r+0x7a>
 800bf26:	682b      	ldr	r3, [r5, #0]
 800bf28:	b903      	cbnz	r3, 800bf2c <__sflush_r+0x7c>
 800bf2a:	6560      	str	r0, [r4, #84]	; 0x54
 800bf2c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800bf2e:	602f      	str	r7, [r5, #0]
 800bf30:	2900      	cmp	r1, #0
 800bf32:	d0ca      	beq.n	800beca <__sflush_r+0x1a>
 800bf34:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800bf38:	4299      	cmp	r1, r3
 800bf3a:	d002      	beq.n	800bf42 <__sflush_r+0x92>
 800bf3c:	4628      	mov	r0, r5
 800bf3e:	f7fd fbdf 	bl	8009700 <_free_r>
 800bf42:	2000      	movs	r0, #0
 800bf44:	6360      	str	r0, [r4, #52]	; 0x34
 800bf46:	e7c1      	b.n	800becc <__sflush_r+0x1c>
 800bf48:	6a21      	ldr	r1, [r4, #32]
 800bf4a:	2301      	movs	r3, #1
 800bf4c:	4628      	mov	r0, r5
 800bf4e:	47b0      	blx	r6
 800bf50:	1c41      	adds	r1, r0, #1
 800bf52:	d1c7      	bne.n	800bee4 <__sflush_r+0x34>
 800bf54:	682b      	ldr	r3, [r5, #0]
 800bf56:	2b00      	cmp	r3, #0
 800bf58:	d0c4      	beq.n	800bee4 <__sflush_r+0x34>
 800bf5a:	2b1d      	cmp	r3, #29
 800bf5c:	d001      	beq.n	800bf62 <__sflush_r+0xb2>
 800bf5e:	2b16      	cmp	r3, #22
 800bf60:	d101      	bne.n	800bf66 <__sflush_r+0xb6>
 800bf62:	602f      	str	r7, [r5, #0]
 800bf64:	e7b1      	b.n	800beca <__sflush_r+0x1a>
 800bf66:	89a3      	ldrh	r3, [r4, #12]
 800bf68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bf6c:	81a3      	strh	r3, [r4, #12]
 800bf6e:	e7ad      	b.n	800becc <__sflush_r+0x1c>
 800bf70:	690f      	ldr	r7, [r1, #16]
 800bf72:	2f00      	cmp	r7, #0
 800bf74:	d0a9      	beq.n	800beca <__sflush_r+0x1a>
 800bf76:	0793      	lsls	r3, r2, #30
 800bf78:	680e      	ldr	r6, [r1, #0]
 800bf7a:	bf08      	it	eq
 800bf7c:	694b      	ldreq	r3, [r1, #20]
 800bf7e:	600f      	str	r7, [r1, #0]
 800bf80:	bf18      	it	ne
 800bf82:	2300      	movne	r3, #0
 800bf84:	eba6 0807 	sub.w	r8, r6, r7
 800bf88:	608b      	str	r3, [r1, #8]
 800bf8a:	f1b8 0f00 	cmp.w	r8, #0
 800bf8e:	dd9c      	ble.n	800beca <__sflush_r+0x1a>
 800bf90:	6a21      	ldr	r1, [r4, #32]
 800bf92:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800bf94:	4643      	mov	r3, r8
 800bf96:	463a      	mov	r2, r7
 800bf98:	4628      	mov	r0, r5
 800bf9a:	47b0      	blx	r6
 800bf9c:	2800      	cmp	r0, #0
 800bf9e:	dc06      	bgt.n	800bfae <__sflush_r+0xfe>
 800bfa0:	89a3      	ldrh	r3, [r4, #12]
 800bfa2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bfa6:	81a3      	strh	r3, [r4, #12]
 800bfa8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800bfac:	e78e      	b.n	800becc <__sflush_r+0x1c>
 800bfae:	4407      	add	r7, r0
 800bfb0:	eba8 0800 	sub.w	r8, r8, r0
 800bfb4:	e7e9      	b.n	800bf8a <__sflush_r+0xda>
 800bfb6:	bf00      	nop
 800bfb8:	20400001 	.word	0x20400001

0800bfbc <_fflush_r>:
 800bfbc:	b538      	push	{r3, r4, r5, lr}
 800bfbe:	690b      	ldr	r3, [r1, #16]
 800bfc0:	4605      	mov	r5, r0
 800bfc2:	460c      	mov	r4, r1
 800bfc4:	b913      	cbnz	r3, 800bfcc <_fflush_r+0x10>
 800bfc6:	2500      	movs	r5, #0
 800bfc8:	4628      	mov	r0, r5
 800bfca:	bd38      	pop	{r3, r4, r5, pc}
 800bfcc:	b118      	cbz	r0, 800bfd6 <_fflush_r+0x1a>
 800bfce:	6983      	ldr	r3, [r0, #24]
 800bfd0:	b90b      	cbnz	r3, 800bfd6 <_fflush_r+0x1a>
 800bfd2:	f000 f887 	bl	800c0e4 <__sinit>
 800bfd6:	4b14      	ldr	r3, [pc, #80]	; (800c028 <_fflush_r+0x6c>)
 800bfd8:	429c      	cmp	r4, r3
 800bfda:	d11b      	bne.n	800c014 <_fflush_r+0x58>
 800bfdc:	686c      	ldr	r4, [r5, #4]
 800bfde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800bfe2:	2b00      	cmp	r3, #0
 800bfe4:	d0ef      	beq.n	800bfc6 <_fflush_r+0xa>
 800bfe6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800bfe8:	07d0      	lsls	r0, r2, #31
 800bfea:	d404      	bmi.n	800bff6 <_fflush_r+0x3a>
 800bfec:	0599      	lsls	r1, r3, #22
 800bfee:	d402      	bmi.n	800bff6 <_fflush_r+0x3a>
 800bff0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bff2:	f7ff fcd0 	bl	800b996 <__retarget_lock_acquire_recursive>
 800bff6:	4628      	mov	r0, r5
 800bff8:	4621      	mov	r1, r4
 800bffa:	f7ff ff59 	bl	800beb0 <__sflush_r>
 800bffe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c000:	07da      	lsls	r2, r3, #31
 800c002:	4605      	mov	r5, r0
 800c004:	d4e0      	bmi.n	800bfc8 <_fflush_r+0xc>
 800c006:	89a3      	ldrh	r3, [r4, #12]
 800c008:	059b      	lsls	r3, r3, #22
 800c00a:	d4dd      	bmi.n	800bfc8 <_fflush_r+0xc>
 800c00c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c00e:	f7ff fcc3 	bl	800b998 <__retarget_lock_release_recursive>
 800c012:	e7d9      	b.n	800bfc8 <_fflush_r+0xc>
 800c014:	4b05      	ldr	r3, [pc, #20]	; (800c02c <_fflush_r+0x70>)
 800c016:	429c      	cmp	r4, r3
 800c018:	d101      	bne.n	800c01e <_fflush_r+0x62>
 800c01a:	68ac      	ldr	r4, [r5, #8]
 800c01c:	e7df      	b.n	800bfde <_fflush_r+0x22>
 800c01e:	4b04      	ldr	r3, [pc, #16]	; (800c030 <_fflush_r+0x74>)
 800c020:	429c      	cmp	r4, r3
 800c022:	bf08      	it	eq
 800c024:	68ec      	ldreq	r4, [r5, #12]
 800c026:	e7da      	b.n	800bfde <_fflush_r+0x22>
 800c028:	0800cde4 	.word	0x0800cde4
 800c02c:	0800ce04 	.word	0x0800ce04
 800c030:	0800cdc4 	.word	0x0800cdc4

0800c034 <std>:
 800c034:	2300      	movs	r3, #0
 800c036:	b510      	push	{r4, lr}
 800c038:	4604      	mov	r4, r0
 800c03a:	e9c0 3300 	strd	r3, r3, [r0]
 800c03e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c042:	6083      	str	r3, [r0, #8]
 800c044:	8181      	strh	r1, [r0, #12]
 800c046:	6643      	str	r3, [r0, #100]	; 0x64
 800c048:	81c2      	strh	r2, [r0, #14]
 800c04a:	6183      	str	r3, [r0, #24]
 800c04c:	4619      	mov	r1, r3
 800c04e:	2208      	movs	r2, #8
 800c050:	305c      	adds	r0, #92	; 0x5c
 800c052:	f7fd fb4d 	bl	80096f0 <memset>
 800c056:	4b05      	ldr	r3, [pc, #20]	; (800c06c <std+0x38>)
 800c058:	6263      	str	r3, [r4, #36]	; 0x24
 800c05a:	4b05      	ldr	r3, [pc, #20]	; (800c070 <std+0x3c>)
 800c05c:	62a3      	str	r3, [r4, #40]	; 0x28
 800c05e:	4b05      	ldr	r3, [pc, #20]	; (800c074 <std+0x40>)
 800c060:	62e3      	str	r3, [r4, #44]	; 0x2c
 800c062:	4b05      	ldr	r3, [pc, #20]	; (800c078 <std+0x44>)
 800c064:	6224      	str	r4, [r4, #32]
 800c066:	6323      	str	r3, [r4, #48]	; 0x30
 800c068:	bd10      	pop	{r4, pc}
 800c06a:	bf00      	nop
 800c06c:	0800c381 	.word	0x0800c381
 800c070:	0800c3a3 	.word	0x0800c3a3
 800c074:	0800c3db 	.word	0x0800c3db
 800c078:	0800c3ff 	.word	0x0800c3ff

0800c07c <_cleanup_r>:
 800c07c:	4901      	ldr	r1, [pc, #4]	; (800c084 <_cleanup_r+0x8>)
 800c07e:	f000 b8af 	b.w	800c1e0 <_fwalk_reent>
 800c082:	bf00      	nop
 800c084:	0800bfbd 	.word	0x0800bfbd

0800c088 <__sfmoreglue>:
 800c088:	b570      	push	{r4, r5, r6, lr}
 800c08a:	2268      	movs	r2, #104	; 0x68
 800c08c:	1e4d      	subs	r5, r1, #1
 800c08e:	4355      	muls	r5, r2
 800c090:	460e      	mov	r6, r1
 800c092:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800c096:	f7fd fb9f 	bl	80097d8 <_malloc_r>
 800c09a:	4604      	mov	r4, r0
 800c09c:	b140      	cbz	r0, 800c0b0 <__sfmoreglue+0x28>
 800c09e:	2100      	movs	r1, #0
 800c0a0:	e9c0 1600 	strd	r1, r6, [r0]
 800c0a4:	300c      	adds	r0, #12
 800c0a6:	60a0      	str	r0, [r4, #8]
 800c0a8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800c0ac:	f7fd fb20 	bl	80096f0 <memset>
 800c0b0:	4620      	mov	r0, r4
 800c0b2:	bd70      	pop	{r4, r5, r6, pc}

0800c0b4 <__sfp_lock_acquire>:
 800c0b4:	4801      	ldr	r0, [pc, #4]	; (800c0bc <__sfp_lock_acquire+0x8>)
 800c0b6:	f7ff bc6e 	b.w	800b996 <__retarget_lock_acquire_recursive>
 800c0ba:	bf00      	nop
 800c0bc:	2000327d 	.word	0x2000327d

0800c0c0 <__sfp_lock_release>:
 800c0c0:	4801      	ldr	r0, [pc, #4]	; (800c0c8 <__sfp_lock_release+0x8>)
 800c0c2:	f7ff bc69 	b.w	800b998 <__retarget_lock_release_recursive>
 800c0c6:	bf00      	nop
 800c0c8:	2000327d 	.word	0x2000327d

0800c0cc <__sinit_lock_acquire>:
 800c0cc:	4801      	ldr	r0, [pc, #4]	; (800c0d4 <__sinit_lock_acquire+0x8>)
 800c0ce:	f7ff bc62 	b.w	800b996 <__retarget_lock_acquire_recursive>
 800c0d2:	bf00      	nop
 800c0d4:	2000327e 	.word	0x2000327e

0800c0d8 <__sinit_lock_release>:
 800c0d8:	4801      	ldr	r0, [pc, #4]	; (800c0e0 <__sinit_lock_release+0x8>)
 800c0da:	f7ff bc5d 	b.w	800b998 <__retarget_lock_release_recursive>
 800c0de:	bf00      	nop
 800c0e0:	2000327e 	.word	0x2000327e

0800c0e4 <__sinit>:
 800c0e4:	b510      	push	{r4, lr}
 800c0e6:	4604      	mov	r4, r0
 800c0e8:	f7ff fff0 	bl	800c0cc <__sinit_lock_acquire>
 800c0ec:	69a3      	ldr	r3, [r4, #24]
 800c0ee:	b11b      	cbz	r3, 800c0f8 <__sinit+0x14>
 800c0f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0f4:	f7ff bff0 	b.w	800c0d8 <__sinit_lock_release>
 800c0f8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800c0fc:	6523      	str	r3, [r4, #80]	; 0x50
 800c0fe:	4b13      	ldr	r3, [pc, #76]	; (800c14c <__sinit+0x68>)
 800c100:	4a13      	ldr	r2, [pc, #76]	; (800c150 <__sinit+0x6c>)
 800c102:	681b      	ldr	r3, [r3, #0]
 800c104:	62a2      	str	r2, [r4, #40]	; 0x28
 800c106:	42a3      	cmp	r3, r4
 800c108:	bf04      	itt	eq
 800c10a:	2301      	moveq	r3, #1
 800c10c:	61a3      	streq	r3, [r4, #24]
 800c10e:	4620      	mov	r0, r4
 800c110:	f000 f820 	bl	800c154 <__sfp>
 800c114:	6060      	str	r0, [r4, #4]
 800c116:	4620      	mov	r0, r4
 800c118:	f000 f81c 	bl	800c154 <__sfp>
 800c11c:	60a0      	str	r0, [r4, #8]
 800c11e:	4620      	mov	r0, r4
 800c120:	f000 f818 	bl	800c154 <__sfp>
 800c124:	2200      	movs	r2, #0
 800c126:	60e0      	str	r0, [r4, #12]
 800c128:	2104      	movs	r1, #4
 800c12a:	6860      	ldr	r0, [r4, #4]
 800c12c:	f7ff ff82 	bl	800c034 <std>
 800c130:	68a0      	ldr	r0, [r4, #8]
 800c132:	2201      	movs	r2, #1
 800c134:	2109      	movs	r1, #9
 800c136:	f7ff ff7d 	bl	800c034 <std>
 800c13a:	68e0      	ldr	r0, [r4, #12]
 800c13c:	2202      	movs	r2, #2
 800c13e:	2112      	movs	r1, #18
 800c140:	f7ff ff78 	bl	800c034 <std>
 800c144:	2301      	movs	r3, #1
 800c146:	61a3      	str	r3, [r4, #24]
 800c148:	e7d2      	b.n	800c0f0 <__sinit+0xc>
 800c14a:	bf00      	nop
 800c14c:	0800ca4c 	.word	0x0800ca4c
 800c150:	0800c07d 	.word	0x0800c07d

0800c154 <__sfp>:
 800c154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c156:	4607      	mov	r7, r0
 800c158:	f7ff ffac 	bl	800c0b4 <__sfp_lock_acquire>
 800c15c:	4b1e      	ldr	r3, [pc, #120]	; (800c1d8 <__sfp+0x84>)
 800c15e:	681e      	ldr	r6, [r3, #0]
 800c160:	69b3      	ldr	r3, [r6, #24]
 800c162:	b913      	cbnz	r3, 800c16a <__sfp+0x16>
 800c164:	4630      	mov	r0, r6
 800c166:	f7ff ffbd 	bl	800c0e4 <__sinit>
 800c16a:	3648      	adds	r6, #72	; 0x48
 800c16c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800c170:	3b01      	subs	r3, #1
 800c172:	d503      	bpl.n	800c17c <__sfp+0x28>
 800c174:	6833      	ldr	r3, [r6, #0]
 800c176:	b30b      	cbz	r3, 800c1bc <__sfp+0x68>
 800c178:	6836      	ldr	r6, [r6, #0]
 800c17a:	e7f7      	b.n	800c16c <__sfp+0x18>
 800c17c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800c180:	b9d5      	cbnz	r5, 800c1b8 <__sfp+0x64>
 800c182:	4b16      	ldr	r3, [pc, #88]	; (800c1dc <__sfp+0x88>)
 800c184:	60e3      	str	r3, [r4, #12]
 800c186:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800c18a:	6665      	str	r5, [r4, #100]	; 0x64
 800c18c:	f7ff fc02 	bl	800b994 <__retarget_lock_init_recursive>
 800c190:	f7ff ff96 	bl	800c0c0 <__sfp_lock_release>
 800c194:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800c198:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800c19c:	6025      	str	r5, [r4, #0]
 800c19e:	61a5      	str	r5, [r4, #24]
 800c1a0:	2208      	movs	r2, #8
 800c1a2:	4629      	mov	r1, r5
 800c1a4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800c1a8:	f7fd faa2 	bl	80096f0 <memset>
 800c1ac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800c1b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800c1b4:	4620      	mov	r0, r4
 800c1b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c1b8:	3468      	adds	r4, #104	; 0x68
 800c1ba:	e7d9      	b.n	800c170 <__sfp+0x1c>
 800c1bc:	2104      	movs	r1, #4
 800c1be:	4638      	mov	r0, r7
 800c1c0:	f7ff ff62 	bl	800c088 <__sfmoreglue>
 800c1c4:	4604      	mov	r4, r0
 800c1c6:	6030      	str	r0, [r6, #0]
 800c1c8:	2800      	cmp	r0, #0
 800c1ca:	d1d5      	bne.n	800c178 <__sfp+0x24>
 800c1cc:	f7ff ff78 	bl	800c0c0 <__sfp_lock_release>
 800c1d0:	230c      	movs	r3, #12
 800c1d2:	603b      	str	r3, [r7, #0]
 800c1d4:	e7ee      	b.n	800c1b4 <__sfp+0x60>
 800c1d6:	bf00      	nop
 800c1d8:	0800ca4c 	.word	0x0800ca4c
 800c1dc:	ffff0001 	.word	0xffff0001

0800c1e0 <_fwalk_reent>:
 800c1e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c1e4:	4606      	mov	r6, r0
 800c1e6:	4688      	mov	r8, r1
 800c1e8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800c1ec:	2700      	movs	r7, #0
 800c1ee:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800c1f2:	f1b9 0901 	subs.w	r9, r9, #1
 800c1f6:	d505      	bpl.n	800c204 <_fwalk_reent+0x24>
 800c1f8:	6824      	ldr	r4, [r4, #0]
 800c1fa:	2c00      	cmp	r4, #0
 800c1fc:	d1f7      	bne.n	800c1ee <_fwalk_reent+0xe>
 800c1fe:	4638      	mov	r0, r7
 800c200:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c204:	89ab      	ldrh	r3, [r5, #12]
 800c206:	2b01      	cmp	r3, #1
 800c208:	d907      	bls.n	800c21a <_fwalk_reent+0x3a>
 800c20a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800c20e:	3301      	adds	r3, #1
 800c210:	d003      	beq.n	800c21a <_fwalk_reent+0x3a>
 800c212:	4629      	mov	r1, r5
 800c214:	4630      	mov	r0, r6
 800c216:	47c0      	blx	r8
 800c218:	4307      	orrs	r7, r0
 800c21a:	3568      	adds	r5, #104	; 0x68
 800c21c:	e7e9      	b.n	800c1f2 <_fwalk_reent+0x12>

0800c21e <__swhatbuf_r>:
 800c21e:	b570      	push	{r4, r5, r6, lr}
 800c220:	460e      	mov	r6, r1
 800c222:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c226:	2900      	cmp	r1, #0
 800c228:	b096      	sub	sp, #88	; 0x58
 800c22a:	4614      	mov	r4, r2
 800c22c:	461d      	mov	r5, r3
 800c22e:	da08      	bge.n	800c242 <__swhatbuf_r+0x24>
 800c230:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800c234:	2200      	movs	r2, #0
 800c236:	602a      	str	r2, [r5, #0]
 800c238:	061a      	lsls	r2, r3, #24
 800c23a:	d410      	bmi.n	800c25e <__swhatbuf_r+0x40>
 800c23c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c240:	e00e      	b.n	800c260 <__swhatbuf_r+0x42>
 800c242:	466a      	mov	r2, sp
 800c244:	f000 f902 	bl	800c44c <_fstat_r>
 800c248:	2800      	cmp	r0, #0
 800c24a:	dbf1      	blt.n	800c230 <__swhatbuf_r+0x12>
 800c24c:	9a01      	ldr	r2, [sp, #4]
 800c24e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800c252:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800c256:	425a      	negs	r2, r3
 800c258:	415a      	adcs	r2, r3
 800c25a:	602a      	str	r2, [r5, #0]
 800c25c:	e7ee      	b.n	800c23c <__swhatbuf_r+0x1e>
 800c25e:	2340      	movs	r3, #64	; 0x40
 800c260:	2000      	movs	r0, #0
 800c262:	6023      	str	r3, [r4, #0]
 800c264:	b016      	add	sp, #88	; 0x58
 800c266:	bd70      	pop	{r4, r5, r6, pc}

0800c268 <__smakebuf_r>:
 800c268:	898b      	ldrh	r3, [r1, #12]
 800c26a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c26c:	079d      	lsls	r5, r3, #30
 800c26e:	4606      	mov	r6, r0
 800c270:	460c      	mov	r4, r1
 800c272:	d507      	bpl.n	800c284 <__smakebuf_r+0x1c>
 800c274:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800c278:	6023      	str	r3, [r4, #0]
 800c27a:	6123      	str	r3, [r4, #16]
 800c27c:	2301      	movs	r3, #1
 800c27e:	6163      	str	r3, [r4, #20]
 800c280:	b002      	add	sp, #8
 800c282:	bd70      	pop	{r4, r5, r6, pc}
 800c284:	ab01      	add	r3, sp, #4
 800c286:	466a      	mov	r2, sp
 800c288:	f7ff ffc9 	bl	800c21e <__swhatbuf_r>
 800c28c:	9900      	ldr	r1, [sp, #0]
 800c28e:	4605      	mov	r5, r0
 800c290:	4630      	mov	r0, r6
 800c292:	f7fd faa1 	bl	80097d8 <_malloc_r>
 800c296:	b948      	cbnz	r0, 800c2ac <__smakebuf_r+0x44>
 800c298:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c29c:	059a      	lsls	r2, r3, #22
 800c29e:	d4ef      	bmi.n	800c280 <__smakebuf_r+0x18>
 800c2a0:	f023 0303 	bic.w	r3, r3, #3
 800c2a4:	f043 0302 	orr.w	r3, r3, #2
 800c2a8:	81a3      	strh	r3, [r4, #12]
 800c2aa:	e7e3      	b.n	800c274 <__smakebuf_r+0xc>
 800c2ac:	4b0d      	ldr	r3, [pc, #52]	; (800c2e4 <__smakebuf_r+0x7c>)
 800c2ae:	62b3      	str	r3, [r6, #40]	; 0x28
 800c2b0:	89a3      	ldrh	r3, [r4, #12]
 800c2b2:	6020      	str	r0, [r4, #0]
 800c2b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c2b8:	81a3      	strh	r3, [r4, #12]
 800c2ba:	9b00      	ldr	r3, [sp, #0]
 800c2bc:	6163      	str	r3, [r4, #20]
 800c2be:	9b01      	ldr	r3, [sp, #4]
 800c2c0:	6120      	str	r0, [r4, #16]
 800c2c2:	b15b      	cbz	r3, 800c2dc <__smakebuf_r+0x74>
 800c2c4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c2c8:	4630      	mov	r0, r6
 800c2ca:	f000 f8d1 	bl	800c470 <_isatty_r>
 800c2ce:	b128      	cbz	r0, 800c2dc <__smakebuf_r+0x74>
 800c2d0:	89a3      	ldrh	r3, [r4, #12]
 800c2d2:	f023 0303 	bic.w	r3, r3, #3
 800c2d6:	f043 0301 	orr.w	r3, r3, #1
 800c2da:	81a3      	strh	r3, [r4, #12]
 800c2dc:	89a0      	ldrh	r0, [r4, #12]
 800c2de:	4305      	orrs	r5, r0
 800c2e0:	81a5      	strh	r5, [r4, #12]
 800c2e2:	e7cd      	b.n	800c280 <__smakebuf_r+0x18>
 800c2e4:	0800c07d 	.word	0x0800c07d

0800c2e8 <_malloc_usable_size_r>:
 800c2e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c2ec:	1f18      	subs	r0, r3, #4
 800c2ee:	2b00      	cmp	r3, #0
 800c2f0:	bfbc      	itt	lt
 800c2f2:	580b      	ldrlt	r3, [r1, r0]
 800c2f4:	18c0      	addlt	r0, r0, r3
 800c2f6:	4770      	bx	lr

0800c2f8 <_raise_r>:
 800c2f8:	291f      	cmp	r1, #31
 800c2fa:	b538      	push	{r3, r4, r5, lr}
 800c2fc:	4604      	mov	r4, r0
 800c2fe:	460d      	mov	r5, r1
 800c300:	d904      	bls.n	800c30c <_raise_r+0x14>
 800c302:	2316      	movs	r3, #22
 800c304:	6003      	str	r3, [r0, #0]
 800c306:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800c30a:	bd38      	pop	{r3, r4, r5, pc}
 800c30c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800c30e:	b112      	cbz	r2, 800c316 <_raise_r+0x1e>
 800c310:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800c314:	b94b      	cbnz	r3, 800c32a <_raise_r+0x32>
 800c316:	4620      	mov	r0, r4
 800c318:	f000 f830 	bl	800c37c <_getpid_r>
 800c31c:	462a      	mov	r2, r5
 800c31e:	4601      	mov	r1, r0
 800c320:	4620      	mov	r0, r4
 800c322:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c326:	f000 b817 	b.w	800c358 <_kill_r>
 800c32a:	2b01      	cmp	r3, #1
 800c32c:	d00a      	beq.n	800c344 <_raise_r+0x4c>
 800c32e:	1c59      	adds	r1, r3, #1
 800c330:	d103      	bne.n	800c33a <_raise_r+0x42>
 800c332:	2316      	movs	r3, #22
 800c334:	6003      	str	r3, [r0, #0]
 800c336:	2001      	movs	r0, #1
 800c338:	e7e7      	b.n	800c30a <_raise_r+0x12>
 800c33a:	2400      	movs	r4, #0
 800c33c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800c340:	4628      	mov	r0, r5
 800c342:	4798      	blx	r3
 800c344:	2000      	movs	r0, #0
 800c346:	e7e0      	b.n	800c30a <_raise_r+0x12>

0800c348 <raise>:
 800c348:	4b02      	ldr	r3, [pc, #8]	; (800c354 <raise+0xc>)
 800c34a:	4601      	mov	r1, r0
 800c34c:	6818      	ldr	r0, [r3, #0]
 800c34e:	f7ff bfd3 	b.w	800c2f8 <_raise_r>
 800c352:	bf00      	nop
 800c354:	200023fc 	.word	0x200023fc

0800c358 <_kill_r>:
 800c358:	b538      	push	{r3, r4, r5, lr}
 800c35a:	4d07      	ldr	r5, [pc, #28]	; (800c378 <_kill_r+0x20>)
 800c35c:	2300      	movs	r3, #0
 800c35e:	4604      	mov	r4, r0
 800c360:	4608      	mov	r0, r1
 800c362:	4611      	mov	r1, r2
 800c364:	602b      	str	r3, [r5, #0]
 800c366:	f7f8 fd41 	bl	8004dec <_kill>
 800c36a:	1c43      	adds	r3, r0, #1
 800c36c:	d102      	bne.n	800c374 <_kill_r+0x1c>
 800c36e:	682b      	ldr	r3, [r5, #0]
 800c370:	b103      	cbz	r3, 800c374 <_kill_r+0x1c>
 800c372:	6023      	str	r3, [r4, #0]
 800c374:	bd38      	pop	{r3, r4, r5, pc}
 800c376:	bf00      	nop
 800c378:	20003278 	.word	0x20003278

0800c37c <_getpid_r>:
 800c37c:	f7f8 bd2e 	b.w	8004ddc <_getpid>

0800c380 <__sread>:
 800c380:	b510      	push	{r4, lr}
 800c382:	460c      	mov	r4, r1
 800c384:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c388:	f000 f894 	bl	800c4b4 <_read_r>
 800c38c:	2800      	cmp	r0, #0
 800c38e:	bfab      	itete	ge
 800c390:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800c392:	89a3      	ldrhlt	r3, [r4, #12]
 800c394:	181b      	addge	r3, r3, r0
 800c396:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800c39a:	bfac      	ite	ge
 800c39c:	6563      	strge	r3, [r4, #84]	; 0x54
 800c39e:	81a3      	strhlt	r3, [r4, #12]
 800c3a0:	bd10      	pop	{r4, pc}

0800c3a2 <__swrite>:
 800c3a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3a6:	461f      	mov	r7, r3
 800c3a8:	898b      	ldrh	r3, [r1, #12]
 800c3aa:	05db      	lsls	r3, r3, #23
 800c3ac:	4605      	mov	r5, r0
 800c3ae:	460c      	mov	r4, r1
 800c3b0:	4616      	mov	r6, r2
 800c3b2:	d505      	bpl.n	800c3c0 <__swrite+0x1e>
 800c3b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c3b8:	2302      	movs	r3, #2
 800c3ba:	2200      	movs	r2, #0
 800c3bc:	f000 f868 	bl	800c490 <_lseek_r>
 800c3c0:	89a3      	ldrh	r3, [r4, #12]
 800c3c2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c3c6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800c3ca:	81a3      	strh	r3, [r4, #12]
 800c3cc:	4632      	mov	r2, r6
 800c3ce:	463b      	mov	r3, r7
 800c3d0:	4628      	mov	r0, r5
 800c3d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c3d6:	f000 b817 	b.w	800c408 <_write_r>

0800c3da <__sseek>:
 800c3da:	b510      	push	{r4, lr}
 800c3dc:	460c      	mov	r4, r1
 800c3de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c3e2:	f000 f855 	bl	800c490 <_lseek_r>
 800c3e6:	1c43      	adds	r3, r0, #1
 800c3e8:	89a3      	ldrh	r3, [r4, #12]
 800c3ea:	bf15      	itete	ne
 800c3ec:	6560      	strne	r0, [r4, #84]	; 0x54
 800c3ee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800c3f2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800c3f6:	81a3      	strheq	r3, [r4, #12]
 800c3f8:	bf18      	it	ne
 800c3fa:	81a3      	strhne	r3, [r4, #12]
 800c3fc:	bd10      	pop	{r4, pc}

0800c3fe <__sclose>:
 800c3fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c402:	f000 b813 	b.w	800c42c <_close_r>
	...

0800c408 <_write_r>:
 800c408:	b538      	push	{r3, r4, r5, lr}
 800c40a:	4d07      	ldr	r5, [pc, #28]	; (800c428 <_write_r+0x20>)
 800c40c:	4604      	mov	r4, r0
 800c40e:	4608      	mov	r0, r1
 800c410:	4611      	mov	r1, r2
 800c412:	2200      	movs	r2, #0
 800c414:	602a      	str	r2, [r5, #0]
 800c416:	461a      	mov	r2, r3
 800c418:	f7f8 fd1f 	bl	8004e5a <_write>
 800c41c:	1c43      	adds	r3, r0, #1
 800c41e:	d102      	bne.n	800c426 <_write_r+0x1e>
 800c420:	682b      	ldr	r3, [r5, #0]
 800c422:	b103      	cbz	r3, 800c426 <_write_r+0x1e>
 800c424:	6023      	str	r3, [r4, #0]
 800c426:	bd38      	pop	{r3, r4, r5, pc}
 800c428:	20003278 	.word	0x20003278

0800c42c <_close_r>:
 800c42c:	b538      	push	{r3, r4, r5, lr}
 800c42e:	4d06      	ldr	r5, [pc, #24]	; (800c448 <_close_r+0x1c>)
 800c430:	2300      	movs	r3, #0
 800c432:	4604      	mov	r4, r0
 800c434:	4608      	mov	r0, r1
 800c436:	602b      	str	r3, [r5, #0]
 800c438:	f7f8 fd2b 	bl	8004e92 <_close>
 800c43c:	1c43      	adds	r3, r0, #1
 800c43e:	d102      	bne.n	800c446 <_close_r+0x1a>
 800c440:	682b      	ldr	r3, [r5, #0]
 800c442:	b103      	cbz	r3, 800c446 <_close_r+0x1a>
 800c444:	6023      	str	r3, [r4, #0]
 800c446:	bd38      	pop	{r3, r4, r5, pc}
 800c448:	20003278 	.word	0x20003278

0800c44c <_fstat_r>:
 800c44c:	b538      	push	{r3, r4, r5, lr}
 800c44e:	4d07      	ldr	r5, [pc, #28]	; (800c46c <_fstat_r+0x20>)
 800c450:	2300      	movs	r3, #0
 800c452:	4604      	mov	r4, r0
 800c454:	4608      	mov	r0, r1
 800c456:	4611      	mov	r1, r2
 800c458:	602b      	str	r3, [r5, #0]
 800c45a:	f7f8 fd26 	bl	8004eaa <_fstat>
 800c45e:	1c43      	adds	r3, r0, #1
 800c460:	d102      	bne.n	800c468 <_fstat_r+0x1c>
 800c462:	682b      	ldr	r3, [r5, #0]
 800c464:	b103      	cbz	r3, 800c468 <_fstat_r+0x1c>
 800c466:	6023      	str	r3, [r4, #0]
 800c468:	bd38      	pop	{r3, r4, r5, pc}
 800c46a:	bf00      	nop
 800c46c:	20003278 	.word	0x20003278

0800c470 <_isatty_r>:
 800c470:	b538      	push	{r3, r4, r5, lr}
 800c472:	4d06      	ldr	r5, [pc, #24]	; (800c48c <_isatty_r+0x1c>)
 800c474:	2300      	movs	r3, #0
 800c476:	4604      	mov	r4, r0
 800c478:	4608      	mov	r0, r1
 800c47a:	602b      	str	r3, [r5, #0]
 800c47c:	f7f8 fd25 	bl	8004eca <_isatty>
 800c480:	1c43      	adds	r3, r0, #1
 800c482:	d102      	bne.n	800c48a <_isatty_r+0x1a>
 800c484:	682b      	ldr	r3, [r5, #0]
 800c486:	b103      	cbz	r3, 800c48a <_isatty_r+0x1a>
 800c488:	6023      	str	r3, [r4, #0]
 800c48a:	bd38      	pop	{r3, r4, r5, pc}
 800c48c:	20003278 	.word	0x20003278

0800c490 <_lseek_r>:
 800c490:	b538      	push	{r3, r4, r5, lr}
 800c492:	4d07      	ldr	r5, [pc, #28]	; (800c4b0 <_lseek_r+0x20>)
 800c494:	4604      	mov	r4, r0
 800c496:	4608      	mov	r0, r1
 800c498:	4611      	mov	r1, r2
 800c49a:	2200      	movs	r2, #0
 800c49c:	602a      	str	r2, [r5, #0]
 800c49e:	461a      	mov	r2, r3
 800c4a0:	f7f8 fd1e 	bl	8004ee0 <_lseek>
 800c4a4:	1c43      	adds	r3, r0, #1
 800c4a6:	d102      	bne.n	800c4ae <_lseek_r+0x1e>
 800c4a8:	682b      	ldr	r3, [r5, #0]
 800c4aa:	b103      	cbz	r3, 800c4ae <_lseek_r+0x1e>
 800c4ac:	6023      	str	r3, [r4, #0]
 800c4ae:	bd38      	pop	{r3, r4, r5, pc}
 800c4b0:	20003278 	.word	0x20003278

0800c4b4 <_read_r>:
 800c4b4:	b538      	push	{r3, r4, r5, lr}
 800c4b6:	4d07      	ldr	r5, [pc, #28]	; (800c4d4 <_read_r+0x20>)
 800c4b8:	4604      	mov	r4, r0
 800c4ba:	4608      	mov	r0, r1
 800c4bc:	4611      	mov	r1, r2
 800c4be:	2200      	movs	r2, #0
 800c4c0:	602a      	str	r2, [r5, #0]
 800c4c2:	461a      	mov	r2, r3
 800c4c4:	f7f8 fcac 	bl	8004e20 <_read>
 800c4c8:	1c43      	adds	r3, r0, #1
 800c4ca:	d102      	bne.n	800c4d2 <_read_r+0x1e>
 800c4cc:	682b      	ldr	r3, [r5, #0]
 800c4ce:	b103      	cbz	r3, 800c4d2 <_read_r+0x1e>
 800c4d0:	6023      	str	r3, [r4, #0]
 800c4d2:	bd38      	pop	{r3, r4, r5, pc}
 800c4d4:	20003278 	.word	0x20003278

0800c4d8 <round>:
 800c4d8:	ec51 0b10 	vmov	r0, r1, d0
 800c4dc:	b570      	push	{r4, r5, r6, lr}
 800c4de:	f3c1 550a 	ubfx	r5, r1, #20, #11
 800c4e2:	f2a5 34ff 	subw	r4, r5, #1023	; 0x3ff
 800c4e6:	2c13      	cmp	r4, #19
 800c4e8:	ee10 2a10 	vmov	r2, s0
 800c4ec:	460b      	mov	r3, r1
 800c4ee:	dc19      	bgt.n	800c524 <round+0x4c>
 800c4f0:	2c00      	cmp	r4, #0
 800c4f2:	da09      	bge.n	800c508 <round+0x30>
 800c4f4:	3401      	adds	r4, #1
 800c4f6:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 800c4fa:	d103      	bne.n	800c504 <round+0x2c>
 800c4fc:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800c500:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800c504:	2200      	movs	r2, #0
 800c506:	e028      	b.n	800c55a <round+0x82>
 800c508:	4d15      	ldr	r5, [pc, #84]	; (800c560 <round+0x88>)
 800c50a:	4125      	asrs	r5, r4
 800c50c:	ea01 0605 	and.w	r6, r1, r5
 800c510:	4332      	orrs	r2, r6
 800c512:	d00e      	beq.n	800c532 <round+0x5a>
 800c514:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 800c518:	fa42 f404 	asr.w	r4, r2, r4
 800c51c:	4423      	add	r3, r4
 800c51e:	ea23 0305 	bic.w	r3, r3, r5
 800c522:	e7ef      	b.n	800c504 <round+0x2c>
 800c524:	2c33      	cmp	r4, #51	; 0x33
 800c526:	dd07      	ble.n	800c538 <round+0x60>
 800c528:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 800c52c:	d101      	bne.n	800c532 <round+0x5a>
 800c52e:	f7f3 fecd 	bl	80002cc <__adddf3>
 800c532:	ec41 0b10 	vmov	d0, r0, r1
 800c536:	bd70      	pop	{r4, r5, r6, pc}
 800c538:	f2a5 4613 	subw	r6, r5, #1043	; 0x413
 800c53c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800c540:	40f5      	lsrs	r5, r6
 800c542:	4228      	tst	r0, r5
 800c544:	d0f5      	beq.n	800c532 <round+0x5a>
 800c546:	2101      	movs	r1, #1
 800c548:	f1c4 0433 	rsb	r4, r4, #51	; 0x33
 800c54c:	fa01 f404 	lsl.w	r4, r1, r4
 800c550:	1912      	adds	r2, r2, r4
 800c552:	bf28      	it	cs
 800c554:	185b      	addcs	r3, r3, r1
 800c556:	ea22 0205 	bic.w	r2, r2, r5
 800c55a:	4619      	mov	r1, r3
 800c55c:	4610      	mov	r0, r2
 800c55e:	e7e8      	b.n	800c532 <round+0x5a>
 800c560:	000fffff 	.word	0x000fffff

0800c564 <_init>:
 800c564:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c566:	bf00      	nop
 800c568:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c56a:	bc08      	pop	{r3}
 800c56c:	469e      	mov	lr, r3
 800c56e:	4770      	bx	lr

0800c570 <_fini>:
 800c570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c572:	bf00      	nop
 800c574:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c576:	bc08      	pop	{r3}
 800c578:	469e      	mov	lr, r3
 800c57a:	4770      	bx	lr
